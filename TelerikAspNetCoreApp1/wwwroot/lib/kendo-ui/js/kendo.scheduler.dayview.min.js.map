{"version":3,"file":"kendo.scheduler.dayview.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendoscheduler","dayview","js","this","$","undefined$1","kendo","window","ui","encode","htmlEncode","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","getDate","MS_PER_MINUTE","MS_PER_DAY","CURRENT_TIME_MARKER_CLASS","CURRENT_TIME_MARKER_ARROW_CLASS","INVERSE_COLOR_CLASS","getMilliseconds","NS","DAY_VIEW_EVENT_TEMPLATE","template","ref","start","end","title","format","replace","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","isMobile","toString","ALLDAY_EVENT_WRAPPER_TEMPLATE","event","ariaLabel","attr","resources","tail","middle","icon","isException","isRecurring","showDelete","messages","head","resizable","singleDay","EVENT_WRAPPER_TEMPLATE","toInvariantTime","staticDate","Date","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","events","_continuousEvents","lastEvent","length","startDate","getTime","idx","splice","uid","push","MultiDayView","init","options","that","fn","call","name","_workDays","workDays","dayIndex","workWeekStart","workWeekEnd","Math","abs","getWorkDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","currentTimeMarkers","currentContentMarkers","timesTableMarkerWidth","position","elementHtml","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","times","find","content","groupsCount","orientation","groups","firstTimesCell","first","lastTimesCell","last","_isRtl","left","groupIndex","currentGroup","utcCurrentTime","toUtcTime","ranges","timeSlotRanges","collection","slotByStartDate","timesTableMarker","eq","prependTo","markerTopPosition","round","innerRect","top","timesTableMarkerCss","right","addClass","css","height","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","_updateResizeHint","startTime","endTime","multiday","enforceAllDaySlot","isMultiDay","width","hint","_removeResizeHint","rangeIndex","startSlot","_isGroupedByDate","slotIdx","index","slot","_slots","offsetWidth","clientHeight","offsetTop","_createResizeHint","offsetLeft","_resizeHint","add","innerWidth","rect","outerRect","snap","bottom","container","appendTo","text","toLocalDate","_updateMoveHint","distance","duration","_removeMoveHint","_end","pop","eventHint","clientWidth","offsetHeight","_createEventElement","clone","inverseColor","_appendMoveHint","_moveHint","_slotByPosition","x","y","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","groupedResources","byDate","_groupOrientation","_columnCountForLevel","_rowCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","time","rowIndex","cellIndex","interval","_timeSlotInterval","verticalViews","tableRows","rowCount","floor","rowMultiplier","cellMultiplier","cells","children","timeIndex","_addTimeSlotGroup","cell","getTimeSlotCollection","currentDate","_dates","UTC","getFullYear","getMonth","addTimeSlot","_addDaySlotGroup","cellCount","addDaySlot","_daySlotGroups","getDaySlotCollection","view","_addResourceView","columnIndex","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","allDay","showFullDay","showWorkDay","ongoingEvents","cssClass","enabled","settings","Template","templateSettings","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","parent","hasClass","pageX","pageY","resourceInfo","_resourceBySlot","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","useClickAsTap","browser","edge","tap","_scrolling","target","location","_allDayUserEvents","_editUserEvents","eventElement","touch","initialTouch","is","_layout","dates","columns","rows","column","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createDateLayout","_createColumnsLayout","_createRowsLayout","toggleFullDay","isWorkDay","_footerItems","items","_defaultTools","todayMobile","fulldayMobile","fulldayDesktop","action","after","msStart","msMin","msMax","msMajorInterval","msInterval","startDay","html","majorTickDivider","_content","_renderRows","rowLevels","columnLevels","append","_virtualContent","isVerticalGroupped","dateID","levels","_recalculateLevels","appendRow","groupIdx","dateIndex","_addCellsToContent","rowIdx","_allDayVerticalGroupRow","result","dateGroupIndex","tmplDate","classes","_isWorkDay","day","getDay","i","_render","_startDate","_endDate","createLayout","_footer","refreshLayout","_isVirtualized","_tryRenderContent","allDayHeader","_allDayHeaderHeight","th","currentTarget","additioanlWidth","additionalHeight","datesHeader","nextDate","nextDay","previousDate","previousDay","destroy","clearInterval","off","inRange","selectionByElement","innerHeight","_timeSlotIndex","_slotIndex","_dateSlotIndex","slots","_positionAllDayEvent","slotRange","slotWidth","startIndex","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","rightOffset","eventHeight","addEvent","slotIndex","createRows","rowEvents","j","eventLength","_arrangeColumns","columnEvents","eventRightOffset","eventElements","slotEvents","tableEl","table","contentEl","columnWidth","createColumns","calculatedWidth","style","scrollWidth","_positionEvent","_startTime","_endTime","borderWidths","getComputedStyles","parseFloat","isOneDayEvent","resize","eventStartTime","_time","eventEndTime","eventStartDate","eventEndDate","eventResources","apply","data","ns","_formatEventAriaLabel","applyStylesFromKendoAttributes","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","slotStart","firstSlot","slotEnd","lastSlot","_updateAllDayHeaderHeight","_height","allDaySlots","refresh","_renderEvents","allDayEventContainer","isMultiDayEvent","slotRanges","newStart","newEnd","dateRange","daySlotRanges","_inverseEventColor","rangeCount","occurrence","render","_cachedEvents","remove","Query","sort","field","dir","toArray","eventsByResource","_eventsByResource","eventsPerDate","map","grep","_ongoingEvents","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","collectionIndex","backward","_changeViewPeriod","endMilliseconds","newDateStart","newDateEnd","verticalByDate","_timeSlotCollections","_getCollections","daySlotCollectionCount","_isInRange","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","indexOf","jQuery"],"sources":["kendo.scheduler.dayview.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.scheduler.view.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.scheduler.view', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendoscheduler = global.kendoscheduler || {}, global.kendoscheduler.dayview = global.kendoscheduler.dayview || {}, global.kendoscheduler.dayview.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"scheduler.dayview\",\n        name: \"Scheduler Day View\",\n        category: \"web\",\n        description: \"The Scheduler Day View\",\n        depends: [ \"scheduler.view\", \"icons\" ],\n        hidden: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            setTime = kendo.date.setTime,\n            SchedulerView = ui.SchedulerView,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            extend = $.extend,\n            getDate = kendo.date.getDate,\n            MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n            MS_PER_DAY = kendo.date.MS_PER_DAY,\n            CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n            CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n            INVERSE_COLOR_CLASS = \"k-event-inverse\",\n            BORDER_SIZE_COEFF = 0.8666,\n            getMilliseconds = kendo.date.getMilliseconds,\n            NS = \".kendoMultiDayView\";\n\n        var DAY_VIEW_EVENT_TEMPLATE = kendo.template(function (ref) {\n            var start = ref.start;\n            var end = ref.end;\n            var title = ref.title;\n\n            return \"<div title=\\\"(\" + (kendo.format(\"{0:t} - {1:t}\", start, end)) + \"): \" + (title.replace(/\"/g,\"&#34;\")) + \"\\\">\" +\n                        \"<div class=\\\"k-event-template k-event-time\\\">\" + (encode(kendo.format(\"{0:t} - {1:t}\", start, end))) + \"</div>\" +\n                        \"<div class=\\\"k-event-template\\\">\" + title + \"</div>\" +\n                    '</div>';\n        }),\n\n            DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template(function (ref) {\n                var start = ref.start;\n                var title = ref.title;\n\n                return \"<div title=\\\"(\" + (kendo.format(\"{0:t}\", start)) + \"): \" + (title.replace(/\"/g,\"&#34;\")) + \"\\\">\" +\n                        \"<div class=\\\"k-event-template\\\">\" + title + \"</div>\" +\n                    '</div>';\n        }),\n\n            DATA_HEADER_TEMPLATE = kendo.template(function (ref) {\n                var isMobile = ref.isMobile;\n                var date = ref.date;\n\n                return (\"<span class='k-link k-nav-day'>\" + (isMobile ? kendo.toString(date,'ddd')[0] : kendo.toString(date,'ddd M/dd')) + \"</span>\");\n        }),\n\n            ALLDAY_EVENT_WRAPPER_TEMPLATE = function (event) { return \"<div role=\\\"button\\\" aria-label=\\\"\" + (encode(event.ariaLabel)) + \"\\\" \" + (kendo.attr('uid')) + \"=\\\"\" + (event.uid) + \"\\\"\" +\n                    ((event.resources[0] ? ((kendo.attr(\"style-background-color\")) + \"=\\\"\" + (event.resources[0].color) + \"\\\" \" + (kendo.attr(\"style-border-color\")) + \"=\\\"\" + (event.resources[0].color) + \"\\\"\") : '')) + \" class=\\\"k-event\\\">\" +\n                    '<span class=\"k-event-actions\">' +\n                        (event.tail || event.middle ? kendo.ui.icon(\"caret-alt-left\") : '') +\n                        (event.isException() ? kendo.ui.icon(\"arrows-no-repeat\") : (event.isRecurring() ? kendo.ui.icon(\"arrow-rotate-cw\") : '') ) +\n                    '</span>' +\n                    kendo.template(event.template)(event) +\n                    '<span class=\"k-event-actions\">' +\n                        (event.showDelete ? (\"<a href=\\\"#\\\" class=\\\"k-link k-event-delete\\\" title=\\\"\" + (event.messages.destroy) + \"\\\" aria-label=\\\"\" + (event.messages.destroy) + \"\\\">\" + (kendo.ui.icon(\"x\")) + \"</a>\") : '') +\n                        (event.head || event.middle ? kendo.ui.icon(\"caret-alt-right\") : '') +\n                    '</span>' +\n                    (event.resizable && !event.singleDay && !event.tail && !event.middle ? '<span class=\"k-resize-handle k-resize-w\"></span>' : '') +\n                    (event.resizable && !event.singleDay && !event.head && !event.middle ? '<span class=\"k-resize-handle k-resize-e\"></span>' : '') +\n                '</div>'; },\n\n            EVENT_WRAPPER_TEMPLATE = function (event) { return \"<div role=\\\"button\\\" aria-label=\\\"\" + (encode(event.ariaLabel)) + \"\\\" \" + (kendo.attr('uid')) + \"=\\\"\" + (event.uid) + \"\\\"\" +\n                    ((event.resources[0] ? ((kendo.attr(\"style-background-color\")) + \"=\\\"\" + (event.resources[0].color) + \"\\\" \" + (kendo.attr(\"style-border-color\")) + \"=\\\"\" + (event.resources[0].color) + \"\\\"\") : '')) + \" class=\\\"k-event\\\">\" +\n                     '<span class=\"k-event-actions\">' +\n                        (event.isException() ? kendo.ui.icon(\"arrows-no-repeat\") : (event.isRecurring() ? kendo.ui.icon(\"arrow-rotate-cw\") : '') ) +\n                    '</span>' +\n                    kendo.template(event.template)(event) +\n                    '<span class=\"k-event-actions\">' +\n                        (event.showDelete ? (\"<a href=\\\"#\\\" class=\\\"k-link k-event-delete\\\" title=\\\"\" + (event.messages.destroy) + \"\\\" aria-label=\\\"\" + (event.messages.destroy) + \"\\\">\" + (kendo.ui.icon(\"x\")) + \"</a>\") : '') +\n                    '</span>' +\n                    '<span class=\"k-event-top-actions\">' +\n                        (event.tail || event.middle ? kendo.ui.icon(\"caret-alt-up\") : '') +\n                    '</span>' +\n                    '<span class=\"k-event-bottom-actions\">' +\n                        (event.head || event.middle ? kendo.ui.icon(\"caret-alt-down\") : '') +\n                    '</span>' +\n                    (event.resizable && !event.tail && !event.middle ? '<span class=\"k-resize-handle k-resize-n\"></span>' : '') +\n                    (event.resizable && !event.head && !event.middle ? '<span class=\"k-resize-handle k-resize-s\"></span>' : '') +\n                '</div>'; };\n\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n\n        function isInDateRange(value, min, max) {\n            return value >= min && value <= max;\n        }\n\n        function isInTimeRange(value, min, max, overlaps) {\n            overlaps = overlaps ? value <= max : value < max;\n            return value > min && overlaps;\n        }\n\n        function addContinuousEvent(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n            var lastEvent = events[events.length - 1];\n            var startDate = getDate(range.start.startDate()).getTime();\n\n            //this handles all day event which is over multiple slots but starts\n            //after one of the time events\n            if (isAllDay && lastEvent &&\n                getDate(lastEvent.start.startDate()).getTime() == startDate) {\n\n                    var idx = events.length - 1;\n                    for ( ; idx > -1; idx --) {\n                        if (events[idx].isAllDay ||\n                            getDate(events[idx].start.startDate()).getTime() < startDate) {\n                                break;\n                            }\n                    }\n\n                    events.splice(idx + 1, 0, {\n                        element: element,\n                        isAllDay: true,\n                        uid: element.attr(kendo.attr(\"uid\")),\n                        start: range.start,\n                        end: range.end\n                    });\n                } else {\n                    events.push({\n                        element: element,\n                        isAllDay: isAllDay,\n                        uid: element.attr(kendo.attr(\"uid\")),\n                        start: range.start,\n                        end: range.end\n                    });\n                }\n        }\n\n        function getWorkDays(options) {\n            if (options.workDays && options.workDays.length) {\n                return options.workDays;\n            }\n\n            var workDays = [];\n            var dayIndex = options.workWeekStart % 7;\n            var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n            workDays.push(dayIndex);\n\n            while (workWeekEnd != dayIndex) {\n                if (dayIndex > 6 ) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n\n        var MultiDayView = SchedulerView.extend({\n            init: function(element, options) {\n                var that = this;\n\n                SchedulerView.fn.init.call(that, element, options);\n\n                that.title = that.options.title || that.options.name;\n\n                that._workDays = getWorkDays(that.options);\n\n                that._templates();\n\n                that._editable();\n\n                that.calculateDateRange();\n\n                that._groups();\n\n                that._currentTime(true);\n            },\n\n            _currentTimeMarkerUpdater: function() {\n                this._updateCurrentTimeMarker(new Date());\n            },\n\n            _updateCurrentTimeMarker: function(currentTime) {\n                var options = this.options,\n                    currentTimeMarkers, currentContentMarkers, timesTableMarkerWidth, position,\n                    elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n\n                    if (options.dataSource && timezone) {\n                       var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                       currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n\n                currentTimeMarkers = this.times.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n                currentContentMarkers = this.content.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n\n                var groupsCount = !options.group || options.group.orientation == \"horizontal\" ? 1 : this.groups.length;\n                var firstTimesCell = this.times.find(\"tr\").first().find(\"th\").first();\n                var lastTimesCell = this.times.find(\"tr\").first().find(\"th\").last();\n\n                if (firstTimesCell.length > 0 && lastTimesCell.length > 0) {\n                    if (this._isRtl) {\n                        position = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                    } else {\n                        position = lastTimesCell.position().left;\n                    }\n                }\n\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n\n                    if (!currentGroup) {\n                        return;\n                    }\n\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                    if (ranges.length === 0) {\n                        return;\n                    }\n\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n\n                    if (slotElement) {\n                        var timesTableMarker = currentTimeMarkers[groupIndex] ? currentTimeMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.times);\n                        var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n\n                        var timesTableMarkerCss = {};\n\n                        if (this._isRtl) {\n                            timesTableMarkerCss.right = position;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n                        } else {\n                            timesTableMarkerCss.left = position;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n                        }\n\n                        if (!timesTableMarkerWidth) {\n                            timesTableMarkerWidth = (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n                        }\n\n                        timesTableMarkerCss.top = markerTopPosition - timesTableMarkerWidth;\n\n                        timesTableMarker.css(timesTableMarkerCss);\n\n                        var contentMarker = currentContentMarkers[groupIndex] ? currentContentMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.content);\n\n                        contentMarker.css({\n                            top: markerTopPosition,\n                            height: \"1px\",\n                            right: 0,\n                            left: 0\n                        });\n                    }\n                }\n            },\n\n            _currentTime: function(setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined$1) {\n                    that._currentTimeMarkerUpdater();\n\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                    }\n                }\n            },\n\n            _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n                var multiday;\n\n                if (this.options.enforceAllDaySlot) {\n                    multiday = event.isMultiDay();\n                } else {\n                    multiday = event.isAllDay;\n                }\n\n                var group = this.groups[groupIndex];\n\n                var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n                var width, height, top, hint;\n\n                this._removeResizeHint();\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = start.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n                            width = slot.offsetWidth;\n                            height = slot.clientHeight;\n                            top = slot.offsetTop;\n\n                            hint = SchedulerView.fn._createResizeHint.call(this,\n                                slot.offsetLeft,\n                                top,\n                                width,\n                                height\n                            );\n\n                            this._resizeHint = this._resizeHint.add(hint);\n                        }\n                    } else {\n                        width = start.offsetWidth;\n                        height = start.clientHeight;\n                        top = start.offsetTop;\n\n                        if (multiday) {\n                            width = range.innerWidth();\n                        } else {\n                            var rect = range.outerRect(startTime, endTime, this.options.snap);\n                            top = rect.top;\n                            height = rect.bottom - rect.top;\n                        }\n\n                        hint = SchedulerView.fn._createResizeHint.call(this,\n                            start.offsetLeft,\n                            top,\n                            width,\n                            height\n                        );\n\n                       this._resizeHint = this._resizeHint.add(hint);\n                    }\n                }\n\n                var format = \"t\";\n                var container = this.content;\n\n                if (multiday) {\n                    format = \"M/dd\";\n                    container = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                    if (!container.length) {\n                        container = this.content;\n                    }\n                }\n\n                this._resizeHint.appendTo(container);\n\n                this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n                this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n                this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n\n            _updateMoveHint: function(event, groupIndex, distance) {\n                var multiday;\n\n                if (this.options.enforceAllDaySlot) {\n                    multiday = event.isMultiDay();\n                } else {\n                    multiday = event.isAllDay;\n                }\n\n                var group = this.groups[groupIndex];\n\n                var start = kendo.date.toUtcTime(event.start) + distance;\n\n                var end = start + event.duration();\n\n                var ranges = group.ranges(start, end, multiday, event.isAllDay);\n\n                start = kendo.timezone.toLocalDate(start);\n\n                end = kendo.timezone.toLocalDate(end);\n\n                this._removeMoveHint(event.uid);\n\n                if (!multiday &&\n                    getMilliseconds(end) < getMilliseconds(this.startTime()) &&\n                    (end < this._end().getTime()) &&\n                    getMilliseconds(end) !== 0 &&\n                    ranges.length > 1) {\n                        ranges.pop();\n                }\n\n                var eventHint = $();\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var startSlot = range.start;\n                    var hint;\n                    var css = {\n                        left: startSlot.offsetLeft + 2,\n                        top: startSlot.offsetTop\n                    };\n\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = startSlot.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n\n                            css.left = this._isRtl ? slot.clientWidth * 0.1 + slot.offsetLeft + 2 : slot.offsetLeft + 2;\n                            css.height = slot.offsetHeight;\n                            css.width = slot.clientWidth * 0.9 - 2;\n\n                            hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                            if (event.inverseColor) {\n                                hint.addClass(INVERSE_COLOR_CLASS);\n                            }\n\n                            this._appendMoveHint(hint, css);\n                            eventHint = eventHint.add(hint);\n                        }\n                    } else {\n                        if (this._isRtl) {\n                           css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                        }\n\n                        if (multiday) {\n                            css.width = range.innerWidth() - 2;\n                        } else {\n                            var rect = range.outerRect(start, end, this.options.snap);\n                            css.top = rect.top;\n                            css.height = rect.bottom - rect.top;\n                            css.width = startSlot.clientWidth * 0.9 - 2;\n                        }\n\n                        hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                        if (event.inverseColor) {\n                            hint.addClass(INVERSE_COLOR_CLASS);\n                        }\n\n                        this._appendMoveHint(hint, css);\n                        eventHint = eventHint.add(hint);\n                    }\n                }\n\n                var content = this.content;\n\n                if (multiday) {\n                    content = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                    if (!content.length) {\n                        content = this.content;\n                    }\n                }\n\n                eventHint.appendTo(content);\n            },\n\n            _appendMoveHint: function(hint, css) {\n                hint.addClass(\"k-event-drag-hint\");\n\n                hint.css(css);\n\n                this._moveHint = this._moveHint.add(hint);\n           },\n\n           _slotByPosition: function(x, y) {\n               var slot, offset;\n\n               if (this._isVerticallyGrouped()) {\n                   offset = this.content.offset();\n                   y += this.content[0].scrollTop;\n                   x += this.content[0].scrollLeft;\n               } else {\n                   offset = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day)\").find(\">div\").offset();\n               }\n\n               if (offset) {\n                   x -= offset.left;\n                   y -= offset.top;\n               }\n\n               x = Math.ceil(x);\n               y = Math.ceil(y);\n\n               var group;\n               var groupIndex;\n\n               for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n\n                    slot = group.daySlotByPosition(x, y, this._isGroupedByDate());\n\n                    if (slot) {\n                        return slot;\n                    }\n               }\n\n               if (offset) {\n                   x += offset.left;\n                   y += offset.top;\n               }\n\n               offset = this.content.offset();\n\n               x -= offset.left;\n               y -= offset.top;\n\n               if (!this._isVerticallyGrouped()) {\n                   y += this.content[0].scrollTop;\n                   x += this.content[0].scrollLeft;\n               }\n\n               x = Math.ceil(x);\n               y = Math.ceil(y);\n\n               for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n\n                    slot = group.timeSlotByPosition(x, y);\n\n                    if (slot) {\n                        return slot;\n                    }\n               }\n\n               return null;\n           },\n\n           _groupCount: function() {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n\n                if (resources.length) {\n                    if (this._groupOrientation() === \"vertical\") {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length - 1);\n                        } else {\n                            return this._rowCountForLevel(resources.length - 1);\n                        }\n                    } else {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length) / this._columnCountForLevel(0);\n                        } else {\n                              return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                        }\n                    }\n                }\n                return 1;\n            },\n\n            _columnCountInResourceView: function() {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n\n                if (!resources.length || this._isVerticallyGrouped()) {\n                    if (byDate) {\n                         return this._rowCountForLevel(0);\n                    } else {\n                         return this._columnCountForLevel(0);\n                    }\n                }\n\n                if (byDate) {\n                    return this._columnCountForLevel(0);\n                } else {\n                    return this._columnOffsetForResource(resources.length);\n                }\n            },\n\n            _timeSlotGroups: function(groupCount, columnCount) {\n                var interval = this._timeSlotInterval();\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n                var tableRows = this.content.find(\"tr:not(.k-scheduler-header-all-day)\");\n                var group, time, rowIndex, cellIndex;\n                var rowCount = tableRows.length;\n\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    rowCount = Math.floor(rowCount / verticalViews);\n                }\n\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var cellMultiplier = 0;\n\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    } else {\n                        cellMultiplier = groupIndex;\n                    }\n\n                    rowIndex = rowMultiplier * rowCount;\n\n                  while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                        var cells = tableRows[rowIndex].children;\n\n                        if (rowIndex % rowCount === 0) {\n                            time = getMilliseconds(new Date(+this.startTime()));\n                        }\n\n                        var timeIndex = 0;\n                        if (byDate) {\n                            if (this._isVerticallyGrouped()) {\n                                for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                    group = this.groups[cellIndex];\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, groupIndex);\n                                }\n                            } else {\n                                group = this.groups[groupIndex];\n                                for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                    timeIndex++;\n                                }\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                 timeIndex++;\n                            }\n                        }\n\n                        time += interval;\n                        rowIndex ++;\n                    }\n                }\n            },\n\n            _addTimeSlotGroup: function(group, cells, cellIndex, time, interval, timeIndex) {\n                  var cell = cells[cellIndex];\n                  var collection = group.getTimeSlotCollection(timeIndex);\n                  var currentDate = this._dates[timeIndex];\n                  if (!currentDate || !cell) {\n                      return;\n                  }\n                  var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                  var start = currentTime + time;\n                  var end = start + interval;\n\n                  collection.addTimeSlot(cell, start, end);\n            },\n\n             _addDaySlotGroup: function(collection, cells, cellIndex, columnCount, cellCount) {\n                    var cell = cells[cellIndex];\n                    var start = this._dates[cellCount];\n                    if (!start) {\n                        return;\n                    }\n                    var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n\n                    collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n            },\n\n            _daySlotGroups: function(groupCount, columnCount) {\n                var tableRows, cellIndex;\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    tableRows = this.element.find(\".k-scheduler-header-all-day\");\n                } else {\n                    tableRows = this.element.find(\".k-scheduler-header-all-day tr\");\n                }\n\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group, collection;\n\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n\n                    var cells = tableRows[rowMultiplier].children;\n                    var cellMultiplier = 0;\n\n                    if (!this._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n\n                    var cellCount = 0;\n                    if (byDate) {\n                        if (this._isVerticallyGrouped()) {\n                            for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                group = this.groups[cellIndex];\n                                collection = group.getDaySlotCollection(0);\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, groupIndex);\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            collection = group.getDaySlotCollection(0);\n                            for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                                cellCount++;\n                            }\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        collection = group.getDaySlotCollection(0);\n                        for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                            cellCount++;\n                        }\n                    }\n                }\n            },\n\n            _groups: function() {\n                var groupCount = this._groupCount();\n                var columnCount = this._columnCountInResourceView();\n\n                this.groups = [];\n\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n\n                    for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                        if (this._dates[columnIndex]) {\n                            view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                        }\n                    }\n\n                    if (this.options.allDaySlot) {\n                        view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                    }\n                }\n\n                this._timeSlotGroups(groupCount, columnCount);\n\n                if (this.options.allDaySlot) {\n                    this._daySlotGroups(groupCount, columnCount);\n                }\n            },\n\n            options: {\n                name: \"MultiDayView\",\n                selectedDateFormat: \"{0:D}\",\n                selectedShortDateFormat: \"{0:d}\",\n                selectedMobileDateFormat: \"{0:MMM} {0:dd} - {1:dd}\",\n                allDaySlot: true,\n                showWorkHours: false,\n                title: \"\",\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                minorTickCount: 2,\n                majorTick: 60,\n                majorTimeHeaderTemplate: function (ref) {\n                    var date = ref.date;\n\n                    return (\"<span>\" + (kendo.toString(date, 't')) + \"</span>\");\n        },\n                minorTimeHeaderTemplate: function () { return \"&#8203;\"; },\n                groupHeaderTemplate: function (ref) {\n                    var text = ref.text;\n\n                    return text;\n        },\n                slotTemplate: function () { return \"&nbsp;\"; },\n                allDaySlotTemplate: function () { return \"&nbsp;\"; },\n                eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n                allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                footer: {\n                    command: \"workDay\"\n                },\n                messages: {\n                    allDay: \"all day\",\n                    showFullDay: \"Show full day\",\n                    showWorkDay: \"Show business hours\"\n                },\n                currentTimeMarker: {\n                     updateInterval: 10000,\n                     useLocalTimezone: true\n                },\n                ongoingEvents: {\n                    cssClass: null,\n                    enabled: true,\n                    updateInterval: 60000\n                },\n                // a hidden option that provides us a fallback to the previous behaviour\n                // e.g. all events of 24 hours or more will be rendered in the allDaySlot\n                enforceAllDaySlot: false\n            },\n\n            events: [\"remove\", \"add\", \"edit\"],\n\n            _templates: function() {\n                var options = this.options,\n                    settings = extend({}, kendo.Template, options.templateSettings);\n\n                this.allDayEventTemplate = kendo.template(ALLDAY_EVENT_WRAPPER_TEMPLATE);\n                this.eventTemplate = kendo.template(EVENT_WRAPPER_TEMPLATE);\n\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n\n            _editable: function() {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n\n            _mouseEditable: function() {\n                var that = this;\n                that.element.on(\"click\" + NS, \".k-event a:has(.k-i-x),.k-event a:has(.k-svg-i-x)\", function(e) {\n                    that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n\n                if (that.options.editable.create !== false) {\n                    that.element.on(\"dblclick\" + NS, \".k-scheduler-content > table td\", function(e) {\n                        if (!$(this).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                            var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    }).on(\"dblclick\" + NS, \".k-scheduler-header-all-day td\", function(e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                        }\n                        e.preventDefault();\n                    });\n                }\n\n                if (that.options.editable.update !== false) {\n                    that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                        that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                        e.preventDefault();\n                    });\n                }\n            },\n\n            _touchEditable: function() {\n                var that = this;\n                var threshold = 0;\n\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: \".k-scheduler-content td\",\n                        useClickAsTap: !kendo.support.browser.edge,\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            if (!$(e.target).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                                var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                                var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                                var slot = that._slotByPosition(x, y);\n\n                                if (slot) {\n                                    var resourceInfo = that._resourceBySlot(slot);\n                                    that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                                }\n\n                                e.preventDefault();\n                            }\n                        }\n                    });\n\n                    that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: \".k-scheduler-header-all-day td\",\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                            var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    });\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: \".k-event\",\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var eventElement = $(e.target).closest(\".k-event\");\n                            var touchElement = $(e.touch.initialTouch);\n\n                            if (touchElement.is(\".k-i-x,.k-svg-i-x\")) {\n                                that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                            } else if (!eventElement.hasClass(\"k-event-active\")) {\n                                that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n\n            _layout: function(dates) {\n                var columns = [];\n                var rows = [];\n                var options = this.options;\n                var that = this;\n                var byDate = that._isGroupedByDate();\n\n                for (var idx = 0; idx < dates.length; idx++) {\n                    var column = {};\n\n                    column.text = that.dateHeaderTemplate({ date: dates[idx], isMobile: that._isMobile() });\n\n                    if (kendo.date.isToday(dates[idx])) {\n                        column.className = \"k-today\";\n                    }\n\n                    columns.push(column);\n                }\n\n                var resources = this.groupedResources;\n\n                if (options.allDaySlot) {\n                    rows.push({\n                        text: options.messages.allDay, allDay: true,\n                        cellContent: function(idx) {\n                            var groupIndex = idx;\n\n                            idx = resources.length && that._groupOrientation() !== \"vertical\" ? idx % dates.length : idx;\n\n                            return that.allDaySlotTemplate({ date: dates[idx], resources: function() {\n                                    return that._resourceBySlot({ groupIndex: groupIndex });\n                                }\n                            });\n                        }\n                    });\n                }\n\n                this._forTimeRange(this.startTime(), this.endTime(), function(date, majorTick, middleRow, lastSlotRow) {\n                    var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n\n                    var row = {\n                        text: template({ date: date }),\n                        className: lastSlotRow ? \"k-slot-cell\" : \"\"\n                    };\n\n                    rows.push(row);\n                });\n\n\n                if (resources.length) {\n                    if (this._groupOrientation() === \"vertical\") {\n                        if (byDate) {\n                            rows = this._createDateLayout(columns, rows);\n                            columns = this._createColumnsLayout(resources, null, this.groupHeaderTemplate);\n                        } else {\n                            rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                        }\n                    } else {\n                          if (byDate) {\n                             columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                          } else {\n                             columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                          }\n                    }\n                }\n\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n\n            toggleFullDay: function() {\n                var options = this.options;\n\n                this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n            },\n\n            _footerItems: function() {\n                var that = this,\n                    items = [],\n                    options = this.options,\n                    command = options.footer.command;\n\n                if (that._isMobile()) {\n                    items.push(that._defaultTools.todayMobile);\n                }\n\n                if (command && command === \"workDay\") {\n                    if (that._isMobile()) {\n                        items.push(that._defaultTools.fulldayMobile);\n                    } else {\n                        items.push(that._defaultTools.fulldayDesktop);\n                    }\n                }\n\n                return items;\n            },\n\n            _forTimeRange: function(min, max, action, after) {\n                min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n                max = toInvariantTime(max);\n\n                var that = this,\n                    msMin = getMilliseconds(min),\n                    msMax = getMilliseconds(max),\n                    minorTickCount = that.options.minorTickCount,\n                    msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                    msInterval = msMajorInterval / minorTickCount || 1,\n                    start = new Date(+min),\n                    startDay = start.getDate(),\n                    msStart,\n                    idx = 0, length,\n                    html = \"\";\n\n                length = MS_PER_DAY / msInterval;\n\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n\n                    length = ((msMax - msMin) / msInterval);\n                }\n\n                length = Math.round(length);\n\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval),\n                        isMajorTickRow = majorTickDivider === 0,\n                        isMiddleRow = majorTickDivider < minorTickCount - 1,\n                        isLastSlotRow = majorTickDivider === minorTickCount - 1;\n\n                    html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n\n                    setTime(start, msInterval, false);\n                }\n\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n\n                if (after) {\n                    html += after(start);\n                }\n\n                return html;\n            },\n\n            _content: function(dates) {\n                var that = this;\n                var html = '';\n\n                html += '<tbody>';\n\n                html += that._renderRows(dates, that.rowLevels, that.columnLevels);\n\n                html += '</tbody>';\n\n                this.content.find(\"table\").append(html);\n            },\n\n            _virtualContent: function(rowLevels, columnLevels) {\n                var that = this;\n                var html = '';\n                var dates = that._dates;\n\n                html += that._renderRows(dates, rowLevels, columnLevels);\n\n                that.content.find(\"table tbody\").append(html);\n            },\n\n            _renderRows: function(dates, rowLevels, columnLevels) {\n                var that = this;\n                var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n                var byDate = that._isGroupedByDate();\n                var dateID = 0;\n                var columnCount = dates.length;\n                var options = that.options;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var resources = this.groupedResources;\n                var html = '';\n\n                if (resources.length) {\n                    var levels = that._recalculateLevels(rowLevels, columnLevels);\n\n                    rowCount = levels.rowCount;\n                    groupsCount = levels.groupsCount;\n                }\n\n                var appendRow = function(date, majorTick, middleRow) {\n                    var content = \"\";\n                    var groupIdx = 0;\n                    var idx, length;\n\n                    content = '<tr' + (middleRow ? ' class=\"k-middle-row\"' : \"\") + '>';\n\n                    if (byDate) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            for (groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                                var dateIndex = idx;\n                                if (isVerticalGroupped) {\n                                    dateIndex = dateID;\n                                }\n                                content = that._addCellsToContent(content, dates, date, dateIndex, groupIdx, rowIdx);\n\n                            }\n                            if (isVerticalGroupped) {\n\n                                break;\n                            }\n                        }\n                    } else {\n                         for (; groupIdx < groupsCount; groupIdx++) {\n                            for (idx = 0, length = columnCount; idx < length; idx++) {\n                                content = that._addCellsToContent(content, dates, date, idx, groupIdx, rowIdx);\n                            }\n                         }\n                    }\n\n                    content += \"</tr>\";\n\n                    return content;\n                };\n\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += options.allDaySlot && isVerticalGroupped ? this._allDayVerticalGroupRow(dates, rowIdx, groupsCount, dateID) : \"\";\n\n                    html += this._forTimeRange(start, end, appendRow);\n                    if (isVerticalGroupped) {\n                            dateID++;\n                    }\n                }\n\n                return html;\n            },\n\n            _recalculateLevels: function(rowLevels, columnLevels) {\n                var that = this;\n                var byDate = that._isGroupedByDate();\n                var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n                var groupsCount = 1;\n                var rowCount = 1;\n\n                if (isVerticalGroupped) {\n                    rowCount = that._rowCountForLevel(rowLevels.length - 2, rowLevels);\n\n                    if (byDate) {\n                         groupsCount = that._columnCountForLevel(columnLevels.length - 1);\n                    }\n                } else {\n                    if (byDate) {\n                         groupsCount = that._columnCountForLevel(columnLevels.length - 1) / this._columnCountForLevel(0);\n                    } else {\n                         groupsCount = that._columnCountForLevel(columnLevels.length - 2);\n                    }\n                }\n\n                return {\n                    rowCount: rowCount,\n                    groupsCount: groupsCount\n                };\n            },\n\n            _allDayVerticalGroupRow: function(dates, groupIndex, groupsCount, dateID) {\n                var that = this;\n                var result = '<tr class=\"k-scheduler-header-all-day\">';\n                var byDate = that._isGroupedByDate();\n                var dateGroupIndex = byDate ? 0 : groupIndex;\n                var allDaySlotTemplate = that.allDaySlotTemplate;\n\n                var resources = function() {\n                    return that._resourceBySlot({ groupIndex: dateGroupIndex });\n                };\n\n                if (byDate) {\n                    for (; dateGroupIndex < groupsCount; dateGroupIndex++) {\n                        result += \"<td>\" + allDaySlotTemplate({ date: dates[dateID], resources: resources }) + \"</td>\";\n                    }\n                } else {\n                    for (var idx = 0; idx < dates.length; idx++) {\n                        result += \"<td>\" + allDaySlotTemplate({ date: dates[idx], resources: resources }) + \"</td>\";\n                    }\n                }\n\n                return result + \"</tr>\";\n            },\n\n            _addCellsToContent: function(content, dates, date, idx, groupIdx, rowIdx) {\n                var that = this;\n                var classes = \"\";\n                var tmplDate;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGroupped = this._groupOrientation() === \"vertical\";\n                var resources = function(groupIndex) {\n                    return function() {\n                        return that._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += \"k-today\";\n                }\n\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(this.options.workDayStart) ||\n                    kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(this.options.workDayEnd) ||\n                    !this._isWorkDay(dates[idx])) {\n                    classes += \" k-nonwork-hour\";\n                }\n\n                content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGroupped && !that._isGroupedByDate() ? rowIdx : groupIdx) });\n                content += \"</td>\";\n                return content;\n            },\n\n            _isWorkDay: function(date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n\n            _render: function(dates) {\n                var that = this;\n\n                dates = dates || [];\n\n                this._dates = dates;\n\n                this._startDate = dates[0];\n\n                this._endDate = dates[(dates.length - 1) || 0];\n\n                this.createLayout(this._layout(dates));\n\n                this._content(dates);\n\n                this._footer();\n\n                this.refreshLayout();\n\n                if (this._isVirtualized()) {\n                    this._tryRenderContent();\n                }\n\n                var allDayHeader = this.element.find(\".k-scheduler-header-all-day td\");\n\n                if (allDayHeader.length) {\n                    this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n                }\n\n                that.element.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                    var th = $(e.currentTarget).closest(\"th\");\n                    var offset = th.offset();\n                    var additioanlWidth = 0;\n                    var additionalHeight = outerHeight(th);\n\n                    if (that._isGroupedByDate()) {\n                        if (that._isVerticallyGrouped()) {\n                            additioanlWidth = outerWidth(that.times);\n                            additionalHeight = 0;\n                        } else {\n                            additionalHeight = outerHeight(that.datesHeader);\n                        }\n                    }\n\n                    var slot = that._slotByPosition(offset.left + additioanlWidth, offset.top + additionalHeight);\n\n                    that.trigger(\"navigate\", { view: \"day\", date: slot.startDate() });\n                });\n            },\n\n            startTime: function() {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n\n            endTime: function() {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n\n            startDate: function() {\n                return this._startDate;\n            },\n\n            endDate: function() {\n                return this._endDate;\n            },\n\n            _end: function(isAllDay) {\n                var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n\n                if (isAllDay) {\n                    time = 0;\n                }\n\n                return new Date(this._endDate.getTime() + time);\n            },\n\n            nextDate: function() {\n                return kendo.date.nextDay(this.endDate());\n            },\n\n            previousDate: function() {\n                return kendo.date.previousDay(this.startDate());\n            },\n\n            calculateDateRange: function() {\n                this._render([this.options.date]);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n\n                if (that.datesHeader) {\n                    that.datesHeader.off(NS);\n                }\n\n                if (that.element) {\n                    that.element.off(NS);\n                }\n\n                SchedulerView.fn.destroy.call(this);\n\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                        that._allDayUserEvents.destroy();\n                    }\n\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            },\n\n            inRange: function(options) {\n                var inRange = SchedulerView.fn.inRange.call(this, options);\n\n                if (options.isAllDay) {\n                    return inRange;\n                }\n\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n\n                var start = getMilliseconds(options.start);\n                var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n\n                return inRange && startTime <= start && end <= endTime;\n            },\n\n            selectionByElement: function(cell) {\n                var offset = cell.offset();\n                // The magical number 5 is to buffer properly the height of the cell for all browsers\n                var height = Math.round(cell.innerHeight()) - 5;\n\n                return this._slotByPosition(offset.left, offset.top + height);\n            },\n\n            _timeSlotInterval: function() {\n                var options = this.options;\n                return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n            },\n\n            _timeSlotIndex: function(date) {\n                var options = this.options;\n                var eventStartTime = getMilliseconds(date);\n                var startTime = getMilliseconds(this.startTime());\n                var timeSlotInterval = ((options.majorTick / options.minorTickCount) * MS_PER_MINUTE);\n\n                return (eventStartTime - startTime) / (timeSlotInterval);\n            },\n\n            _slotIndex: function(date, multiday) {\n                if (multiday) {\n                    return this._dateSlotIndex(date);\n                }\n\n                return this._timeSlotIndex(date);\n            },\n\n            _dateSlotIndex: function(date, overlaps) {\n                var idx;\n                var length;\n                var slots = this._dates || [];\n                var slotStart;\n                var slotEnd;\n                var offset = 1;\n\n                for (idx = 0, length = slots.length; idx < length; idx++) {\n                    slotStart = kendo.date.getDate(slots[idx]);\n                    slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n\n                    if (isInDateRange(date, slotStart, slotEnd)) {\n                        return idx * offset;\n                    }\n                }\n                return -1;\n            },\n\n            _positionAllDayEvent: function(element, slotRange) {\n                var slotWidth = slotRange.innerWidth();\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n\n                var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n\n                var currentColumnCount = this._headerColumnCount || 0;\n\n                var leftOffset = 2;\n\n                var rightOffset = startIndex !== endIndex ? 3 : 2;\n\n                var eventHeight = this._allDayHeaderHeight;\n\n                var start = slotRange.startSlot();\n\n                element\n                    .css({\n                        left: start.offsetLeft + leftOffset,\n                        width: slotWidth - rightOffset\n                    });\n\n                slotRange.addEvent({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n                allDayEvents.push({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n                var rows = SchedulerView.createRows(allDayEvents);\n\n                if (rows.length && rows.length > currentColumnCount) {\n                    this._headerColumnCount = rows.length;\n                }\n\n                var top = slotRange.start.offsetTop;\n\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        $(rowEvents[j].element).css({\n                            top: top + idx * eventHeight,\n                            // apply calculated height.\n                            // -2 is to match normal events\n                            height: eventHeight - 2\n                        });\n                    }\n                }\n            },\n\n            _arrangeColumns: function(element, top, height, slotRange) {\n                var startSlot = slotRange.start;\n\n                element = { element: element, slotIndex: startSlot.index, start: top, end: top + height };\n\n                var columns,\n                    slotWidth = startSlot.clientWidth,\n                    eventRightOffset = slotWidth * 0.10,\n                    columnEvents,\n                    eventElements = slotRange.events(),\n                    slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end),\n                    tableEl = this.table.find(\".k-scheduler-content .k-scheduler-table\")[0],\n                    contentEl = this.table.find(\".k-scheduler-content\")[0];\n\n                slotRange.addEvent(element);\n\n                slotEvents.push(element);\n\n                columns = SchedulerView.createColumns(slotEvents);\n\n                var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n\n                for (var idx = 0, length = columns.length; idx < length; idx++) {\n                    columnEvents = columns[idx].events;\n\n                    for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                        var calculatedWidth = columnWidth - 2;\n                        columnEvents[j].element[0].style.width = (calculatedWidth > 0 ? calculatedWidth : columnWidth) + \"px\";\n\n                        if (this._isRtl && contentEl.clientWidth < contentEl.scrollWidth) {\n                            // RTL mobile rendering with horizontal scroll\n                            columnEvents[j].element[0].style.left = eventRightOffset +\n                                startSlot.offsetLeft +\n                                idx * columnWidth -\n                                (tableEl.clientWidth - contentEl.clientWidth) +\n                                \"px\";\n                        } else {\n                            columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + \"px\";\n                        }\n                    }\n                }\n            },\n\n            _positionEvent: function(event, element, slotRange) {\n                var start = event._startTime || event.start;\n                var end = event._endTime || event.end;\n                var borderWidths = kendo.getComputedStyles(slotRange.start.element, [\"border-top-width\", \"border-bottom-width\"]);\n\n                var rect = slotRange.innerRect(start, end, false);\n\n                var height = rect.bottom - rect.top -\n                                parseFloat(borderWidths[\"border-top-width\"]) -\n                                parseFloat(borderWidths[\"border-bottom-width\"]);\n\n                if (height < 0) {\n                    height = 0;\n                }\n\n                element.css( {\n                    top: rect.top,\n                    height: height\n                } );\n\n                this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n           },\n\n           _createEventElement: function(event, isOneDayEvent, head, tail) {\n                var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n                var options = this.options;\n                var editable = options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var startDate = getDate(this.startDate());\n                var endDate = getDate(this.endDate());\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var eventStartTime = event._time(\"start\");\n                var eventEndTime = event._time(\"end\");\n                var eventTemplate = isOneDayEvent ? options.eventTemplate : options.allDayEventTemplate;\n                var middle;\n\n                if (startTime >= endTime) {\n                    endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n                }\n\n                if (!isOneDayEvent && !event.isAllDay) {\n                    endDate = new Date(endDate.getTime() + MS_PER_DAY);\n                }\n\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n\n                if (event.isAllDay) {\n                    eventEndDate = getDate(event.end);\n                }\n                if ((!isInDateRange(getDate(eventStartDate), startDate, endDate) &&\n                    !isInDateRange(eventEndDate, startDate, endDate)) ||\n                    (isOneDayEvent &&\n                        event.start.getTime() !== event.end.getTime() &&\n                        (eventStartTime < startTime || eventStartTime >= endTime) &&\n                        (eventEndTime > endTime || eventEndTime <= startTime ))) {\n\n                    middle = true;\n                } else if (getDate(eventStartDate) < startDate ||\n                    (isOneDayEvent &&\n                        eventStartTime !== 0 &&\n                        event.start.getTime() !== event.end.getTime() &&\n                        (eventStartTime < startTime || eventStartTime >= endTime))) {\n\n                    tail = true;\n                } else if ((eventEndDate > endDate && !isOneDayEvent) ||\n                    (isOneDayEvent &&\n                        eventEndTime !== 0 &&\n                        event.start.getTime() !== event.end.getTime() &&\n                        (eventEndTime > endTime || eventEndTime <= startTime))) {\n\n                    head = true;\n                }\n\n                var resources = this.eventResources(event);\n\n               if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n                }\n\n               if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n                }\n\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    middle: middle,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: false,\n                    messages: options.messages,\n                    ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay),\n                    template: eventTemplate\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n\n                var element = $(template(data));\n                kendo.applyStylesFromKendoAttributes(element, [\"background-color\", \"border-color\"]);\n\n                return element;\n            },\n\n            _isInTimeSlot: function(event) {\n                var slotStartTime = this.startTime(),\n                    slotEndTime = this.endTime(),\n                    startTime = event._startTime || event.start,\n                    endTime = event._endTime || event.end;\n\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n\n                if (event._date(\"end\") > event._date(\"start\")) {\n                   endTime = +event._date(\"end\") + (MS_PER_DAY - 1);\n                }\n\n                endTime = event._endTime ? endTime - event._date(\"end\") : getMilliseconds(new Date(endTime));\n                startTime = event._startTime ? startTime - event._date(\"start\") : getMilliseconds(new Date(startTime));\n\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n\n                if (slotStartTime === startTime && startTime === endTime) {\n                    return true;\n                }\n\n                var overlaps = startTime !== slotEndTime;\n\n                return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) ||\n                    isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) ||\n                    isInTimeRange(slotStartTime, startTime, endTime) ||\n                    isInTimeRange(slotEndTime, startTime, endTime) ||\n                    (event.end.getDate() > event.start.getDate() && endTime > slotStartTime);\n            },\n\n            _isInDateSlot: function(event) {\n                var groups = this.groups[0];\n                var slotStart = groups.firstSlot().start;\n                var slotEnd = groups.lastSlot().end - 1;\n\n                var startTime = kendo.date.toUtcTime(event.start);\n                var endTime = kendo.date.toUtcTime(event.end);\n\n                return (isInDateRange(startTime, slotStart, slotEnd) ||\n                    isInDateRange(endTime, slotStart, slotEnd) ||\n                    isInDateRange(slotStart, startTime, endTime) ||\n                    isInDateRange(slotEnd, startTime, endTime)) &&\n                    (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay );\n            },\n\n            _updateAllDayHeaderHeight: function(height) {\n                if (this._height !== height) {\n                    this._height = height;\n\n                    var allDaySlots = this.element.find(\".k-scheduler-header-all-day td\");\n\n                    if (allDaySlots.length) {\n                        allDaySlots.parent()\n                            .add(this.element.find(\".k-scheduler-times-all-day\").parent())\n                            .height(height);\n\n                        for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                            this.groups[groupIndex].refresh();\n                        }\n                    }\n                }\n            },\n\n            _renderEvents: function(events, groupIndex) {\n                var allDayEventContainer = this.datesHeader.find(\".k-scheduler-header-wrap > div\");\n                var byDate = this._isGroupedByDate();\n                var event;\n\n                var idx;\n                var length;\n\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent, container, element, ranges, range, start, end, group;\n\n                        if (this.options.enforceAllDaySlot) {\n                            isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                        } else {\n                            isMultiDayEvent = event.isAllDay;\n                        }\n\n                        container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n\n                        if (!isMultiDayEvent) {\n                            if (this._isInTimeSlot(event)) {\n                                group = this.groups[groupIndex];\n\n                                if (!group) {\n                                    continue;\n                                }\n\n                                if (!group._continuousEvents) {\n                                    group._continuousEvents = [];\n                                }\n\n                                ranges = group.slotRanges(event);\n\n                                var rangeCount = ranges.length;\n\n                                for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                    range = ranges[rangeIndex];\n                                    start = event.start;\n                                    end = event.end;\n\n                                    if (rangeCount > 1) {\n                                        if (rangeIndex === 0) {\n                                            end = range.end.endDate();\n                                        } else if (rangeIndex == rangeCount - 1) {\n                                            start = range.start.startDate();\n                                        } else {\n                                            start = range.start.startDate();\n                                            end = range.end.endDate();\n                                        }\n                                    }\n\n                                    var occurrence = event.clone({ start: start, end: end, _startTime: event._startTime, _endTime: event.endTime });\n\n                                    if (this._isInTimeSlot(occurrence)) {\n                                        var head = range.head;\n\n                                        element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n\n                                        element.appendTo(container);\n\n                                        this._inverseEventColor(element);\n\n                                        this._positionEvent(occurrence, element, range);\n\n                                        addContinuousEvent(group, range, element, false);\n                                    }\n                                }\n                            }\n\n                        } else if (this.options.allDaySlot) {\n                            group = this.groups[groupIndex];\n\n                            if (!group) {\n                                continue;\n                            }\n\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n\n                            ranges = group.slotRanges(event);\n\n                            if (ranges.length) {\n                                range = ranges[0];\n                                var startIndex = range.start.index;\n                                var endIndex = range.end.index;\n\n                                if (byDate && startIndex !== endIndex) {\n                                    start = range.start.start;\n                                    end = range.end.end;\n                                    var newStart = start;\n                                    var newEnd = start;\n\n                                    for (var i = range.start.index; i <= range.end.index; i++) {\n                                        element = this._createEventElement(event, !isMultiDayEvent, i !== endIndex, i !== startIndex);\n\n                                        var dateRange = group.daySlotRanges(newStart, newEnd, true)[0];\n                                        newStart = newEnd += kendo.date.MS_PER_DAY;\n\n                                        this._positionAllDayEvent(element, dateRange);\n\n                                        addContinuousEvent(group, dateRange, element, true);\n\n                                        element.appendTo(container);\n\n                                        this._inverseEventColor(element);\n                                    }\n                                } else {\n                                    element = this._createEventElement(event, !isMultiDayEvent);\n\n                                    this._positionAllDayEvent(element, ranges[0]);\n\n                                    addContinuousEvent(group, ranges[0], element, true);\n\n                                    element.appendTo(container);\n\n                                    this._inverseEventColor(element);\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n\n            render: function(events) {\n                var that = this;\n\n                this._headerColumnCount = 0;\n\n                this._cachedEvents = events;\n\n                this._groups();\n\n                this.element.find(\".k-event\").remove();\n\n                events = new kendo.data.Query(events)\n                    .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                    .toArray();\n\n                var eventsByResource = [];\n\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n                var eventsPerDate = $.map(this._dates, function(date) {\n                    return Math.max.apply(null,\n                        $.map(eventsByResource, function(events) {\n                            return $.grep(events, function(event) {\n                                if (that.options.enforceAllDaySlot) {\n                                    return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                                } else {\n                                    return event.isAllDay && isInDateRange(date, getDate(event.start), getDate(event.end));\n                                }\n                            }).length;\n                        })\n                    );\n                });\n\n                var height = Math.max.apply(null, eventsPerDate);\n\n                this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex);\n                }\n\n                this.refreshLayout();\n\n                this._currentTime(false);\n                this._ongoingEvents(events);\n\n                this.trigger(\"activate\");\n            },\n\n            _eventsByResource: function(events, resources, result, parentValue) {\n                var resource = resources[0];\n\n                if (resource) {\n                    var view = resource.dataSource.view();\n\n                    view = view.filter(function(item) {\n                        var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                        return itemParentValue === null || itemParentValue === undefined$1 || itemParentValue === parentValue;\n                    });\n\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n\n            _columnOffsetForResource: function(index) {\n                return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n            },\n\n            _columnCountForLevel: function(level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n\n            _rowCountForLevel: function(level, rowLevels) {\n                rowLevels = rowLevels || this.rowLevels;\n                var rowLevel = rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n\n            clearSelection: function() {\n\n                this.content.add(this.datesHeader)\n                    .find(\".k-selected\")\n                    .removeAttr(\"id\")\n                    .removeClass(\"k-selected\");\n            },\n\n            _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n                var isDaySlot = selection.isAllDay;\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n\n                if (multiple) {\n                    if (vertical) {\n                        if (!isDaySlot &&\n                            startSlot.index === endSlot.index &&\n                            startSlot.collectionIndex === endSlot.collectionIndex) {\n                                selection.backward = reverse;\n                        }\n                    } else {\n                        if ((isDaySlot && startSlot.index === endSlot.index) ||\n                            (!isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex)) {\n                                selection.backward = reverse;\n                        }\n                    }\n                }\n            },\n\n            _changeViewPeriod: function(selection, reverse, vertical) {\n                if (!vertical) {\n                    var date = reverse ? this.previousDate() : this.nextDate();\n                    var start = selection.start;\n                    var end = selection.end;\n                    var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n                    var group = this.groups[selection.groupIndex];\n                    var collection = reverse ? group._timeSlotCollections : group._getCollections(group.daySlotCollectionCount());\n                    var slots = collection[collection.length - 1]._slots;\n                    var slotIndex = (!reverse && !group.daySlotCollectionCount()) ? 0 : slots.length - 1;\n                    var endMilliseconds;\n                    var newDateStart, newDateEnd;\n\n                    newDateStart = new Date(date);\n                    newDateEnd = new Date(date);\n\n                    if (this._isInRange(newDateStart, newDateEnd)) {\n                        return false;\n                    }\n\n                    selection.start = newDateStart;\n                    selection.end = newDateEnd;\n\n                    if (verticalByDate) {\n                        var newStart = new Date(slots[slotIndex].startDate());\n                        var newEnd = new Date(slots[slotIndex].endDate());\n                        endMilliseconds = getMilliseconds(newEnd) ? getMilliseconds(newEnd) : MS_PER_DAY;\n\n                            setTime(selection.start, getMilliseconds(newStart));\n                            setTime(selection.end, endMilliseconds);\n                            if (group.daySlotCollectionCount()) {\n                                selection.isAllDay = !selection.isAllDay;\n                            }\n                    } else {\n                        endMilliseconds = (selection.isAllDay || !getMilliseconds(end)) ? MS_PER_DAY : getMilliseconds(end);\n\n                        setTime(selection.start, getMilliseconds(start));\n                        setTime(selection.end, endMilliseconds);\n                    }\n\n                    if (!this._isVerticallyGrouped()) {\n                        selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                    }\n\n                    selection.events = [];\n\n                    return true;\n                }\n            }\n        });\n\n        extend(true, ui, {\n            MultiDayView: MultiDayView,\n            DayView: MultiDayView.extend({\n                options: {\n                    name: \"DayView\",\n                    title: \"Day\",\n                    selectedMobileDateFormat: \"{0:MMM d}\"\n                },\n                name: \"day\"\n            }),\n            WeekView: MultiDayView.extend({\n                options: {\n                    name: \"WeekView\",\n                    title: \"Week\",\n                    selectedDateFormat: \"{0:D} - {1:D}\",\n                    selectedShortDateFormat: \"{0:d} - {1:d}\"\n                },\n                name: \"week\",\n                calculateDateRange: function() {\n                    var selectedDate = this.options.date,\n                        start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                        idx, length,\n                        dates = [];\n\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            WorkWeekView: MultiDayView.extend({\n                options: {\n                    name: \"WorkWeekView\",\n                    title: \"Work Week\",\n                    selectedDateFormat: \"{0:D} - {1:D}\",\n                    selectedShortDateFormat: \"{0:d} - {1:d}\"\n                },\n                name: \"workWeek\",\n                nextDate: function() {\n                    var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                    return kendo.date.addDays(weekStart, this._workDays[0]);\n                },\n                previousDate: function() {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    var workDays = this._workDays;\n\n                    return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n                },\n                calculateDateRange: function() {\n                    var options = this.options,\n                        selectedDate = options.date,\n                        dayOfWeek = kendo.date.dayOfWeek,\n                        weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                        start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                        end = dayOfWeek(start, options.workWeekEnd, 1),\n                        dates = [],\n                        workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                            return dayOfWeek(weekStart, day, 1).getTime();\n                        }) : null;\n\n                    if (workDays) {\n                        start = weekStart;\n                        end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                    }\n\n                    while (start <= end) {\n                        if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                            dates.push(start);\n                        } else if (!workDays) {\n                            dates.push(start);\n                        }\n\n                        start = kendo.date.nextDay(start);\n                    }\n\n                    this._render(dates);\n                }\n            })\n        });\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}