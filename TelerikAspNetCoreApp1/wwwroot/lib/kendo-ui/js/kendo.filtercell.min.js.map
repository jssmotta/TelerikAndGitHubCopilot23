{"version":3,"file":"kendo.filtercell.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendofiltercell","js","this","$","undefined$1","kendo","window","ui","DataSource","data","Widget","CHANGE","BOOL","ENUM","STRING","EQ","NEQ","nonValueOperators","isNonValueFilter","filter","operator","inArray","findFilterForField","field","filters","isPlainObject","hasOwnProperty","Array","isArray","i","length","result","removeFiltersForField","expression","grep","FilterCell","extend","init","element","options","addClass","dataSource","viewModel","first","type","wrapper","appendTo","that","passedOptions","operators","input","attr","suggestDataSource","fn","call","model","reader","target","getter","values","_parse","value","fields","parse","bind","defaultOperator","observable","operatorVisible","val","get","_clearInProgress","_prevOperator","updateDsFilter","initSuggestDataSource","inputWidth","width","_getColumnTitle","size","_setInputType","showOperators","_createOperatorDropDown","css","text","_createClearIcon","template","setAutoCompleteSource","setComboBoxSource","_refreshUI","_refreshHandler","dataTextField","suggestionOperator","delay","minLength","guid","remove","radioInput","inputName","labelTrue","htmlEncode","messages","isTrue","append","labelFalse","clone","isFalse","column","title","iconEl","items","prop","push","dropdown","operatorDropDown","kendoDropDownList","dataValueField","open","popup","valuePrimitive","ariaLabel","find","icon","dataSelector","customDataSource","group","create","_pageSize","e","index","seen","item","autoComplete","setDataSource","comboBox","manuallyUpdatingVM","set","isEmptyObject","trigger","_applyFilter","logic","currentFilter","toJSON","prevented","mergeResult","_merge","idx","sizeClass","getValidCssClass","clear","html","iconClass","on","clearFilter","destroy","filterModel","unbind","events","name","string","eq","neq","startswith","contains","doesnotcontain","endswith","isnull","isnotnull","isempty","isnotempty","isnullorempty","isnotnullorempty","number","gte","gt","lte","lt","date","enums","plugin","jQuery"],"sources":["kendo.filtercell.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.autocomplete.js'), require('kendo.datepicker.js'), require('kendo.numerictextbox.js'), require('kendo.combobox.js'), require('kendo.dropdownlist.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.autocomplete', 'kendo.datepicker', 'kendo.numerictextbox', 'kendo.combobox', 'kendo.dropdownlist', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendofiltercell = global.kendofiltercell || {}, global.kendofiltercell.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"filtercell\",\n        name: \"Row filter\",\n        category: \"framework\",\n        depends: [ \"autocomplete\", \"icons\" ],\n        advanced: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            DataSource = kendo.data.DataSource,\n            Widget = ui.Widget,\n            CHANGE = \"change\",\n            BOOL = \"boolean\",\n            ENUM = \"enums\",\n            STRING = \"string\",\n            EQ = \"Is equal to\",\n            NEQ = \"Is not equal to\",\n            nonValueOperators = [\"isnull\", \"isnotnull\", \"isempty\", \"isnotempty\", \"isnullorempty\", \"isnotnullorempty\"];\n\n        function isNonValueFilter(filter) {\n            var operator = typeof filter === \"string\" ? filter : filter.operator;\n            return $.inArray(operator, nonValueOperators) > -1;\n        }\n\n        function findFilterForField(filter, field) {\n            var filters = [];\n            if ($.isPlainObject(filter)) {\n                if (filter.hasOwnProperty(\"filters\")) {\n                    filters = filter.filters;\n                } else if (filter.field == field) {\n                    return filter;\n                }\n            }\n            if ((Array.isArray(filter))) {\n               filters = filter;\n            }\n\n            for (var i = 0; i < filters.length; i++) {\n              var result = findFilterForField(filters[i], field);\n              if (result) {\n                 return result;\n              }\n            }\n        }\n\n        function removeFiltersForField(expression, field) {\n            if (expression.filters) {\n                expression.filters = $.grep(expression.filters, function(filter) {\n                    removeFiltersForField(filter, field);\n                    if (filter.filters) {\n                        return filter.filters.length;\n                    } else {\n                        return filter.field != field;\n                    }\n                });\n            }\n        }\n\n        function removeDuplicates(dataSelector, dataTextField) {\n            var getter = kendo.getter(dataTextField, true);\n\n            return function(e) {\n                var items = dataSelector(e),\n                    result = [],\n                    index = 0,\n                    seen = {};\n\n                while (index < items.length) {\n                    var item = items[index++],\n                        text = getter(item);\n\n                    if (!seen.hasOwnProperty(text)) {\n                        result.push(item);\n                        seen[text] = true;\n                    }\n                }\n\n                return result;\n            };\n        }\n\n        var FilterCell = Widget.extend({\n            init: function(element, options) {\n                element = $(element).addClass(\"k-filtercell\");\n                var wrapper = this.wrapper = $(\"<span/>\").appendTo(element);\n                var that = this,\n                    dataSource,\n                    viewModel,\n                    passedOptions = options,\n                    first,\n                    type,\n                    operators = that.operators = options.operators || {},\n                    input = that.input = $(\"<input/>\")\n                        .attr(kendo.attr(\"bind\"), \"value: value\")\n                        .appendTo(wrapper);\n\n                var suggestDataSource = options ? options.suggestDataSource : null;\n\n                if (suggestDataSource) {\n                    // avoid deep cloning the suggest data source\n                    options = $.extend({}, options, { suggestDataSource: {} });\n                }\n\n                Widget.fn.init.call(that, element[0], options);\n\n                if (suggestDataSource) {\n                    that.options.suggestDataSource = suggestDataSource;\n                }\n\n                options = that.options;\n\n                dataSource = that.dataSource = options.dataSource;\n\n                //gets the type from the dataSource or sets default to string\n                that.model = dataSource.reader.model;\n                type = options.type = STRING;\n                var fields = kendo.getter(\"reader.model.fields\", true)(dataSource) || {};\n                var target = fields[options.field];\n                if (target && target.type) {\n                    type = options.type = target.type;\n                }\n                if (options.values) {\n                    options.type = type = ENUM;\n                }\n\n                operators = operators[type] || options.operators[type];\n\n                if (!passedOptions.operator) {\n                    for (first in operators) { // get the first operator\n                        options.operator = first;\n                        break;\n                    }\n                }\n\n                that._parse = function(value) {\n\n                    return value != null ? (value + \"\") : value;\n                };\n\n                if (that.model && that.model.fields) {\n                    var field = that.model.fields[options.field];\n\n                    if (field) {\n                        if (field.parse) {\n                            that._parse = field.parse.bind(field);\n                        }\n                    }\n                }\n\n                that.defaultOperator = options.operator;\n\n                that.viewModel = viewModel = kendo.observable({\n                    operator: options.operator,\n                    value: null,\n                    operatorVisible: function() {\n                        var val = this.get(\"value\");\n                        return (val !== null && val !== undefined$1 && val != \"undefined\") || (isNonValueFilter(this.get(\"operator\")) && that.dataSource.filter() && !that._clearInProgress);\n                    }\n                });\n                that._prevOperator = options.operator;\n                viewModel.bind(CHANGE, that.updateDsFilter.bind(that));\n\n                if (type == STRING) {\n                    that.initSuggestDataSource(options);\n                }\n\n                if (options.inputWidth !== null) {\n                    input.addClass('k-sized-input');\n                    input.width(options.inputWidth);\n                }\n\n                input.attr(\"aria-label\", that._getColumnTitle());\n                input.attr(\"title\", that._getColumnTitle());\n                input.attr(kendo.attr(\"size\"), that.options.size || \"medium\");\n\n                that._setInputType(options, type);\n\n                if (type != BOOL && options.showOperators !== false) {\n                    that._createOperatorDropDown(operators);\n                } else {\n                    $('<div unselectable=\"on\" />')\n                        .css(\"display\", \"none\")\n                        .text(\"eq\")\n                        .appendTo(wrapper);\n\n                    wrapper.addClass(\"k-operator-hidden\");\n                }\n\n                that._createClearIcon();\n\n                kendo.bind(this.wrapper, viewModel);\n\n                if (type == STRING) {\n                    if (!options.template) {\n                        that.setAutoCompleteSource();\n                    }\n                }\n\n                if (type == ENUM) {\n                    that.setComboBoxSource(that.options.values);\n                }\n\n                that._refreshUI();\n\n                that._refreshHandler = that._refreshUI.bind(that);\n\n                that.dataSource.bind(CHANGE, that._refreshHandler);\n\n            },\n\n            _setInputType: function(options, type) {\n                var that = this,\n                    input = that.input;\n\n                if (typeof (options.template) == \"function\") {\n                    options.template.call(that.viewModel, {\n                        element: that.input,\n                        dataSource: that.suggestDataSource\n                    });\n\n                } else if (type == STRING) {\n                    input.attr(kendo.attr(\"role\"), \"autocomplete\")\n                        .attr(kendo.attr(\"text-field\"), options.dataTextField || options.field)\n                        .attr(kendo.attr(\"filter\"), options.suggestionOperator)\n                        .attr(kendo.attr(\"delay\"), options.delay)\n                        .attr(kendo.attr(\"min-length\"), options.minLength)\n                        .attr(kendo.attr(\"value-primitive\"), true);\n                } else if (type == \"date\") {\n                    input.attr(kendo.attr(\"role\"), \"datepicker\")\n                        .attr(\"id\", kendo.guid());\n                } else if (type == BOOL) {\n                    input.remove();\n                    var radioInput = $(\"<input type='radio'/>\");\n                    var wrapper = that.wrapper;\n                    var inputName = kendo.guid();\n\n                    var labelTrue = $(\"<label/>\").text(kendo.htmlEncode(options.messages.isTrue)).append(radioInput);\n                    radioInput.attr(kendo.attr(\"bind\"), \"checked:value\")\n                        .attr(\"name\", inputName)\n                        .val(\"true\");\n\n                    var labelFalse = labelTrue.clone().text(kendo.htmlEncode(options.messages.isFalse));\n                    radioInput.clone().val(\"false\").appendTo(labelFalse);\n                    wrapper.append([labelTrue, labelFalse]);\n\n                } else if (type == \"number\") {\n                    input.attr(kendo.attr(\"role\"), \"numerictextbox\")\n                            .attr(\"title\", that._getColumnTitle());\n                } else if (type == ENUM) {\n                    input.attr(kendo.attr(\"role\"), \"combobox\")\n                            .attr(kendo.attr(\"text-field\"), \"text\")\n                            .attr(kendo.attr(\"suggest\"), true)\n                            .attr(kendo.attr(\"filter\"), \"contains\")\n                            .attr(kendo.attr(\"value-field\"), \"value\")\n                            .attr(kendo.attr(\"value-primitive\"), true);\n                }\n            },\n\n            _getColumnTitle: function() {\n                var column = this.options.column;\n                return column ? column.title || column.field : \"\";\n            },\n\n            _createOperatorDropDown: function(operators) {\n                var items = [],\n                    viewModel = this.viewModel,\n                    iconEl;\n\n                for (var prop in operators) {\n                    items.push({\n                        text: operators[prop],\n                        value: prop\n                    });\n                }\n                var dropdown = $('<input class=\"k-dropdown-operator\" ' + kendo.attr(\"bind\") + '=\"value: operator\"/>').appendTo(this.wrapper);\n                dropdown.attr(\"aria-label\", this._getColumnTitle());\n\n                this.operatorDropDown = dropdown.kendoDropDownList({\n                    dataSource: items,\n                    size: this.options.size || \"medium\",\n                    dataTextField: \"text\",\n                    dataValueField: \"value\",\n                    open: function() {\n                        //TODO calc this\n                        this.popup.element.width(150);\n                    },\n                    valuePrimitive: true\n                }).data(\"kendoDropDownList\");\n\n                viewModel.bind(\"change\", function() {\n                    var ariaLabel = operators[viewModel.operator];\n                    dropdown.attr(\"aria-label\", ariaLabel);\n                });\n\n                iconEl = this.operatorDropDown.wrapper\n                    .attr(\"aria-label\", this._getColumnTitle())\n                    .find('span[class*=\"i-caret-alt-down\"]');\n\n                kendo.ui.icon(iconEl, { icon: \"filter\" });\n            },\n\n            initSuggestDataSource: function(options) {\n                var suggestDataSource = options.suggestDataSource;\n\n                if (!(suggestDataSource instanceof DataSource)) {\n                    if (!options.customDataSource && suggestDataSource) {\n                        suggestDataSource.group = undefined$1;\n                        suggestDataSource.filter = undefined$1;\n                    }\n                    suggestDataSource =\n                        this.suggestDataSource =\n                            DataSource.create(suggestDataSource);\n\n\n                }\n\n                if (!options.customDataSource) {\n                    suggestDataSource._pageSize = undefined$1;\n                    suggestDataSource.reader.data = removeDuplicates(suggestDataSource.reader.data, this.options.field);\n                }\n\n                this.suggestDataSource = suggestDataSource;\n            },\n\n            setAutoCompleteSource: function() {\n                var autoComplete = this.input.data(\"kendoAutoComplete\");\n                if (autoComplete) {\n                    autoComplete.setDataSource(this.suggestDataSource);\n                }\n            },\n\n            setComboBoxSource: function(values) {\n                var dataSource = DataSource.create({\n                    data: values\n                });\n                var comboBox = this.input.data(\"kendoComboBox\");\n                if (comboBox && !this.options.template) {\n                    comboBox.setDataSource(dataSource);\n                }\n            },\n\n            _refreshUI: function() {\n                var that = this,\n                    filter = findFilterForField(that.dataSource.filter(), this.options.field) || {},\n                    viewModel = that.viewModel;\n\n                that.manuallyUpdatingVM = true;\n                filter = $.extend(true, {}, filter);\n                //MVVM check binding does not update the UI when changing the value to null/undefined\n                if (that.options.type == BOOL) {\n                    if (viewModel.value !== filter.value) {\n                        that.wrapper.find(\":radio\").prop(\"checked\", false);\n                    }\n                }\n\n                if (filter.operator) {\n                    viewModel.set(\"operator\", filter.operator);\n                }\n                viewModel.set(\"value\", filter.value);\n                if ($.isEmptyObject(filter)) {\n                    viewModel.trigger(CHANGE, { field: \"operatorVisible\" });\n                }\n                that.manuallyUpdatingVM = false;\n            },\n\n            _applyFilter: function(filter) {\n                if (filter.filters.length) {\n                    this.dataSource.filter(filter);\n                } else {\n                    this.dataSource.filter({});\n                }\n            },\n\n            updateDsFilter: function(e) {\n                var that = this,\n                    model = that.viewModel,\n                    filter;\n\n                if (e.field == \"operator\" && model.value === undefined$1 && !isNonValueFilter(model) && isNonValueFilter(that._prevOperator)) {\n                    filter = that.dataSource.filter() || { filters: [], logic: \"and\" };\n                    removeFiltersForField(filter, that.options.field);\n                    that._prevOperator = model.operator;\n                    that._applyFilter(filter);\n                    return;\n                }\n\n                if (that.manuallyUpdatingVM || (e.field == \"operator\" && model.value === undefined$1 && !isNonValueFilter(model)) ||\n                    (e.field == \"operator\" && that._clearInProgress && model.value !== null)) {\n                    return;\n                }\n\n                var currentFilter = $.extend({}, that.viewModel.toJSON(), { field: that.options.field });\n                that._prevOperator = currentFilter.operator;\n\n                var expression = {\n                    logic: \"and\",\n                    filters: []\n                };\n\n                var prevented = false;\n\n                if ((currentFilter.value !== undefined$1 && currentFilter.value !== null) || (isNonValueFilter(currentFilter) && !this._clearInProgress)) {\n                    expression.filters.push(currentFilter);\n\n                    prevented = that.trigger(CHANGE, { filter: expression, field: that.options.field });\n                }\n\n                if (that._clearInProgress || currentFilter.value === null) {\n                    prevented = that.trigger(CHANGE, { filter: null, field: that.options.field });\n                }\n\n                if (prevented) {\n                    return;\n                }\n\n                var mergeResult = that._merge(expression);\n                that._applyFilter(mergeResult);\n            },\n\n            _merge: function(expression) {\n                var that = this,\n                    logic = expression.logic || \"and\",\n                    filters = expression.filters,\n                    filter,\n                    result = that.dataSource.filter() || { filters: [], logic: \"and\" },\n                    idx,\n                    length;\n\n                removeFiltersForField(result, that.options.field);\n\n                for (idx = 0, length = filters.length; idx < length; idx++) {\n                    filter = filters[idx];\n                    filter.value = that._parse(filter.value);\n                }\n\n                filters = $.grep(filters, function(filter) {\n                    return (filter.value !== \"\" && filter.value !== null) || isNonValueFilter(filter);\n                });\n\n                if (filters.length) {\n                    if (result.filters.length) {\n                        expression.filters = filters;\n\n                        if (result.logic !== \"and\") {\n                            result.filters = [{ logic: result.logic, filters: result.filters }];\n                            result.logic = \"and\";\n                        }\n\n                        if (filters.length > 1) {\n                            result.filters.push(expression);\n                        } else {\n                            result.filters.push(filters[0]);\n                        }\n                    } else {\n                        result.filters = filters;\n                        result.logic = logic;\n                    }\n                }\n\n                return result;\n            },\n\n            _createClearIcon: function() {\n                var that = this;\n                var sizeClass = kendo.getValidCssClass(\"k-button-\", \"size\", this.options.size || \"medium\");\n                var clear = kendo.htmlEncode(that.options.messages.clear);\n\n                $(\"<button type='button' class='k-button \" + sizeClass + \" k-rounded-md k-button-solid k-button-solid-base k-icon-button' title = '\" + clear + \"'/>\")\n                    .attr(\"aria-label\", clear)\n                    .attr(kendo.attr(\"bind\"), \"visible:operatorVisible\")\n                    .html(kendo.ui.icon({ icon: \"filter-clear\", iconClass: \"k-button-icon\" }))\n                    .on(\"click\", that.clearFilter.bind(that))\n                    .appendTo(that.wrapper);\n            },\n\n            clearFilter: function() {\n                this._clearInProgress = true;\n\n                if (isNonValueFilter(this.viewModel.operator)) {\n                    this.viewModel.set(\"operator\", this.defaultOperator);\n                }\n\n                this.viewModel.set(\"value\", null);\n                this._clearInProgress = false;\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.filterModel = null;\n                that.operatorDropDown = null;\n\n                if (that._refreshHandler) {\n                    that.dataSource.bind(CHANGE, that._refreshHandler);\n                    that._refreshHandler = null;\n                }\n\n                kendo.unbind(that.element);\n\n                Widget.fn.destroy.call(that);\n\n                kendo.destroy(that.element);\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            options: {\n                name: \"FilterCell\",\n                delay: 200,\n                minLength: 1,\n                inputWidth: null,\n                values: undefined$1,\n                customDataSource: false,\n                field: \"\",\n                dataTextField: \"\",\n                type: \"string\",\n                suggestDataSource: null,\n                suggestionOperator: \"startswith\",\n                operator: \"eq\",\n                showOperators: true,\n                template: null,\n                messages: {\n                    isTrue: \"is true\",\n                    isFalse: \"is false\",\n                    filter: \"Filter\",\n                    clear: \"Clear\",\n                    operator: \"Operator\"\n                },\n                operators: {\n                    string: {\n                        eq: EQ,\n                        neq: NEQ,\n                        startswith: \"Starts with\",\n                        contains: \"Contains\",\n                        doesnotcontain: \"Does not contain\",\n                        endswith: \"Ends with\",\n                        isnull: \"Is null\",\n                        isnotnull: \"Is not null\",\n                        isempty: \"Is empty\",\n                        isnotempty: \"Is not empty\",\n                        isnullorempty: \"Has no value\",\n                        isnotnullorempty: \"Has value\"\n                    },\n                    number: {\n                        eq: EQ,\n                        neq: NEQ,\n                        gte: \"Is greater than or equal to\",\n                        gt: \"Is greater than\",\n                        lte: \"Is less than or equal to\",\n                        lt: \"Is less than\",\n                        isnull: \"Is null\",\n                        isnotnull: \"Is not null\"\n                    },\n                    date: {\n                        eq: EQ,\n                        neq: NEQ,\n                        gte: \"Is after or equal to\",\n                        gt: \"Is after\",\n                        lte: \"Is before or equal to\",\n                        lt: \"Is before\",\n                        isnull: \"Is null\",\n                        isnotnull: \"Is not null\"\n                    },\n                    enums: {\n                        eq: EQ,\n                        neq: NEQ,\n                        isnull: \"Is null\",\n                        isnotnull: \"Is not null\"\n                    }\n                }\n            }\n        });\n\n        ui.plugin(FilterCell);\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}