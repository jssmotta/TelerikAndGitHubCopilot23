{"version":3,"file":"kendo.pivotgrid.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendopivotgrid","js","this","Navigation","options","tabIndex","root","eventHandlers","update","prototypeAccessors","elements","configurable","first","last","current","get","Array","from","querySelectorAll","selectors","join","querySelector","all","length","find","el","matches","prototype","start","this$1$1","loop","eventType","mouseEvents","ev","target","Element","closest","call","undefined","addEventListener","eventType$1","keyboardEvents","key","stop","removeEventListener","focusElement","element","previous","removeAttribute","classList","remove","setAttribute","String","focus","preventScroll","Object","defineProperties","scrollableValuesSel","scrollableColumnHeaderSel","scrollableRowHeaderSel","emptyCellSel","tableSel","cellSel","scrollables","selectors$1","onEnter","nav","icon","index","indexOf","click","preventDefault","tryScrollLeft","scrollable","elToScroll","offsetLeft","scrollLeft","tryScrollRight","offsetWidth","tryScrollUp","scrollTop","offsetTop","tryScrollDown","offsetHeight","scrollTo","scrollFunc","forEach","scroll","tableMap","table","rows","colsCount","cells","map","c","colSpan","reduce","prev","cur","row","r","curColSpan","colSp","rowSp","rowSpan","ind","findIndex","val","curInd","navigationMap","columnHeader","rowHeader","values","emptyCell","emptyCellRow","fill","i","push","concat","i$1","ctrlKey","metaKey","cellAt","pos","targetPos","getTargetPos","nextPos","next","keyboardEvents$1","keydown","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","o","_target","_ev","nextElementSibling","HTMLElement","parentNode","setTimeout","confHeader","Enter","Space","Home","ro","Boolean","x","End","mouseEvents$1","hasAttribute","PivotGridNavigation","apply","arguments","__proto__","create","constructor","$","undefined$1","kendo","window","ui","encode","htmlEncode","Class","Comparer","data","Widget","DataSource","outerWidth","_outerWidth","outerHeight","_outerHeight","common","pivotgrid","fetchDiscover","normalizeFilter","Query","normalizeSort","toString","identity","extend","keys","isFunction","fetchData","createLocalDataState","createDataTree","sumAggregate","averageAggregate","minAggregate","maxAggregate","createDataState","toColumns","toRows","toTree","toData","headersReducer","RESIZE","READ","CHANGE","ERROR","PROGRESS","MEASURES","STATERESET","AUTO","DIV","NS","ROW_TOTAL_KEY","DATABINDING","DATABOUND","EXPANDMEMBER","HEADERTEMPLATE","ref","id","headerClass","colspan","rowspan","expandable","iconClass","role","expanded","COLLAPSEMEMBER","STATE_EXPANDED_ICONNAME","STATE_EXPANDED_SELECTOR","STATE_COLLAPSED_ICONNAME","HEADER_TEMPLATE","member","caption","name","PIVOTGRID_TREND_ICONS_MAP","KPISTATUS_TEMPLATE","dataItem","value","KPITREND_TEMPLATE","DATACELL_TEMPLATE","fmtValue","tableStyles","normalizeMeasures","measure","descriptor","descriptors","d","type","normalizeMembers","expand","slice","normalizeName","accumulateMembers","accumulator","rootTuple","tuple","level","idx","children","members","stringify","buildPath","descriptorsForAxes","tuples","result","k","JSON","parse","descriptorsForMembers","axis","measures","firstTuple","tupleMembers","found","j","getName","hierarchy","addMissingPathMembers","tupletoSearch","findExistingTuple","tupleToDescriptors","createAggregateGetter","m","measureGetter","getter","field","aggregatorContext","state","aggregate","isNumber","isNaN","isDate","getTime","flattenSortDescriptors","dir","split","pop","createLocalMeasure","format","measureMap","sum","average","min","max","item","bind","uniqueName","functions","count","PivotCubeBuilder","init","dimensions","_normalizeDescriptors","keyField","fields","_rootTuples","rootNames","measureAggregators","parts","aggregatorsLength","dimensionsSchema","measureIdx","rootNamesLength","levelName","levelNum","hasChildren","parentName","_sortMap","sortDescriptors","flattenTree","mapItem","sortedMaps","sortTree","directParentName","fillSortTree","sortItemsTree","flatColumns","_expandedTuples","currentKeys","memberInfo","expandedNames","accumulatorKeys","isEmptyObject","_findExpandedMember","uniquePath","names","expandedIdx","_asTuples","rootInfo","expandedInfo","_measuresInfo","rowAxis","aggregateNames","resultFuncs","formats","_toDataArray","measuresInfo","rowKeys","columnKeys","aggregates","n","column","columnKey","columnMeasureNames","rowMeasureNamesLength","rowMeasureNames","rowLength","columnLength","items","_addData","resultFunc","ordinal","_matchDescriptors","getters","parentField","expectedValue","_calculateAggregate","totalItem","aggregator","_processColumns","columns","rowTotal","updateColumn","path","columnIndex","childrenMap","_measureAggregators","defaultAggregate","measureDescriptors","aggregators","toLowerCase","Error","_buildGetters","_parseDescriptors","parsedDescriptors","parseDescriptors","getRootNames","mapNames","_filter","filter","expr","filters","operator","_normalizeFilter","logic","process","measuresRowAxis","measuresAxis","columnDescriptors","rowDescriptors","rowValue","rowIdx","rowDescriptor","rowName","columnsInfo","rowsInfo","aggregatedData","columnGetters","rowGetters","processed","expandedColumns","expandedRows","hasExpandedRows","sort","axes","PivotTransport","transport","discover","read","destroy","success","catalog","connection","cube","PivotDataSourceV2","schema","cubes","catalogs","hierarchies","levels","cubeSchema","_cubeSchema","fn","transportOptions","_online","XmlaTransportV2","_columns","_rows","_measuresAxis","_measures","serverSorting","serverPaging","serverFiltering","serverGrouping","serverAggregates","normalizeAxis","_mergeState","fetch","callback","that","_data","_query","done","_createSettings","settings","dimensionsSettings","displayValueFunc","sortValueFunc","displayValue","sortValue","defaultHierarchy","restoreMeasure","memberType","_pristineData","distinct","levelUniqueName","childrenCardinality","isPrevented","trigger","params","_params","deferred","Deferred","originalData","reader","columnSettings","columnAxes","rowSettings","rowAxes","stateArgs","dataTree","dataField","columnsData","reverse","_saveState","resolve","newDataState","response","_preventRefresh","error","err","promise","measureAxes","schemaMeasures","command","restrictions","catalogName","cubeName","schemaKPIs","schemaDimensions","schemaHierarchies","dimensionName","dimensionUniqueName","schemaLevels","hierarchyName","hierarchyUniqueName","schemaCubes","schemaCatalogs","schemaMembers","_columnTuples","_rowTuples","_view","PivotDataSource","cubeBuilder","_skipNormalize","_axes","memberUniqueName","schemaData","dataGetter","_rawData","treeOp","_clearAxesData","query","rowsAxisDescriptors","columnsAxisDescriptors","_expandPath","origin","other","memberToExpand","_lastExpanded","_descriptorsForAxis","_process","e","page","pageSize","group","_updateLocalData","expandColumn","expandRow","_processResult","processedData","_requestData","columnIndexes","rowIndexes","resultAxis","axisToSkip","hasColumnTuples","_rowMeasures","_normalizeTuples","_columnMeasures","_normalizeData","columnsLength","rowsLength","validateAxis","sourceTuples","targetTuples","columnIdx","dataIdx","targetColumnsLength","membersCount","measuresLength","tupleIndex","adjustDataByColumn","adjustDataByRow","_mergeAxes","_readData","newData","_createTuple","buildRoot","Number","_hasRoot","source","isRoot","sourceAxes","startIndex","columnMeasures","rowMeasures","oldRowsLength","newRowsLength","oldColumnsLength","newColumnsLength","rowIndex","dataIndex","calcIndex","indices","buildDataIndices","Math","prepareDataOnColumns","parseSource","mergedColumns","mergeTuples","targetIndex","sourceIndex","parseInt","prepareDataOnRows","mergedRows","findDataIndex","parsedRoot","memberIndex","offset","_mergeColumnData","_mergeRowData","toAdd","toJSON","drop","splice","_observe","_ranges","_addRange","_total","_pristineTotal","memberIdx","roots","indexes","tupleName","_addMissingDataItems","metadata","addEmptyDataItem","_normalizeOrdinals","lastOrdinal","converter","_handleCustomErrors","status","reject","kpis","sortFunction","currentItem","newAxis","collection","queue","shift","counter","targetMembers","sourceMembers","equalTuples","second","equal","toFind","membersLength","addMembers","len","findParentMember","parentMember","parentPath","normalizeTupleMeasures","measureIndex","measurePosition","spliceIndex","baseHierarchyPath","memberName","expandMemberDescriptor","sortDescriptor","sortDescriptorForMember","crossJoin","crossJoinCommand","tmp","measureNames","rootName","rootLength","l","child","serializeMembers","crossJoinCommands","dataSource","filterFunctionFormats","contains","doesnotcontain","startswith","endswith","eq","neq","serializeExpression","expression","serializeOptions","parentTagName","capitalize","replace","toUpperCase","xmlaDiscoverCommands","convertersMap","serializeFilters","properties","Catalog","XmlaTransport","RemoteTransport","originalOptions","url","setup","dataType","contentType","parameterMap","ajax","fetchOptions","noop","then","catch","asArray","object","translateAxis","captionGetter","unameGetter","levelNameGetter","levelNumGetter","childrenGetter","hierarchyGetter","parentNameGetter","Member","schemaDataReaderMap","description","groupName","displayFolder","defaultFormat","goal","trend","statusGraphic","trendGraphic","defaultMember","orderingProperty","xmlaReaderMethods","XmlaDataReader","XmlDataReader","_extend","methodName","option","xml","errors","fault","faultstring","faultcode","ordinalGetter","valueGetter","fmtValueGetter","_mapSchema","obj","transports","xmla","readers","removeExpr","expressions","PivotSettingTarget","addClass","_refreshHandler","refresh","template","actions","enabled","emptyTemplate","_sortable","on","action","attr","hasClass","sortable","sortDirection","currentTarget","filterable","fieldMenu","PivotFieldMenu","messages","setting","empty","setDataSource","unbind","kendoSortable","connectWith","hint","cursor","change","add","move","newIndex","_isKPI","validate","isMeasure","isArray","sortExpressions","_sort","skipExpr","allowUnsort","html","sortIcon","_sortIcon","off","sortExpr","PivotSettingTargetV2","parent","text","navigatable","chip","keyCode","DELETE","BACKSPACE","configuratorNavigation","DOWN","altKey","shiftKey","LEFT","RIGHT","UP","otherTarget","PivotFieldMenuV2","events","_applyState","_sortState","_stateFilter","_savedState","_cancelChanges","deepExtend","_initialState","_redraw","_state","newState","modifyInit","blur","_savedFilter","_emptyState","enable","removeClass","_targetsHTML","menuenabled","PivotConfiguratorButton","_element","_attachEvents","configurator","setOptions","toggle","pivot","pivotEl","toggleClass","getKendoPivotGridV2","_setContentWidth","_updateDimensions","PivotContainer","_addClasses","configuratorPosition","className","PivotGridV2","_dataSource","_bindConfigurator","_ariaId","guid","_wrapper","_columnHeadersWrapper","_rowHeadersWrapper","_contentWrapper","wrapper","append","_columnBuilder","ColumnRowBuilder","columnHeaderTemplate","ariaId","_rowBuilder","rowHeaderTemplate","_contentBuilder","ContentBuilderV2","dataCellTemplate","_scrollable","button","is","isRow","paths","eventName","reducerPayLoad","payload","tree","getTree","currentAxes","newHeaders","autoBind","_aria","_initPivotGridNavigation","notify","height","columnWidth","emptyCellLabel","_windowResizeHandler","navigation","firstCell","_matchAriaAttributes","rowHeaderRows","rowHeaderCols","acc","curr","getAttribute","colHeaderRows","colHeaderCells","valueTableCells","firstColHeadersRow","firstColHeaderRowCellsIds","valueCellsIds","filterAndMap","idParts","cell","cellColIndex","colHeaderCellsIds","headerCellColIndex","headerCellColspan","arr","predicate","mapper","_progressHandler","_errorHandler","_requestStart","_error","_resize","div","scrollbar","style","setProperty","document","createElement","cssText","innerHTML","body","appendChild","scrollWidth","removeChild","columnsHeader","rowsHeader","_wheelScroll","delta","wheelDeltaY","one","css","_progress","progress","contentTable","columnTable","rowTable","width","kendoPivotConfiguratorV2","cellInfoByElement","cellInfo","contentBuilder","columnsCount","rowsCount","columnTuple","hash","rowTuple","lastFocusedCellID","_activeElement","lastCellIdWithTabIndex","setTuples","build","setRowColumnInfo","columnHeaderLeafs","getHeaderLeafs","rowHeaderLeafs","columnHeaderBreadth","getBreadth","rowHeaderDepth","plugin","PivotGrid","columnBuilder","rowBuilder","support","isRtl","_createLayout","ColumnBuilder","RowBuilder","ContentBuilder","_templates","builder","eventArgs","parseJSON","request","childrenLoaded","maxChildren","reorderable","kpiStatusTemplate","kpiTrendTemplate","measureFields","columnFields","rowFields","columnTemplate","rowTemplate","dataTemplate","useWithBlock","kendoPivotConfigurator","columnInfo","rowInfo","view","measuresTarget","rowsTarget","columnsTarget","clearTimeout","_headerReflowTimeout","_stateResetHandler","_stateReset","reset","_measureFields","_createSettingTarget","pivotOptions","getIcons","_initSettingTargets","layoutTable","leftContainer","rightContainer","gridWrapper","wrap","content","columnsHeaderTree","dom","Tree","rowsHeaderTree","contentTree","firstChild","_setSectionsWidth","_setSectionsHeight","_setContentHeight","_columnHeaderReflow","browser","mozilla","leftColumn","measureFieldsHeight","columnFieldsHeight","rowFieldsHeight","innerHeight","columnsHeight","padding","firstRowHeight","secondRowHeight","calculatedWidth","minWidth","ceil","_resetColspan","skipScrollbar","clientHeight","_colspan","_layoutTimeout","_axisMeasures","hasMeasure","columnAxis","render","_indexes","touchScroller","contentResized","movable","sender","y","htmlNode","createMetadata","maxMembers","addColElements","addRowElements","addColumCell","rowEl","rowItem","cellEl","total","headerTemplate","columnHeaderRows","treeData","headerRows","headerLeafs","breadth","rowHeaderBreadth","_tree","_breadth","_headerLeafs","tbody","_tbody","colgroup","_colGroup","_rowLength","_buildRows","_normalize","cellsLength","cellIdx","tupleAll","_rowIndex","_row","parentRow","rowKey","notFirst","collapsed","measureRow","_cell","_content","childRow","childrenLength","allCell","nextMember","cellChildren","memberCollapsed","rootLevelNum","cellIconEl","maxcolSpan","allRow","firstMemberName","tuplePath","hasChild","axisInfo","axisInfoMember","skipChildren","firstEmpty","_buildRow","templateInfo","cellContent","startIdx","PivotExcelExporter","widget","columnHeaderTable","rowHeaderTable","columnHeaderLength","rowHeaderLength","autoWidth","_cells","background","color","contentRows","columnRows","rowRows","_freezePane","colSplit","rowSplit","workbook","sheets","freezePane","PivotExcelMixin","proto","excel","saveAsExcel","proxyURL","fileName","book","ooxml","Workbook","toDataURLAsync","dataURI","saveAs","forceProxy","PDFMixin","_drawPDF","_drawPDFShadow","avoidLinks","pdf","jQuery"],"sources":["kendo.pivotgrid.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.pivot.common.js'), require('kendo.dom.js'), require('kendo.data.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.pivot.common', 'kendo.dom', 'kendo.data', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendopivotgrid = global.kendopivotgrid || {}, global.kendopivotgrid.js = factory()));\n})(this, (function () {\n    var Navigation = function Navigation(options) {\n        this.tabIndex = 0;\n        this.root = null;\n        this.eventHandlers = {};\n        this.update = function () { };\n        this.tabIndex = options.tabIndex;\n    };\n\n    var prototypeAccessors = { elements: { configurable: true },first: { configurable: true },last: { configurable: true },current: { configurable: true } };\n    prototypeAccessors.elements.get = function () {\n        return this.root ? Array.from(this.root.querySelectorAll(this.selectors.join(','))) : [];\n    };\n    prototypeAccessors.first.get = function () {\n        return (this.root && this.root.querySelector(this.selectors.join(','))) || null;\n    };\n    prototypeAccessors.last.get = function () {\n        var all = this.elements;\n        return all[all.length - 1] || null;\n    };\n    prototypeAccessors.current.get = function () {\n        return this.elements.find(function (el) { return el.matches(':focus'); });\n    };\n    Navigation.prototype.start = function start (root) {\n            var this$1$1 = this;\n\n        this.root = root;\n        var loop = function ( eventType ) {\n            if (this$1$1.mouseEvents[eventType]) {\n                this$1$1.eventHandlers[eventType] = (function (ev) {\n                    var target = ev.target instanceof Element && ev.target.closest(this$1$1.selectors.join(','));\n                    if (target) {\n                        this$1$1.mouseEvents[eventType].call(undefined, target, this$1$1, ev);\n                    }\n                });\n                root.addEventListener(eventType, this$1$1.eventHandlers[eventType]);\n            }\n        };\n\n            for (var eventType in this$1$1.mouseEvents) loop( eventType );\n        var loop$1 = function ( eventType ) {\n            if (this$1$1.keyboardEvents[eventType$1]) {\n                this$1$1.eventHandlers[eventType$1] = (function (ev) {\n                    var target = ev.target instanceof Element && ev.target.closest(this$1$1.selectors.join(','));\n                    var key = ev.key === ' ' ? 'Space' : ev.key;\n                    if (target && this$1$1.keyboardEvents[eventType$1][key]) {\n                        this$1$1.keyboardEvents[eventType$1][key].call(undefined, target, this$1$1, ev);\n                    }\n                });\n                root.addEventListener(eventType$1, this$1$1.eventHandlers[eventType$1]);\n            }\n        };\n\n            for (var eventType$1 in this$1$1.keyboardEvents) loop$1( eventType );\n    };\n    Navigation.prototype.stop = function stop () {\n        if (this.root) {\n            for (var eventType in this.eventHandlers) {\n                if (this.eventHandlers[eventType]) {\n                    this.root.removeEventListener(eventType, this.eventHandlers[eventType]);\n                }\n            }\n        }\n        this.root = null;\n    };\n    Navigation.prototype.focusElement = function focusElement (element, previous) {\n        if (element) {\n            if (previous) {\n                previous.removeAttribute('tabindex');\n                previous.classList.remove('k-focus');\n            }\n            element.setAttribute('tabindex', String(this.tabIndex));\n            element.focus({ preventScroll: true });\n        }\n    };\n\n    Object.defineProperties( Navigation.prototype, prototypeAccessors );\n\n    var scrollableValuesSel = '.k-pivotgrid .k-pivotgrid-values';\n    var scrollableColumnHeaderSel = '.k-pivotgrid .k-pivotgrid-column-headers';\n    var scrollableRowHeaderSel = '.k-pivotgrid .k-pivotgrid-row-headers';\n    var emptyCellSel = '.k-pivotgrid > .k-pivotgrid-empty-cell';\n    var tableSel = 'table.k-pivotgrid-table';\n    var cellSel = '.k-pivotgrid-cell';\n    var scrollables = [scrollableValuesSel, scrollableColumnHeaderSel, scrollableRowHeaderSel].join(',');\n    var selectors$1 = [\n        emptyCellSel,\n        [scrollableColumnHeaderSel, tableSel, cellSel].join(' '),\n        [scrollableRowHeaderSel, tableSel, cellSel].join(' '),\n        [scrollableValuesSel, tableSel, cellSel].join(' ')\n    ];\n    var onEnter = function (target, nav, ev) {\n        var icon = target.querySelector('.k-icon, .k-svg-icon');\n        if (icon) {\n            var index = nav.elements.indexOf(target);\n            nav.update = function () {\n                nav.focusElement(nav.elements[index], null);\n                nav.update = function () { };\n            };\n            icon.click();\n            ev.preventDefault();\n        }\n    };\n    var tryScrollLeft = function (target, scrollable, elToScroll) {\n        if (target.offsetLeft < scrollable.scrollLeft) {\n            elToScroll.scrollLeft = target.offsetLeft;\n        }\n    };\n    var tryScrollRight = function (target, scrollable, elToScroll) {\n        if (target.offsetLeft + target.offsetWidth > scrollable.scrollLeft + scrollable.offsetWidth &&\n            target.offsetWidth < scrollable.offsetWidth) {\n            elToScroll.scrollLeft = target.offsetLeft + target.offsetWidth - scrollable.offsetWidth;\n        }\n    };\n    var tryScrollUp = function (target, scrollable, elToScroll) {\n        if (scrollable.scrollTop && target.offsetTop < scrollable.scrollTop) {\n            elToScroll.scrollTop = target.offsetTop;\n        }\n    };\n    var tryScrollDown = function (target, scrollable, elToScroll) {\n        if (target.offsetTop + target.offsetHeight > scrollable.scrollTop + scrollable.offsetHeight &&\n            target.offsetHeight < scrollable.offsetHeight) {\n            elToScroll.scrollTop = target.offsetTop + target.offsetHeight - scrollable.offsetHeight;\n        }\n    };\n    var scrollTo = function (target, root, scrollFunc) {\n        var elToScroll = root.querySelector(scrollableValuesSel);\n        var scrollable = target && target.closest(scrollables);\n        if (!elToScroll || !scrollable || !target) {\n            return;\n        }\n        scrollFunc.forEach(function (scroll) { return scroll(target, scrollable, elToScroll); });\n    };\n    var tableMap = function (table) {\n        var rows = Array.from(table.rows);\n        var colsCount = Array.from((rows && rows[0] && rows[0].cells) || [])\n            .map(function (c) { return c.colSpan; })\n            .reduce(function (prev, cur) { return prev + cur; }, 0);\n        var map = rows.map(function () { return new Array(colsCount); });\n        rows.forEach(function (row, r) {\n            var curColSpan = 0;\n            Array.from(row.cells).forEach(function (c) {\n                for (var colSp = 0; colSp < c.colSpan; colSp++) {\n                    for (var rowSp = 0; rowSp < c.rowSpan; rowSp++) {\n                        var ind = map[r + rowSp].findIndex(function (val, curInd) { return curInd >= curColSpan && !val; });\n                        map[r + rowSp][ind] = c;\n                    }\n                    curColSpan++;\n                }\n            });\n        });\n        return map;\n    };\n    var navigationMap = function (root) {\n        var columnHeader = tableMap(root.querySelector([scrollableColumnHeaderSel, tableSel].join(' ')));\n        var rowHeader = tableMap(root.querySelector([scrollableRowHeaderSel, tableSel].join(' ')));\n        var values = tableMap(root.querySelector([scrollableValuesSel, tableSel].join(' ')));\n        var emptyCell = root.querySelector(emptyCellSel);\n        var emptyCellRow = new Array(rowHeader[0].length).fill(emptyCell);\n        var map = [];\n        for (var i = 0; i < columnHeader.length; i++) {\n            map.push(emptyCellRow.concat(columnHeader[i]));\n        }\n        for (var i$1 = 0; i$1 < rowHeader.length; i$1++) {\n            map.push(rowHeader[i$1].concat(values[i$1]));\n        }\n        return map;\n    };\n    var getTargetPos = function (map, target) {\n        for (var r = 0; r < map.length; r++) {\n            for (var c = 0; c < map[r].length; c++) {\n                if (map[r][c] === target) {\n                    return [r, c];\n                }\n            }\n        }\n        return [-1, -1];\n    };\n    var ctrlKey = function (ev) { return ev.ctrlKey || ev.metaKey; };\n    var cellAt = function (root, target, pos) {\n        var map = navigationMap(root);\n        var targetPos = getTargetPos(map, target);\n        var nextPos = [targetPos[0] + pos[0], targetPos[1] + pos[1]];\n        var next = map[nextPos[0]] && map[nextPos[0]][nextPos[1]];\n        while (next && next === target) {\n            nextPos = [nextPos[0] + pos[0], nextPos[1] + pos[1]];\n            next = map[nextPos[0]] && map[nextPos[0]][nextPos[1]];\n        }\n        return next;\n    };\n    var keyboardEvents$1 = {\n        keydown: {\n            ArrowLeft: function (target, nav, ev) {\n                ev.preventDefault();\n                var next = cellAt(nav.root, target, [0, -1]);\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n            },\n            ArrowRight: function (target, nav, ev) {\n                ev.preventDefault();\n                var next = cellAt(nav.root, target, [0, 1]);\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollLeft, tryScrollRight, tryScrollDown, tryScrollUp]);\n            },\n            ArrowUp: function (target, nav, ev) {\n                ev.preventDefault();\n                var next = cellAt(nav.root, target, [-1, 0]);\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n            },\n            ArrowDown: function (target, nav, ev) {\n                ev.preventDefault();\n                var next = cellAt(nav.root, target, [1, 0]);\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollUp, tryScrollDown]);\n            },\n            o: function (_target, nav, _ev) {\n                if (!nav.root) {\n                    return;\n                }\n                // FIX: ADDED manually to fix an issue where depending on the order of the config element and button\n                // you either can open the configurator with Ctrl+O, or you can close the configurator with ESC\n                var next = nav.root.nextElementSibling;\n                if (!(next && next instanceof HTMLElement)) {\n                    return;\n                }\n\n                if (!next.matches('div.k-pivotgrid-configurator-button')) {\n                    next = next.nextElementSibling;\n                }\n\n                if (next && next instanceof HTMLElement && next.matches('div.k-pivotgrid-configurator-button')) {\n                    if (!nav.root.parentNode || nav.root.parentNode.querySelector(\".k-pivotgrid-configurator.k-hidden\")) {\n                        next.click();\n                    }\n\n                    setTimeout(function () {\n                        if (nav.root.parentNode) {\n                            var confHeader = nav.root.parentNode.querySelector('.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview');\n                            if (confHeader instanceof HTMLElement) {\n                                confHeader.setAttribute('tabindex', String(nav.tabIndex));\n                                confHeader.focus();\n                            }\n                        }\n                    }, 0);\n                }\n            },\n            Enter: onEnter,\n            Space: onEnter,\n            Home: function (target, nav, ev) {\n                var map = navigationMap(nav.root);\n                var ctrl = ctrlKey(ev);\n                var row = ctrl ? map[0] : (map.find(function (ro) { return Boolean(ro.find(function (x) { return x === target; })); }) || []);\n                var next = row[0];\n                if (next) {\n                    nav.focusElement(next, target);\n                    scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n                    ev.preventDefault();\n                }\n            },\n            End: function (target, nav, ev) {\n                var map = navigationMap(nav.root);\n                var ctrl = ctrlKey(ev);\n                var row = ctrl ? map[map.length - 1] : (map.find(function (ro) { return Boolean(ro.find(function (x) { return x === target; })); }) || []);\n                var next = row && row[row.length - 1] || null;\n                if (next) {\n                    nav.focusElement(next, target);\n                    scrollTo(next, nav.root, [tryScrollLeft, tryScrollRight, tryScrollUp, tryScrollDown]);\n                    ev.preventDefault();\n                }\n            }\n        }\n    };\n    var mouseEvents$1 = {\n        click: function (target, nav) {\n            if (target && target instanceof HTMLElement) {\n                var prev = nav.elements.find(function (c) { return c.hasAttribute('tabindex'); }) || null;\n                nav.focusElement(target, prev);\n            }\n        }\n    };\n    /**\n     * The PivotGrid keyboard navigation functionality.\n     *\n     * Usage:\n     *\n     * On Initialize\n     * const navigation = new PivotGridNavigation({ tabindex: 0 });\n     *\n     * Turn on\n     * navigation.start(rootDomElement);\n     *\n     * On After Update\n     * navigation.update();\n     *\n     * On Destroy / Turn off\n     * navigation.stop();\n     */\n    var PivotGridNavigation = /*@__PURE__*/(function (Navigation) {\n        function PivotGridNavigation() {\n            Navigation.apply(this, arguments);\n            this.selectors = selectors$1;\n            this.mouseEvents = mouseEvents$1;\n            this.keyboardEvents = keyboardEvents$1;\n        }\n\n        if ( Navigation ) PivotGridNavigation.__proto__ = Navigation;\n        PivotGridNavigation.prototype = Object.create( Navigation && Navigation.prototype );\n        PivotGridNavigation.prototype.constructor = PivotGridNavigation;\n\n        return PivotGridNavigation;\n    }(Navigation));\n\n    var selectors = [\n        '.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview',\n        '.k-pivotgrid-configurator-content .k-chip',\n        '.k-pivotgrid-configurator-actions button'\n    ];\n    var onEscape = function (_target, nav, ev) {\n        if (ev.target instanceof HTMLElement) {\n            if (nav.root) {\n                var pivot = nav.root.previousElementSibling;\n                var confButton = nav.root.nextElementSibling;\n                var pivotCell = Array.from(pivot instanceof HTMLElement ? pivot.querySelectorAll('[tabindex]') : []).find(function (c) { return c.tabIndex >= 0; });\n                if (pivotCell instanceof HTMLElement) {\n                    pivotCell.focus();\n                    if (confButton instanceof HTMLElement) {\n                        confButton.click();\n                    }\n                }\n            }\n        }\n    };\n    var navigate = function (target, nav, ev, dir) {\n        ev.preventDefault();\n        var all = nav.elements;\n        var index = all.indexOf(target) + dir;\n        if (index < 0) {\n            index = all.length - 1;\n        }\n        nav.focusElement(all[index % all.length], target);\n    };\n    var onDelete = function (target, nav, ev) {\n        if (ev.target instanceof HTMLElement) {\n            var deleteButton = ev.target.querySelector('.k-icon.k-i-x-circle, .k-svg-icon.k-svg-i-x-circle');\n            if (deleteButton instanceof HTMLElement) {\n                ev.preventDefault();\n                navigate(target, nav, ev, -1);\n            }\n        }\n    };\n    var keyboardEvents = {\n        keydown: {\n            Tab: function (target, nav, ev) {\n                navigate(target, nav, ev, ev.shiftKey ? -1 : 1);\n            },\n            Escape: onEscape,\n            Delete: onDelete,\n            Backspace: onDelete\n        }\n    };\n    var mouseEvents = {\n        click: function (target, nav) {\n            if (target && target instanceof HTMLElement) {\n                var prev = nav.elements.find(function (c) { return c.hasAttribute('tabindex'); }) || null;\n                nav.focusElement(target, prev);\n            }\n        }\n    };\n    /**\n     * The PivotGrid Configurator keyboard navigation functionality.\n     *\n     * Usage:\n     *\n     * On Initialize\n     * const navigation = new ConfiguratorNavigation({ tabindex: 0 });\n     *\n     * Turn on\n     * navigation.start(rootDomElement);\n     *\n     * On After Update\n     * navigation.update();\n     *\n     * On Destroy / Turn off\n     * navigation.stop();\n     */\n    var ConfiguratorNavigation = /*@__PURE__*/(function (Navigation) {\n        function ConfiguratorNavigation() {\n            Navigation.apply(this, arguments);\n            this.selectors = selectors;\n            this.mouseEvents = mouseEvents;\n            this.keyboardEvents = keyboardEvents;\n        }\n\n        if ( Navigation ) ConfiguratorNavigation.__proto__ = Navigation;\n        ConfiguratorNavigation.prototype = Object.create( Navigation && Navigation.prototype );\n        ConfiguratorNavigation.prototype.constructor = ConfiguratorNavigation;\n\n        return ConfiguratorNavigation;\n    }(Navigation));\n\n    var __meta__ = {\n        id: \"pivotgrid\",\n        name: \"PivotGrid\",\n        category: \"web\",\n        description: \"The PivotGrid widget is a data summarization tool.\",\n        depends: [ \"dom\", \"data\", \"data.xml\", \"sortable\", \"pivot.common\", \"icons\" ],\n        features: [{\n            id: \"pivotgrid-configurator\",\n            name: \"Configurator\",\n            description: \"The PivotConfigurator widget allows the user to select data slices displayed in PivotGrid\",\n            depends: [ \"pivot.configurator\" ]\n        }, {\n            id: \"pivotgrid-filtering\",\n            name: \"Filtering\",\n            description: \"Support for filtering\",\n            depends: [ \"pivot.fieldmenu\" ]\n        }, {\n            id: \"pivotgrid-excel-export\",\n            name: \"Excel export\",\n            description: \"Export pivot grid data as Excel spreadsheet\",\n            depends: [ \"ooxml\" ]\n        }, {\n            id: \"pivotgrid-pdf-export\",\n            name: \"PDF export\",\n            description: \"Export pivot grid data as PDF\",\n            depends: [ \"pdf\", \"drawing\" ]\n        }, {\n            id: \"mobile-scroller\",\n            name: \"Mobile scroller\",\n            description: \"Support for kinetic scrolling in mobile device\",\n            depends: [ \"mobile.scroller\" ]\n        }]\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            Class = kendo.Class,\n            Comparer = kendo.data.Comparer,\n            Widget = ui.Widget,\n            DataSource = kendo.data.DataSource,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            common = window.kendo.pivotgrid.common,\n            fetchDiscover = common.fetchDiscover,\n            normalizeFilter = kendo.data.Query.normalizeFilter,\n            normalizeSort = kendo.data.Query.normalizeSort,\n            toString = {}.toString,\n            identity = function(o) { return o; },\n            map = $.map,\n            extend = $.extend,\n            keys = kendo.keys,\n            isFunction = kendo.isFunction,\n            fetchData = common.fetchData,\n            createLocalDataState = common.createLocalDataState,\n            createDataTree = common.createDataTree,\n            sumAggregate = common.sumAggregate,\n            averageAggregate = common.averageAggregate,\n            minAggregate = common.minAggregate,\n            maxAggregate = common.maxAggregate,\n            createDataState = common.createDataState,\n            toColumns = common.toColumns,\n            toRows = common.toRows,\n            toTree = common.toTree,\n            toData = common.toData,\n            headersReducer = common.headersReducer,\n            RESIZE = \"resize\",\n            READ = \"read\",\n            CHANGE = \"change\",\n            ERROR = \"error\",\n            REQUESTSTART = \"requestStart\",\n            PROGRESS = \"progress\",\n            REQUESTEND = \"requestEnd\",\n            MEASURES = \"Measures\",\n            STATERESET = \"stateReset\",\n            AUTO = \"auto\",\n            DIV = \"<div></div>\",\n            NS = \".kendoPivotGrid\",\n            ROW_TOTAL_KEY = \"__row_total__\",\n            DATABINDING = \"dataBinding\",\n            DATABOUND = \"dataBound\",\n            EXPANDMEMBER = \"expandMember\",\n            HEADERTEMPLATE = function (ref) {\n                var id = ref.id;\n                var key = ref.key;\n                var headerClass = ref.headerClass;\n                var colspan = ref.colspan;\n                var rowspan = ref.rowspan;\n                var expandable = ref.expandable;\n                var iconClass = ref.iconClass;\n                var role = ref.role;\n                var expanded = ref.expanded;\n\n                return \"<th id=\\\"\" + id + \"\\\" role=\\\"\" + role + \"\\\" \" + (expandable ? (\"aria-expanded=\\\"\" + expanded + \"\\\"\") : '') + \"  data-key=\\\"\" + (encode(key)) + \"\\\" class=\\\"k-table-th \" + (encode(headerClass)) + \"\\\" \" + (colspan ? 'colspan=\"' + encode(colspan) + '\"' : '') + \" \" + (rowspan ? 'rowspan=\"' + encode(rowspan) + '\"' : '') + \">\" +\n                                        \"\" + (expandable ? kendo.ui.icon($('<span role=\"presentation\" class=\"k-pivotgrid-toggle\"></span>'), { icon: (\"chevron-\" + (encode(iconClass))) }) : '') +\n                                    '</th>';\n        },\n            COLLAPSEMEMBER = \"collapseMember\",\n            STATE_EXPANDED_ICONNAME = \"caret-alt-down\",\n            STATE_EXPANDED_SELECTOR = \".k-i-\" + STATE_EXPANDED_ICONNAME + \",.k-svg-i-\" + STATE_EXPANDED_ICONNAME,\n            STATE_COLLAPSED_ICONNAME = \"caret-alt-right\",\n            HEADER_TEMPLATE = function (ref) {\n                var member = ref.member;\n\n                return (\"<span>\" + (encode(member.caption || member.name)) + \"</span>\");\n        },\n            PIVOTGRID_TREND_ICONS_MAP = {\n                \"kpi-trend-decrease\": \"caret-alt-down\",\n                \"kpi-trend-increase\": \"caret-alt-up\",\n                \"kpi-trend-equal\": \"minus\",\n            },\n            KPISTATUS_TEMPLATE = function (ref) {\n                var dataItem = ref.dataItem;\n\n                return kendo.ui.icon($((\"<span title=\\\"\" + (encode(dataItem.value)) + \"\\\"></span>\")), { icon: (\"kpi-status-\" + (dataItem.value > 0 ? \"open\" : dataItem.value < 0 ? \"deny\" : \"hold\")) });\n        },\n            KPITREND_TEMPLATE = function (ref) {\n                var dataItem = ref.dataItem;\n\n                return kendo.ui.icon($((\"<span title=\\\"\" + (encode(dataItem.value)) + \"\\\"></span>\")), { icon: PIVOTGRID_TREND_ICONS_MAP[(\"kpi-trend-\" + (dataItem.value > 0 ? \"increase\" : dataItem.value < 0 ? \"decrease\" : \"equal\"))] });\n        },\n            DATACELL_TEMPLATE = function (ref) {\n                var dataItem = ref.dataItem;\n\n                return (\"\" + (dataItem ? encode(dataItem.fmtValue || dataItem.value) || \"&nbsp;\" : \"&nbsp;\"));\n        },\n            LAYOUT_TABLE = '<table class=\"k-pivot-layout\">' +\n                                '<tr>' +\n                                    '<td>' +\n                                        '<div class=\"k-pivot-rowheaders\"></div>' +\n                                    '</td>' +\n                                    '<td>' +\n                                        '<div class=\"k-pivot-table\"></div>' +\n                                    '</td>' +\n                                '</tr>' +\n                            '</table>';\n            var AXIS_ROWS = \"rows\";\n            var AXIS_COLUMNS = \"columns\";\n\n            var tableStyles = {\n                tableRow: \"k-table-row\",\n                header: \"k-header k-table-th\",\n                headerTable: \"k-grid-header-table k-table k-table-md\",\n                table: \"k-table k-table-md\",\n                contentTable: \"k-grid-table k-table k-table-md\",\n                tbody: \"k-table-tbody\",\n                tableCell: \"k-table-td\"\n            };\n\n        function normalizeMeasures(measure) {\n            var descriptor = typeof measure === \"string\" ? [{ name: measure }] : measure;\n            var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            return map(descriptors, function(d) {\n                if (typeof d === \"string\") {\n                    return { name: d };\n                }\n                return $.extend(true, d, { name: d.name, type: d.type });\n            });\n        }\n\n        function normalizeMembers(member) {\n            var descriptor = typeof member === \"string\" ? [{ name: [member], expand: false }] : member;\n            var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            return map(descriptors, function(d) {\n                if (typeof d === \"string\") {\n                    return { name: [d], expand: false };\n                }\n                return { name: (toString.call(d.name) === \"[object Array]\" ? d.name.slice() : [d.name]), expand: d.expand };\n            });\n        }\n\n        function normalizeName(name) {\n            if (name.indexOf(\" \") !== -1) {\n                name = '[\"' + name + '\"]';\n            }\n\n            return name;\n        }\n\n        function accumulateMembers(accumulator, rootTuple, tuple, level) {\n            var idx, length;\n            var children;\n            var member;\n\n            if (!tuple) {\n                tuple = rootTuple;\n            }\n\n            if (!level) {\n                level = 0;\n            }\n\n            member = tuple.members[level];\n\n            if (!member || member.measure) { //return if no member or measure\n                return;\n            }\n\n            children = member.children;\n            length = children.length;\n\n            if (tuple === rootTuple) {\n                accumulator[kendo.stringify([member.name])] = !!length;\n            } else if (length) {\n                accumulator[kendo.stringify(buildPath(tuple, level))] = true;\n            }\n\n            if (length) {\n                for (idx = 0; idx < length; idx++) {\n                    accumulateMembers(accumulator, rootTuple, children[idx], level);\n                }\n            }\n\n            accumulateMembers(accumulator, rootTuple, tuple, level + 1);\n        }\n\n        function descriptorsForAxes(tuples) {\n            var result = {};\n\n            if (tuples.length) {\n                accumulateMembers(result, tuples[0]);\n            }\n\n            var descriptors = [];\n            for (var k in result) {\n                descriptors.push({ name: JSON.parse(k), expand: result[k] });\n            }\n\n            return descriptors;\n        }\n\n        function addMissingPathMembers(members, axis) {\n            var tuples = axis.tuples || [];\n            var firstTuple = tuples[0];\n\n            if (firstTuple && members.length < firstTuple.members.length) {\n                var tupleMembers = firstTuple.members;\n\n                for (var idx = 0; idx < tupleMembers.length; idx++) {\n                    if (tupleMembers[idx].measure) {\n                        continue;\n                    }\n\n                    var found = false;\n                    for (var j = 0; j < members.length; j++) {\n                        if (getName(members[j]).indexOf(tupleMembers[idx].hierarchy) === 0) {\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        members.push({ name: [tupleMembers[idx].name], expand: false }); //calling normalize here to make name from string to array\n                    }\n                }\n            }\n        }\n\n        function tupleToDescriptors(tuple) {\n            var result = [];\n            var members = tuple.members;\n\n            for (var idx = 0; idx < members.length; idx++) {\n                if (members[idx].measure) {\n                    continue;\n                }\n\n                //make tuple name an array\n                result.push({ name: [members[idx].name], expand: members[idx].children.length > 0 });\n            }\n\n            return result;\n        }\n\n        function descriptorsForMembers(axis, members, measures) {\n            axis = axis || {};\n\n            addMissingPathMembers(members, axis);\n\n            if (measures.length > 1) {\n                members.push({\n                    name: MEASURES,\n                    measure: true,\n                    children: normalizeMembers(measures)\n                });\n            }\n\n            var tupletoSearch = {\n                members: members\n            };\n\n            if (axis.tuples) {\n                var result = findExistingTuple(axis.tuples, tupletoSearch);\n                if (result.tuple) {\n                    members = tupleToDescriptors(result.tuple);\n                }\n            }\n\n            return members;\n        }\n\n        function createAggregateGetter(m) {\n            var measureGetter = kendo.getter(m.field, true);\n            return function(aggregatorContext, state) {\n                return m.aggregate(measureGetter(aggregatorContext.dataItem), state, aggregatorContext);\n            };\n        }\n\n        function isNumber(val) {\n            return typeof val === \"number\" && !isNaN(val);\n        }\n\n        function isDate(val) {\n            return val && val.getTime;\n        }\n\n        function getScollWidth() {\n            var scrollbar = 0;\n            var div;\n            if (document && document.createElement) {\n                div = document.createElement('div');\n\n                div.style.cssText = 'overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block';\n                div.innerHTML = '&nbsp;';\n                document.body.appendChild(div);\n\n                scrollbar = div.offsetWidth - div.scrollWidth;\n\n                document.body.removeChild(div);\n            }\n\n            return scrollbar;\n        }\n\n        function flattenSortDescriptors(descriptors) {\n            var result = [];\n            for (var i = 0; i < descriptors.length; i++) {\n                result.push({\n                    dir: descriptors[i].dir,\n                    field: descriptors[i].field.split(\".\").pop()\n                });\n            }\n            return result;\n        }\n\n        function createLocalMeasure(field, key, format, aggregate) {\n            var formatFunc = function(value) { return kendo.format(this.format, value); };\n            var measureMap = {\n                \"sum\": sumAggregate,\n                \"average\": averageAggregate,\n                \"min\": minAggregate,\n                \"max\": maxAggregate,\n            };\n            var valueFunc = function(item) { return item[this.field]; };\n            var measure = {\n                    value: valueFunc.bind({ field: field }),\n                    aggregate: measureMap[aggregate],\n                    caption: key,\n                    uniqueName: key,\n                    type: 2,\n                    name: [key]\n                };\n            if (format) {\n                measure.aggregate.format = formatFunc.bind({ format: format });\n            }\n\n            return measure;\n        }\n\n        function getIcons(sortIcon, options, pivotOptions) {\n            var sortable = options.sortable,\n                filterable = options.filterable,\n                reorderable = pivotOptions.reorderable,\n                result = \"\";\n\n            if (sortable) {\n                result += sortIcon ? (\"<span class=\\\"k-chip-action\\\">\" + (kendo.ui.icon(sortIcon + \"-sm\")) + \"</span>\") : '';\n            }\n\n            if (filterable || sortable) {\n                result += \"<span class=\\\"k-setting-fieldmenu k-chip-action\\\">\" + (kendo.ui.icon(\"more-vertical\")) + \"</span>\";\n            }\n            if (reorderable) {\n                result += \"<span class=\\\"k-setting-delete k-chip-action\\\">\" + (kendo.ui.icon(\"x\")) + \"</span>\";\n            }\n\n            return result;\n        }\n\n        var functions = {\n            sum: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n\n                return accumulator;\n            },\n            count: function(value, state) {\n                return (state.accumulator || 0) + 1;\n            },\n            average: {\n                aggregate: function(value, state) {\n                    var accumulator = state.accumulator;\n\n                    if (state.count === undefined$1) {\n                        state.count = 0;\n                    }\n\n                    if (!isNumber(accumulator)) {\n                        accumulator = value;\n                    } else if (isNumber(value)) {\n                        accumulator += value;\n                    }\n\n                    if (isNumber(value)) {\n                        state.count++;\n                    }\n\n                    return accumulator;\n                },\n                result: function(state) {\n                    var accumulator = state.accumulator;\n\n                    if (isNumber(accumulator)) {\n                        accumulator = accumulator / state.count;\n                    }\n\n                    return accumulator;\n                }\n            },\n            max: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n\n                if (accumulator < value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            },\n            min: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n\n                if (accumulator > value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            }\n        };\n\n        var PivotCubeBuilder = Class.extend({\n            init: function(options) {\n                this.options = extend({}, this.options, options);\n                this.dimensions = this._normalizeDescriptors(\"field\", this.options.dimensions);\n                this.measures = this._normalizeDescriptors(\"name\", this.options.measures);\n            },\n\n            _normalizeDescriptors: function(keyField, descriptors) {\n                descriptors = descriptors || {};\n                var fields = {};\n                var field;\n\n                if (toString.call(descriptors) === \"[object Array]\") {\n                    for (var idx = 0, length = descriptors.length; idx < length; idx++) {\n                        field = descriptors[idx];\n                        if (typeof field === \"string\") {\n                            fields[field] = {};\n                        } else if (field[keyField]) {\n                            fields[field[keyField]] = field;\n                        }\n                    }\n                    descriptors = fields;\n                }\n\n                return descriptors;\n            },\n\n            _rootTuples: function(rootNames, measureAggregators) {\n                var aggregatorsLength = measureAggregators.length || 1;\n                var dimensionsSchema = this.dimensions || [];\n                var root, name, parts;\n                var measureIdx = 0;\n                var idx;\n\n                var rootNamesLength = rootNames.length;\n                var result = [];\n                var keys = [];\n\n                if (rootNamesLength || measureAggregators.length) {\n                    for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n\n                        root = { members: [] };\n\n                        for (idx = 0; idx < rootNamesLength; idx++) {\n                            name = rootNames[idx];\n                            parts = name.split(\"&\");\n\n                            root.members[root.members.length] = {\n                                children: [],\n                                caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                name: name,\n                                levelName: name,\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                hierarchy: name\n                            };\n                        }\n\n                        if (aggregatorsLength > 1) {\n                            root.members[root.members.length] = {\n                                children: [],\n                                caption: (measureAggregators[measureIdx]).caption,\n                                name: measureAggregators[measureIdx].descriptor.name,\n                                levelName: \"MEASURES\",\n                                levelNum: \"0\",\n                                hasChildren: false,\n                                parentName: undefined$1,\n                                hierarchy: \"MEASURES\"\n                            };\n                        }\n\n                        result[result.length] = root;\n                    }\n\n                    keys.push(ROW_TOTAL_KEY);\n                }\n\n                return {\n                    keys: keys,\n                    tuples: result\n                };\n            },\n\n            _sortMap: function(map, sortDescriptors) {\n                var sortedMaps = [];\n                var sortTree = [];\n                var flattenTree = [];\n                var mapItem;\n                var key;\n\n                for (key in map) {\n                    if (!map[key].directParentName) {\n                        sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                    }\n                }\n\n                //if there are no root this means that something is expanding\n                //and we should only sort that part of the tree\n                if (!sortTree.length) {\n                    for (key in map) {\n                        sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                    }\n                }\n\n                fillSortTree(sortTree, map);\n\n                // fill tree recursive\n                for (var i = 0; i < sortDescriptors.length; i++) {\n                    sortItemsTree(sortDescriptors[i].field.split(\".\").pop(), sortTree, Comparer.create({ field: \"name\", dir: sortDescriptors[i].dir }));\n                }\n\n                flattenTree = flatColumns(sortTree);\n\n                //we need to flatten the structure so the tuples can build correctly\n                for (var j = 0; j < flattenTree.length; j++) {\n                    mapItem = map[flattenTree[j].name];\n                    mapItem.index = j;\n                    sortedMaps[j] = mapItem;\n                }\n\n                return sortedMaps;\n            },\n\n            _expandedTuples: function(map, expanded, measureAggregators, sortDescriptors) {\n                var aggregatorsLength = measureAggregators.length || 1;\n                var dimensionsSchema = this.dimensions || [];\n                var measureIdx;\n                var tuple;\n\n                var key;\n                var mapItem;\n                var current;\n                var currentKeys;\n                var accumulator = [];\n                var accumulatorKeys = [];\n                var memberInfo;\n\n                var expandedNames;\n                var parts;\n                var name;\n                var idx;\n\n                if (sortDescriptors && sortDescriptors.length && !$.isEmptyObject(map)) {\n                    map = this._sortMap(map, sortDescriptors);\n                }\n\n                for (key in map) {\n                    mapItem = map[key];\n                    memberInfo = this._findExpandedMember(expanded, mapItem.uniquePath);\n\n                    current = accumulator[memberInfo.index] || [];\n                    currentKeys = accumulatorKeys[memberInfo.index] || [];\n\n                    expandedNames = memberInfo.member.names;\n\n                    for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n                        tuple = { members: [] };\n                        for (idx = 0; idx < expandedNames.length; idx++) {\n                            if (idx === memberInfo.member.expandedIdx) {\n                                tuple.members[tuple.members.length] = {\n                                    children: [],\n                                    caption: mapItem.value,\n                                    name: mapItem.name,\n                                    hasChildren: false,\n                                    levelNum: 1,\n                                    levelName: mapItem.parentName + mapItem.name,\n                                    parentName: mapItem.parentName,\n                                    hierarchy: mapItem.parentName + mapItem.name\n                                };\n\n                                if (measureIdx === 0) {\n                                    currentKeys.push(buildPath(tuple, idx).join(\"\"));\n                                }\n                            } else {\n                                name = expandedNames[idx];\n                                parts = name.split(\"&\");\n                                tuple.members[tuple.members.length] = {\n                                    children: [],\n                                    caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                    name: name,\n                                    levelName: name,\n                                    levelNum: \"0\",\n                                    hasChildren: true,\n                                    parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                    hierarchy: name\n                                };\n                            }\n                        }\n\n                        if (aggregatorsLength > 1) {\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: measureAggregators[measureIdx].caption,\n                                name: measureAggregators[measureIdx].descriptor.name,\n                                levelName: \"MEASURES\",\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: undefined$1,\n                                hierarchy: \"MEASURES\"\n                            };\n                        }\n\n                        current[current.length] = tuple;\n                    }\n\n                    accumulator[memberInfo.index] = current;\n                    accumulatorKeys[memberInfo.index] = currentKeys;\n                }\n\n                return {\n                    keys: accumulatorKeys,\n                    tuples: accumulator\n                };\n            },\n\n            _findExpandedMember: function(members, parentName) {\n                for (var idx = 0; idx < members.length; idx++) {\n                    if (members[idx].uniquePath === parentName) {\n                        return {\n                            member: members[idx],\n                            index: idx\n                        };\n                    }\n                }\n            },\n\n            _asTuples: function(map, descriptor, measureAggregators, sortDescriptors) {\n                measureAggregators = measureAggregators || [];\n\n                var rootInfo = this._rootTuples(descriptor.root, measureAggregators);\n                var expandedInfo = this._expandedTuples(map, descriptor.expanded, measureAggregators, sortDescriptors);\n\n                return {\n                    keys: [].concat.apply(rootInfo.keys, expandedInfo.keys),\n                    tuples: [].concat.apply(rootInfo.tuples, expandedInfo.tuples)\n                };\n            },\n\n            _measuresInfo: function(measures, rowAxis) {\n                var idx = 0;\n                var length = measures && measures.length;\n\n                var aggregateNames = [];\n                var resultFuncs = {};\n                var formats = {};\n\n                var descriptors = (this.measures || {});\n                var measure;\n                var name;\n\n                for (; idx < length; idx++) {\n                    name = measures[idx].descriptor.name;\n                    measure = descriptors[name] || {};\n\n                    aggregateNames.push(name);\n\n                    if (measure.result) {\n                        resultFuncs[name] = measure.result;\n                    }\n\n                    if (measure.format) {\n                        formats[name] = measure.format;\n                    }\n                }\n\n                return {\n                    names: aggregateNames,\n                    formats: formats,\n                    resultFuncs: resultFuncs,\n                    rowAxis: rowAxis\n                };\n            },\n\n            _toDataArray: function(map, measuresInfo, rowKeys, columnKeys) {\n                var result = [];\n\n                var aggregates;\n                var name, i, j, k, n;\n                var row, column, columnKey;\n\n                var rowMeasureNamesLength = 1;\n                var rowMeasureNames = [];\n                var columnMeasureNames;\n\n                var rowLength = rowKeys.length || 1;\n                var columnLength = columnKeys.length || 1;\n\n                if (measuresInfo.rowAxis) {\n                    rowMeasureNames = measuresInfo.names;\n                    rowMeasureNamesLength = rowMeasureNames.length;\n                } else {\n                    columnMeasureNames = measuresInfo.names;\n                }\n\n                for (i = 0; i < rowLength; i++) {\n                    row = map[rowKeys[i] || ROW_TOTAL_KEY];\n\n                    for (n = 0; n < rowMeasureNamesLength; n++) {\n                        if (measuresInfo.rowAxis) {\n                            columnMeasureNames = [rowMeasureNames[n]];\n                        }\n\n                        for (j = 0; j < columnLength; j++) {\n                            columnKey = columnKeys[j] || ROW_TOTAL_KEY;\n                            column = row.items[columnKey];\n\n                            if (columnKey === ROW_TOTAL_KEY) {\n                                aggregates = row.aggregates;\n                            } else {\n                                aggregates = column ? column.aggregates : {};\n                            }\n\n                            for (k = 0; k < columnMeasureNames.length; k++) {\n                                name = columnMeasureNames[k];\n                                this._addData(result, aggregates[name], measuresInfo.formats[name], measuresInfo.resultFuncs[name]);\n                            }\n                        }\n                    }\n                }\n\n                return result;\n            },\n\n            _addData: function(result, value, format, resultFunc) {\n                var fmtValue = \"\";\n                var ordinal;\n\n                if (value) {\n                    value = resultFunc ? resultFunc(value) : value.accumulator;\n                    fmtValue = format ? kendo.format(format, value) : value;\n                }\n\n                ordinal = result.length;\n\n                result[ordinal] = {\n                    ordinal: ordinal,\n                    value: value || \"\",\n                    fmtValue: fmtValue\n                };\n            },\n\n            _matchDescriptors: function(dataItem, descriptor, getters) {\n                var parts;\n                var parentField;\n                var expectedValue;\n\n                var names = descriptor.names;\n                var idx = descriptor.expandedIdx;\n                var value;\n\n                while (idx > 0) {\n                    parts = names[--idx].split(\"&\");\n                    if (parts.length > 1) {\n                        parentField = parts[0];\n                        expectedValue = parts[1];\n\n                        value = getters[parentField](dataItem);\n                        value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                        if (value != expectedValue) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            },\n\n            _calculateAggregate: function(measureAggregators, aggregatorContext, totalItem) {\n                var result = {};\n                var state;\n                var name;\n\n                for (var measureIdx = 0; measureIdx < measureAggregators.length; measureIdx++) {\n                    name = measureAggregators[measureIdx].descriptor.name;\n                    state = totalItem.aggregates[name] || { };\n                    state.accumulator = measureAggregators[measureIdx].aggregator(aggregatorContext, state);\n                    result[name] = state;\n                }\n\n                return result;\n            },\n\n            _processColumns: function(measureAggregators, descriptors, getters, columns, aggregatorContext, rowTotal, state, updateColumn) {\n                var value;\n                var descriptor;\n                var column;\n                var totalItem;\n                var key, name, parentName, path;\n                var dataItem = aggregatorContext.dataItem;\n                var idx = 0;\n\n                for (; idx < descriptors.length; idx++) {\n                    descriptor = descriptors[idx];\n\n                    //checks whether the dataItem is relevant to the descriptors\n                    if (!this._matchDescriptors(dataItem, descriptor, getters)) {\n                        continue;\n                    }\n\n                    path = descriptor.names.slice(0, descriptor.expandedIdx).join(\"\");\n                    name = descriptor.names[descriptor.expandedIdx];\n\n\n                    value = getters[name](dataItem);\n                    value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                    parentName = name;\n                    name = name + \"&\" + value;\n                    key = path + name;\n\n                    column = columns[key] || {\n                        index: state.columnIndex,\n                        parentName: parentName,\n                        name: name,\n                        directParentName: path.indexOf(\"&\") !== -1 ? path : \"\",\n                        uniquePath: path + parentName,\n                        childrenMap: {},\n                        value: value\n                    };\n\n                    if (path && columns[path] && !columns[path].childrenMap[path + parentName + \"&\" + value]) {\n                        columns[path].childrenMap[path + parentName + \"&\" + value] = true;\n                    }\n\n                    totalItem = rowTotal.items[key] || {\n                        aggregates: {}\n                    };\n\n                    rowTotal.items[key] = {\n                        index: column.index,\n                        aggregates: this._calculateAggregate(measureAggregators, aggregatorContext, totalItem)\n                    };\n\n                    if (updateColumn) {\n                        if (!columns[key]) {\n                            state.columnIndex++;\n                        }\n                        columns[key] = column;\n                    }\n                }\n            },\n\n            _measureAggregators: function(options) {\n                var measureDescriptors = options.measures || [];\n                var measures = this.measures || {};\n                var aggregators = [];\n                var descriptor, measure, idx, length;\n                var defaultAggregate, aggregate;\n\n                if (measureDescriptors.length) {\n                    for (idx = 0, length = measureDescriptors.length; idx < length; idx++) {\n                        descriptor = measureDescriptors[idx];\n                        measure = measures[descriptor.name];\n                        defaultAggregate = null;\n\n                        if (measure) {\n                            aggregate = measure.aggregate;\n                            if (typeof aggregate === \"string\") {\n                                defaultAggregate = functions[aggregate.toLowerCase()];\n\n                                if (!defaultAggregate) {\n                                    throw new Error(\"There is no such aggregate function\");\n                                }\n\n                                measure.aggregate = defaultAggregate.aggregate || defaultAggregate;\n                                measure.result = defaultAggregate.result;\n                            }\n\n\n                            aggregators.push({\n                                descriptor: descriptor,\n                                caption: measure.caption,\n                                result: measure.result,\n                                aggregator: createAggregateGetter(measure)\n                            });\n                        }\n                    }\n                } else {\n                    aggregators.push({\n                        descriptor: { name: \"default\" },\n                        caption: \"default\",\n                        aggregator: function() { return 1; }\n                    });\n                }\n\n                return aggregators;\n            },\n\n            _buildGetters: function(names) {\n                var result = {};\n                var parts;\n                var name;\n\n                for (var idx = 0; idx < names.length; idx++) {\n                    name = names[idx];\n                    parts = name.split(\"&\");\n\n                    if (parts.length > 1) {\n                        result[parts[0]] = kendo.getter(parts[0], true);\n                    } else {\n                        result[name] = kendo.getter(normalizeName(name), true);\n                    }\n                }\n\n                return result;\n            },\n\n            _parseDescriptors: function(descriptors) {\n                var parsedDescriptors = parseDescriptors(descriptors);\n                var rootNames = getRootNames(parsedDescriptors.root);\n                var expanded = parsedDescriptors.expanded;\n                var result = [];\n\n                for (var idx = 0; idx < expanded.length; idx++) {\n                    result.push(mapNames(expanded[idx].name, rootNames));\n                }\n\n                return {\n                    root: rootNames,\n                    expanded: result\n                };\n            },\n\n            _filter: function(data, filter) {\n                if (!filter) {\n                    return data;\n                }\n\n                var expr;\n                var idx = 0;\n                var filters = filter.filters;\n\n                for (; idx < filters.length; idx++) {\n                    expr = filters[idx];\n\n                    if (expr.operator === \"in\") {\n                        filters[idx] = this._normalizeFilter(expr);\n                    }\n                }\n\n                return new kendo.data.Query(data).filter(filter).data;\n            },\n\n            _normalizeFilter: function(filter) {\n                var value = filter.value.split(\",\");\n                var result = [];\n\n                if (!value.length) {\n                    return value;\n                }\n\n                for (var idx = 0; idx < value.length; idx++) {\n                    result.push({\n                        field: filter.field,\n                        operator: \"eq\",\n                        value: value[idx]\n                    });\n                }\n\n                return {\n                    logic: \"or\",\n                    filters: result\n                };\n            },\n\n            process: function(data, options) {\n                data = data || [];\n                options = options || {};\n\n                data = this._filter(data, options.filter);\n\n                var measures = options.measures || [];\n\n                var measuresRowAxis = options.measuresAxis === \"rows\";\n\n                var columnDescriptors = options.columns || [];\n                var rowDescriptors = options.rows || [];\n\n                if (!columnDescriptors.length && rowDescriptors.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                    columnDescriptors = rowDescriptors;\n                    rowDescriptors = [];\n                    measuresRowAxis = false;\n                }\n\n                if (!columnDescriptors.length && !rowDescriptors.length) {\n                    measuresRowAxis = false;\n                }\n\n                if (!columnDescriptors.length && measures.length) {\n                    columnDescriptors = normalizeMembers(options.measures);\n                }\n\n                columnDescriptors = this._parseDescriptors(columnDescriptors);\n                rowDescriptors = this._parseDescriptors(rowDescriptors);\n\n                var aggregatedData = {};\n                var columns = {};\n                var rows = {};\n\n                var rowValue;\n                var state = { columnIndex: 0 };\n\n                var measureAggregators = this._measureAggregators(options);\n\n                var columnGetters = this._buildGetters(columnDescriptors.root);\n                var rowGetters = this._buildGetters(rowDescriptors.root);\n\n                var processed = false;\n\n                var expandedColumns = columnDescriptors.expanded;\n                var expandedRows = rowDescriptors.expanded;\n\n                var dataItem;\n                var aggregatorContext;\n                var hasExpandedRows = expandedRows.length !== 0;\n\n                var rowIdx, rowDescriptor, rowName, rowTotal;\n                var key, path, parentName, value;\n                var columnsInfo, rowsInfo;\n                var length = data.length;\n                var idx = 0;\n\n                if (columnDescriptors.root.length || rowDescriptors.root.length) {\n                    processed = true;\n\n                    for (idx = 0; idx < length; idx++) {\n                        dataItem = data[idx];\n\n                        aggregatorContext = {\n                            dataItem: dataItem,\n                            index: idx\n                        };\n\n                        rowTotal = aggregatedData[ROW_TOTAL_KEY] || {\n                            items: {},\n                            aggregates: {}\n                        };\n\n                        this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, rowTotal, state, !hasExpandedRows);\n\n                        rowTotal.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, rowTotal);\n                        aggregatedData[ROW_TOTAL_KEY] = rowTotal;\n\n                        for (rowIdx = 0; rowIdx < expandedRows.length; rowIdx++) {\n                            rowDescriptor = expandedRows[rowIdx];\n\n                            if (!this._matchDescriptors(dataItem, rowDescriptor, rowGetters)) {\n                                this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, { items: {}, aggregates: {} }, state, true);\n                                continue;\n                            }\n\n                            path = rowDescriptor.names.slice(0, rowDescriptor.expandedIdx).join(\"\");\n                            rowName = rowDescriptor.names[rowDescriptor.expandedIdx];\n\n                            parentName = rowName;\n\n                            rowValue = rowGetters[rowName](dataItem);\n                            rowValue = rowValue !== undefined$1 ? rowValue.toString() : rowValue;\n\n                            rowName = rowName + \"&\" + rowValue;\n                            key = path + rowName;\n\n                            rows[key] = {\n                                uniquePath: path + parentName,\n                                parentName: parentName,\n                                name: rowName,\n                                value: rowValue\n                            };\n\n                            value = aggregatedData[key] || {\n                                items: {},\n                                aggregates: {}\n                            };\n\n                            this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, value, state, true);\n\n                            value.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, value);\n                            aggregatedData[key] = value;\n                        }\n                    }\n                }\n\n                if (processed && length) {\n                    if (measureAggregators.length > 1 && (!options.columns || !options.columns.length)) {\n                        columnDescriptors = {\n                            root: [],\n                            expanded: []\n                        };\n                    }\n\n                    columnsInfo = this._asTuples(columns, columnDescriptors, measuresRowAxis ? [] : measureAggregators, options.sort ? options.sort : []);\n                    rowsInfo = this._asTuples(rows, rowDescriptors, measuresRowAxis ? measureAggregators : [], options.sort ? options.sort : []);\n\n                    columns = columnsInfo.tuples;\n                    rows = rowsInfo.tuples;\n\n                    aggregatedData = this._toDataArray(aggregatedData, this._measuresInfo(measureAggregators, measuresRowAxis), rowsInfo.keys, columnsInfo.keys);\n                } else {\n                    aggregatedData = columns = rows = [];\n                }\n\n                return {\n                    axes: {\n                        columns: { tuples: columns },\n                        rows: { tuples: rows }\n                    },\n                    data: aggregatedData\n                };\n            }\n        });\n\n        var PivotTransport = Class.extend({\n            init: function(options, transport) {\n                this.transport = transport;\n                this.options = transport.options || {};\n\n                if (!this.transport.discover) {\n                    if (isFunction(options.discover)) {\n                        this.discover = options.discover;\n                    }\n                }\n            },\n            read: function(options) {\n                return this.transport.read(options);\n            },\n            update: function(options) {\n                return this.transport.update(options);\n            },\n            create: function(options) {\n                return this.transport.create(options);\n            },\n            destroy: function(options) {\n                return this.transport.destroy(options);\n            },\n            discover: function(options) {\n                if (this.transport.discover) {\n                    return this.transport.discover(options);\n                }\n                options.success({});\n            },\n            catalog: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).catalog;\n\n                }\n\n                var connection = options.connection || {};\n                connection.catalog = val;\n\n                this.options.connection = connection;\n                $.extend(this.transport.options, { connection: connection });\n            },\n            cube: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).cube;\n                }\n\n                var connection = options.connection || {};\n                connection.cube = val;\n\n                this.options.connection = connection;\n                extend(true, this.transport.options, { connection: connection });\n            }\n        });\n\n        var PivotDataSourceV2 = DataSource.extend({\n            init: function(options) {\n\n                var cube = ((options || {}).schema || {}).cube;\n\n                var schema = {\n                    axes: identity,\n                    cubes: identity,\n                    catalogs: identity,\n                    measures: identity,\n                    dimensions: identity,\n                    hierarchies: identity,\n                    levels: identity,\n                    members: identity\n                };\n\n                if (cube) {\n                    this.cubeSchema = $.extend(schema, this._cubeSchema(cube));\n                }\n\n                DataSource.fn.init.call(this, extend(true, {}, {\n                    //schema: schema\n                }, options));\n\n                var transportOptions = this.options.transport || {};\n                if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                    this._online = true;\n                    this.transport = new XmlaTransportV2(transportOptions);\n                }\n\n                this._columns = normalizeMembers(this.options.columns);\n                this._rows = normalizeMembers(this.options.rows);\n\n                var measures = this.cubeSchema ? this.cubeSchema.measures() : this.options.measures || [];\n\n                if (toString.call(measures) === \"[object Object]\") {\n                    this._measuresAxis = measures.axis || \"columns\";\n                    measures = measures.values || [];\n                }\n\n                this._measures = normalizeMeasures(measures);\n            },\n\n            options: {\n                serverSorting: true,\n                serverPaging: true,\n                serverFiltering: true,\n                serverGrouping: true,\n                serverAggregates: true\n            },\n\n            axes: function() {\n                return {\n                    columns: normalizeAxis(this.columns()),\n                    rows: normalizeAxis(this.rows())\n                };\n            },\n\n            catalog: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.catalog();\n                }\n\n                this.transport.catalog(val);\n                this._mergeState({});// clears current state\n                this.read();\n            },\n\n            cube: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.cube();\n                }\n\n                this.transport.cube(val);\n                this._mergeState({});// clears current state\n                this.read();\n            },\n\n            measuresAxis: function() {\n                return this._measuresAxis || \"columns\";\n            },\n\n            fetch: function(callback) {\n                var that = this;\n                if (this._data === undefined$1 || this._data.length === 0) {\n                    var fn = function() {\n                        if (isFunction(callback)) {\n                            callback.call(that);\n                        }\n                    };\n\n                    return this._query().done(fn);\n                }\n            },\n\n            _createSettings: function(axes) {\n                var settings = [];\n                var key;\n                var dimensions = this.cubeSchema.dimensionsSettings();\n                var displayValueFunc = function(item) { return item[this.key]; };\n                var sortValueFunc = function(value) { return value; };\n                for (var i = 0; i < axes.length; i++) {\n                    key = axes[i].name[0];\n                    settings.push({\n                        key: key,\n                        displayValue: displayValueFunc.bind({ key: key }),\n                        sortValue: sortValueFunc,\n                        caption: (dimensions[key] || {}).caption || key\n                    });\n                }\n                return settings;\n            },\n\n            _cubeSchema: function(cube) {\n                return {\n                    dimensionsSettings: function() {\n                        return cube.dimensions;\n                    },\n                    dimensions: function() {\n                        var result = [];\n                        var dimensions = cube.dimensions;\n\n                        for (var key in dimensions) {\n                            result.push({\n                                name: key,\n                                caption: dimensions[key].caption || key,\n                                uniqueName: key,\n                                defaultHierarchy: key,\n                                type: 1\n                            });\n                        }\n\n                        if (cube.measures) {\n                            result.push({\n                                name: MEASURES,\n                                caption: MEASURES,\n                                uniqueName: MEASURES,\n                                type: 2\n                            });\n                        }\n\n                        return result;\n                    },\n                    restoreMeasure: function(measures, measure) {\n                        for (var i = 0; i < measures.length; i++) {\n                            if (!measures[i].aggregate) {\n                                measures[i].aggregate = measure.aggregate;\n                                measures[i].value = measure.value;\n                                measures[i].caption = measure.caption;\n                                measures[i].uniqueName = measure.uniqueName;\n                                measures[i].type = 2;\n                            }\n                        }\n                    },\n                    measures: function() {\n                        var result = [];\n                        var measures = cube.measures;\n\n                        for (var key in measures) {\n                            result.push(createLocalMeasure(measures[key].field, key, measures[key].format, measures[key].aggregate));\n                        }\n\n                        return result;\n                    },\n                    memberType: function(name) {\n                        var getter = kendo.getter(normalizeName(name), true);\n                        var data = this.options.data || this._pristineData || [];\n                        if (!data.length) {\n                            return null;\n                        }\n\n                        return typeof getter(data[0]);\n                    }.bind(this),\n                    members: function(name) {\n                        var data = this.options.data || this._pristineData || [];\n                        var result = [];\n                        var distinct = {};\n                        var getter;\n                        var value;\n                        var idx = 0;\n\n                        if (name.indexOf(\"[(ALL)]\") !== -1) {\n                            return [\n                                {\n                                    caption: cube.dimensions[name.split(\".\")[0]].caption || name,\n                                    levelUniqueName: name,\n                                    name: name,\n                                    childrenCardinality: 1,\n                                    uniqueName: name\n                                }\n                            ];\n                        }\n\n                        getter = kendo.getter(normalizeName(name), true);\n\n                        for (; idx < data.length; idx++) {\n                            value = getter(data[idx]);\n                            if ((value || value === 0 || value === false) && !distinct[value]) {\n                                distinct[value] = true;\n\n                                result.push({\n                                    caption: value + \"\",\n                                    name: value + \"\",\n                                    childrenCardinality: 0,\n                                    uniqueName: value\n                                });\n                            }\n                        }\n\n                        return result;\n                    }.bind(this)\n                };\n            },\n\n            read: function(data) {\n                var that = this;\n                var isPrevented = that.trigger(REQUESTSTART, { type: READ });\n                var params = that._params(data);\n                var deferred = $.Deferred();\n                if (!isPrevented) {\n                    that.trigger(PROGRESS);\n\n                    if (that.options.data) {\n\n                        var originalData = (this.reader.data(this.options.data) || []).slice(0);\n                        if (originalData && !this._pristineData) {\n                            this._pristineData = originalData;\n                        }\n                        var columnSettings = that._createSettings(params.columnAxes);\n                        var rowSettings = that._createSettings(params.rowAxes);\n                        var measures = that.measures();\n                        var dataTree = createDataTree(that.options.data, rowSettings, columnSettings, measures, { dataField: \"aggregate\", columnsData: \"columns\" }, that.filter() || []);\n\n                        var stateArgs = {\n                            dataTree: dataTree,\n                            columnSettings: columnSettings,\n                            rowSettings: rowSettings,\n                            columnAxes: params.columnAxes,\n                            rowAxes: params.rowAxes,\n                            measures: measures.map(function(item) { return item; }).reverse(),\n                            fields: { dataField: \"aggregate\", columnsData: \"columns\" },\n                            sort: flattenSortDescriptors(params.sort || [])\n                        };\n\n                        that._saveState(createLocalDataState(stateArgs));\n                        that.trigger(CHANGE);\n                        deferred.resolve();\n                    } else {\n                        that.transport.read({\n                            data: params,\n                            success: function(newDataState) {\n                                that._saveState(newDataState);\n                                that.trigger(REQUESTEND, { response: newDataState, type: READ });\n                                that.trigger(CHANGE);\n                                if (that._preventRefresh) {\n                                    that._preventRefresh = false;\n                                }\n                                deferred.resolve();\n                            },\n                            error: function(err) {\n                                that.trigger(ERROR, { error: err });\n                            }\n                        });\n                    }\n                }\n                return deferred.promise();\n            },\n\n            _params: function(data) {\n                var that = this;\n                var options = DataSource.fn._params.call(that, data);\n\n                options = extend({\n                    columnAxes: JSON.parse(JSON.stringify(that._columns)),\n                    rowAxes: JSON.parse(JSON.stringify(that._rows)),\n                    measuresAxis: that.measuresAxis(),\n                    measureAxes: that._measures\n                }, options);\n\n                if ((this.options.type || \"\").toLowerCase() === \"xmla\") {\n                    options.connection = that.options.transport.connection;\n                }\n\n                if (options.filter) {\n                    options.filter = normalizeFilter(options.filter);\n                    options.filter = (options.filter || {}).filters;\n                }\n\n                if (options.sort) {\n                    options.sort = normalizeSort(options.sort);\n                }\n\n                return options;\n            },\n\n            discover: function(options) {\n                var that = this,\n                    transport = that.transport;\n\n                if (transport.discover) {\n                    return transport.discover(options);\n                }\n            },\n\n            schemaMeasures: function() {\n                var that = this;\n                return that.discover(\n                    {\n                        command: \"schemaMeasures\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }, function(response) {\n                        return response;\n                    });\n            },\n\n            schemaKPIs: function() {\n                var that = this;\n\n                return that.discover(\n                {\n                    command: \"schemaKPIs\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            schemaDimensions: function() {\n                var that = this;\n\n                return that.discover(\n                {\n                    command: \"schemaDimensions\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            schemaHierarchies: function(dimensionName) {\n                var that = this;\n\n                return that.discover({\n                   command: \"schemaHierarchies\",\n                   restrictions: {\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube(),\n                       dimensionUniqueName: dimensionName\n                   }\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            schemaLevels: function(hierarchyName) {\n                var that = this;\n\n                return that.discover({\n                    command: \"schemaLevels\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        hierarchyUniqueName: hierarchyName\n                    }\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            schemaCubes: function() {\n                var that = this;\n\n                return that.discover({\n                    command: \"schemaCubes\",\n                    restrictions: {\n                        catalogName: that.transport.catalog()\n                    }\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            schemaCatalogs: function() {\n                var that = this;\n\n                return that.discover({\n                    command: \"schemaCatalogs\"\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            schemaMembers: function(restrictions) {\n                var that = this;\n\n                return that.discover({\n                    command: \"schemaMembers\",\n                    restrictions: extend({\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube()\n                    }, restrictions)\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            _saveState: function(state) {\n                var that = this;\n\n                that._columnTuples = state.columns;\n                that._rowTuples = state.rows;\n                that._view = that._data = state.data;\n            },\n\n            columns: function(val) {\n                if (val === undefined$1) {\n                    return this._columns;\n                }\n\n                this._columns = normalizeMembers(val);\n                this.read();\n            },\n\n            rows: function(val) {\n                if (val === undefined$1) {\n                    return this._rows;\n                }\n\n                this._rows = normalizeMembers(val);\n\n                this.read();\n            },\n\n            measures: function(val) {\n                if (val === undefined$1) {\n                    return this._measures;\n                }\n\n                this._measures = normalizeMeasures(val);\n\n                this.read();\n            },\n\n            _mergeState: function(options) {\n                options = DataSource.fn._mergeState.call(this, options);\n\n                return options;\n            },\n\n            _query: function(options) {\n                var that = this;\n                var params = extend({}, {\n                    sort: that.sort(),\n                    measuresAxis: that.measuresAxis(),\n                    filter: that.filter()\n                }, options);\n                this._mergeState(params);\n\n                return this.read();\n            },\n        });\n\n        var PivotDataSource = DataSource.extend({\n            init: function(options) {\n                var cube = ((options || {}).schema || {}).cube;\n                var measuresAxis = \"columns\";\n                var measures;\n\n                var schema = {\n                    axes: identity,\n                    cubes: identity,\n                    catalogs: identity,\n                    measures: identity,\n                    dimensions: identity,\n                    hierarchies: identity,\n                    levels: identity,\n                    members: identity\n                };\n\n                if (cube) {\n                    schema = $.extend(schema, this._cubeSchema(cube));\n                    this.cubeBuilder = new PivotCubeBuilder(cube);\n                }\n\n                DataSource.fn.init.call(this, extend(true, {}, {\n                    schema: schema\n                }, options));\n\n                this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n\n                this._columns = normalizeMembers(this.options.columns);\n                this._rows = normalizeMembers(this.options.rows);\n\n                measures = this.options.measures || [];\n\n                if (toString.call(measures) === \"[object Object]\") {\n                    measuresAxis = measures.axis || \"columns\";\n                    measures = measures.values || [];\n                }\n\n                this._measures = normalizeMeasures(measures);\n                this._measuresAxis = measuresAxis;\n\n                this._skipNormalize = 0;\n                this._axes = {};\n            },\n\n            _cubeSchema: function(cube) {\n                return {\n                    dimensions: function() {\n                        var result = [];\n                        var dimensions = cube.dimensions;\n\n                        for (var key in dimensions) {\n                            result.push({\n                                name: key,\n                                caption: dimensions[key].caption || key,\n                                uniqueName: key,\n                                defaultHierarchy: key,\n                                type: 1\n                            });\n                        }\n\n                        if (cube.measures) {\n                            result.push({\n                                name: MEASURES,\n                                caption: MEASURES,\n                                uniqueName: MEASURES,\n                                type: 2\n                            });\n                        }\n\n                        return result;\n                    },\n                    hierarchies: function() {\n                        return [];\n                    },\n                    measures: function() {\n                        var result = [];\n                        var measures = cube.measures;\n\n                        for (var key in measures) {\n                            result.push({\n                                name: key,\n                                caption: key,\n                                uniqueName: key,\n                                aggregator: key\n                            });\n                        }\n\n                        return result;\n                    },\n                    members: function(response, restrictions) {\n                        var name = restrictions.levelUniqueName || restrictions.memberUniqueName;\n                        var schemaData = this.options.schema.data;\n                        var dataGetter = isFunction(schemaData) ? schemaData : kendo.getter(schemaData, true);\n                        var data = (this.options.data && dataGetter(this.options.data)) || this._rawData || [];\n                        var result = [];\n                        var getter;\n                        var value;\n                        var idx = 0;\n                        var distinct = {};\n\n                        if (name) {\n                            name = name.split(\".\")[0];\n                        }\n\n                        if (!restrictions.treeOp) {\n                            result.push({\n                                caption: cube.dimensions[name].caption || name,\n                                childrenCardinality: \"1\",\n                                dimensionUniqueName: name,\n                                hierarchyUniqueName: name,\n                                levelUniqueName: name,\n                                name: name,\n                                uniqueName: name\n                            });\n\n                            return result;\n                        }\n\n                        getter = kendo.getter(normalizeName(name), true);\n\n                        for (; idx < data.length; idx++) {\n                            value = getter(data[idx]);\n                            if ((value || value === 0) && !distinct[value]) {\n                                distinct[value] = true;\n\n                                result.push({\n                                    caption: value,\n                                    childrenCardinality: \"0\",\n                                    dimensionUniqueName: name,\n                                    hierarchyUniqueName: name,\n                                    levelUniqueName: name,\n                                    name: value,\n                                    uniqueName: value\n                                });\n                            }\n                        }\n\n                        return result;\n                    }.bind(this)\n                };\n            },\n\n            options: {\n                serverSorting: true,\n                serverPaging: true,\n                serverFiltering: true,\n                serverGrouping: true,\n                serverAggregates: true\n            },\n\n            catalog: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.catalog();\n                }\n\n                this.transport.catalog(val);\n                this._mergeState({});// clears current state\n                this._axes = {};\n                this.data([]);\n            },\n\n            cube: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.cube();\n                }\n\n                this.transport.cube(val);\n                this._axes = {};\n                this._mergeState({});// clears current state\n                this.data([]);\n            },\n\n            axes: function() {\n                return this._axes;\n            },\n\n            columns: function(val) {\n                if (val === undefined$1) {\n                    return this._columns;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n\n                this._columns = normalizeMembers(val);\n                this.query({\n                    columns: val,\n                    rows: this.rowsAxisDescriptors(),\n                    measures: this.measures(),\n                    sort: this.sort(),\n                    filter: this.filter()\n                });\n            },\n\n            rows: function(val) {\n                if (val === undefined$1) {\n                    return this._rows;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n\n                this._rows = normalizeMembers(val);\n\n                this.query({\n                    columns: this.columnsAxisDescriptors(),\n                    rows: val,\n                    measures: this.measures(),\n                    sort: this.sort(),\n                    filter: this.filter()\n                });\n            },\n\n            measures: function(val) {\n                if (val === undefined$1) {\n                    return this._measures;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n\n                this.query({\n                    columns: this.columnsAxisDescriptors(),\n                    rows: this.rowsAxisDescriptors(),\n                    measures: normalizeMeasures(val),\n                    sort: this.sort(),\n                    filter: this.filter()\n                });\n            },\n\n            measuresAxis: function() {\n                return this._measuresAxis || \"columns\";\n            },\n\n            _expandPath: function(path, axis) {\n                var origin = axis === \"columns\" ? \"columns\" : \"rows\";\n                var other = axis === \"columns\" ? \"rows\" : \"columns\";\n\n                var members = normalizeMembers(path);\n                var memberToExpand = getName(members[members.length - 1]);\n\n                this._lastExpanded = origin;\n\n                members = descriptorsForMembers(this.axes()[origin], members, this.measures());\n\n                for (var idx = 0; idx < members.length; idx++) {\n                    var memberName = getName(members[idx]);\n\n                    if (memberName === memberToExpand) {\n                        if (members[idx].expand) {\n                            return;\n                        }\n                        members[idx].expand = true;\n                    } else {\n                        members[idx].expand = false;\n                    }\n                }\n\n                var descriptors = {};\n                descriptors[origin] = members;\n                descriptors[other] = this._descriptorsForAxis(other);\n\n                this._query(descriptors);\n            },\n\n            _descriptorsForAxis: function(axis) {\n                var axes = this.axes();\n                var descriptors = this[axis]() || [];\n\n                if (axes && axes[axis] && axes[axis].tuples && axes[axis].tuples[0]) {\n                    descriptors = descriptorsForAxes(axes[axis].tuples || []);\n                }\n                return descriptors;\n            },\n\n            columnsAxisDescriptors: function() {\n                return this._descriptorsForAxis(\"columns\");\n            },\n\n            rowsAxisDescriptors: function() {\n                return this._descriptorsForAxis(\"rows\");\n            },\n\n            _process: function(data, e) {\n                this._view = data;\n\n                e = e || {};\n                e.items = e.items || this._view;\n\n                this.trigger(CHANGE, e);\n            },\n\n            _query: function(options) {\n                var that = this;\n\n                if (!options) {\n                    this._skipNormalize += 1;\n                    this._clearAxesData = true;\n                }\n\n                return that.query(extend({}, {\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that.sort(),\n                    filter: that.filter(),\n                    group: that.group(),\n                    aggregate: that.aggregate(),\n                    columns: this.columnsAxisDescriptors(),\n                    rows: this.rowsAxisDescriptors(),\n                    measures: this.measures()\n                }, options));\n            },\n\n            query: function(options) {\n                var state = this._mergeState(options);\n\n                if (this._data.length && this.cubeBuilder) {\n                    this._params(state);\n                    this._updateLocalData(this._pristineData);\n\n                    return $.Deferred().resolve().promise();\n                }\n\n                return this.read(state);\n            },\n\n            _mergeState: function(options) {\n                options = DataSource.fn._mergeState.call(this, options);\n\n                if (options !== undefined$1) {\n                    this._measures = normalizeMeasures(options.measures);\n\n                    if (options.columns) {\n                        options.columns = normalizeMembers(options.columns);\n                    } else if (!options.columns) {\n                        this._columns = [];\n                    }\n\n                    if (options.rows) {\n                        options.rows = normalizeMembers(options.rows);\n                    } else if (!options.rows) {\n                        this._rows = [];\n                    }\n                }\n                return options;\n            },\n\n            filter: function(val) {\n                if (val === undefined$1) {\n                    return this._filter;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n                this._query({ filter: val, page: 1 });\n            },\n\n            expandColumn: function(path) {\n                this._expandPath(path, \"columns\");\n            },\n\n            expandRow: function(path) {\n                this._expandPath(path, \"rows\");\n            },\n\n            success: function(data) {\n                var originalData;\n                if (this.cubeBuilder) {\n                    originalData = (this.reader.data(data) || []).slice(0);\n                }\n                DataSource.fn.success.call(this, data);\n                if (originalData) {\n                    this._pristineData = originalData;\n                }\n            },\n\n            _processResult: function(data, axes) {\n                if (this.cubeBuilder) {\n                    var processedData = this.cubeBuilder.process(data, this._requestData);\n\n                    data = processedData.data;\n                    axes = processedData.axes;\n                }\n\n                var columnIndexes, rowIndexes;\n                var tuples, resultAxis, measures, axisToSkip;\n                var columnDescriptors = this.columns();\n                var rowDescriptors = this.rows();\n                var hasColumnTuples = axes.columns && axes.columns.tuples;\n\n                if (!columnDescriptors.length && rowDescriptors.length && hasColumnTuples && (this._rowMeasures().length || !this.measures().length)) {\n                    axes = {\n                        columns: {},\n                        rows: axes.columns\n                    };\n                }\n\n                if (!columnDescriptors.length && !rowDescriptors.length && this.measuresAxis() === \"rows\" && hasColumnTuples) {\n                    axes = {\n                        columns: {},\n                        rows: axes.columns\n                    };\n                }\n\n                this._axes = {\n                    columns: normalizeAxis(this._axes.columns),\n                    rows: normalizeAxis(this._axes.rows)\n                };\n\n                axes = {\n                    columns: normalizeAxis(axes.columns),\n                    rows: normalizeAxis(axes.rows)\n                };\n\n                columnIndexes = this._normalizeTuples(axes.columns.tuples, this._axes.columns.tuples, columnDescriptors, this._columnMeasures());\n                rowIndexes = this._normalizeTuples(axes.rows.tuples, this._axes.rows.tuples, rowDescriptors, this._rowMeasures());\n\n                if (this._skipNormalize > 0) {\n                    this._skipNormalize -= 1;\n                }\n\n                if (!this.cubeBuilder) {\n                    data = this._normalizeData({\n                        columnsLength: axes.columns.tuples.length,\n                        rowsLength: axes.rows.tuples.length,\n                        columnIndexes: columnIndexes,\n                        rowIndexes: rowIndexes,\n                        data: data\n                    });\n                }\n\n                if (this._lastExpanded == \"rows\") {\n                    tuples = axes.columns.tuples;\n                    measures = this._columnMeasures();\n                    resultAxis = validateAxis(axes.columns, this._axes.columns, measures);\n\n                    if (resultAxis) {\n                        axisToSkip = \"columns\";\n                        axes.columns = resultAxis;\n                        adjustDataByColumn(tuples, resultAxis.tuples, axes.rows.tuples.length, measures, data);\n                        if (!this.cubeBuilder) {\n                            data = this._normalizeData({\n                                columnsLength: membersCount(axes.columns.tuples, measures),\n                                rowsLength: axes.rows.tuples.length,\n                                data: data\n                            });\n                        }\n                    }\n                } else if (this._lastExpanded == \"columns\") {\n                    tuples = axes.rows.tuples;\n                    measures = this._rowMeasures();\n                    resultAxis = validateAxis(axes.rows, this._axes.rows, measures);\n\n                    if (resultAxis) {\n                        axisToSkip = \"rows\";\n                        axes.rows = resultAxis;\n                        adjustDataByRow(tuples, resultAxis.tuples, axes.columns.tuples.length, measures, data);\n\n                        if (!this.cubeBuilder) {\n                            data = this._normalizeData({\n                                columnsLength: membersCount(axes.rows.tuples, measures),\n                                rowsLength: axes.columns.tuples.length,\n                                data: data\n                            });\n                        }\n                    }\n                }\n\n                this._lastExpanded = null;\n\n                var result = this._mergeAxes(axes, data, axisToSkip);\n                this._axes = result.axes;\n\n                return result.data;\n            },\n\n            _readData: function(data) {\n                var axes = this.reader.axes(data);\n                var newData = this.reader.data(data);\n\n                if (this.cubeBuilder) {\n                    this._rawData = newData;\n                }\n\n                return this._processResult(newData, axes);\n            },\n\n            _createTuple: function(tuple, measure, buildRoot) {\n                var members = tuple.members;\n                var length = members.length;\n                var root = { members: [] };\n                var levelName, levelNum;\n                var name, parentName;\n                var hasChildren;\n                var hierarchy;\n                var caption;\n                var member;\n                var idx = 0;\n\n                if (measure) {\n                    length -= 1;\n                }\n\n                for (; idx < length; idx++) {\n                    member = members[idx];\n                    levelNum = Number(member.levelNum);\n\n                    name = member.name;\n                    parentName = member.parentName;\n                    caption = member.caption || name;\n                    hasChildren = member.hasChildren;\n                    hierarchy = member.hierarchy;\n                    levelName = member.levelName;\n\n                    if (buildRoot) {\n                        caption = \"All\";\n                        if (levelNum === 0) {\n                            parentName = member.name;\n                        } else {\n                            levelNum -= 1;\n                        }\n\n                        hasChildren = true;\n                        name = hierarchy = levelName = parentName;\n                    }\n\n                    root.members.push({\n                        name: name,\n                        children: [],\n                        caption: caption,\n                        levelName: levelName,\n                        levelNum: levelNum.toString(),\n                        hasChildren: hasChildren,\n                        hierarchy: hierarchy,\n                        parentName: !buildRoot ? parentName : \"\"\n                    });\n                }\n\n                if (measure) {\n                    root.members.push({\n                        name: measure.name,\n                        children: []\n                    });\n                }\n\n                return root;\n            },\n\n            _hasRoot: function(target, source, descriptors) {\n                if (source.length) {\n                    return findExistingTuple(source, target).tuple;\n                }\n\n                var members = target.members;\n                var member;\n                var descriptor;\n\n                var isRoot = true;\n                var levelNum;\n\n                for (var idx = 0, length = members.length; idx < length; idx++) {\n                    member = members[idx];\n                    levelNum = Number(member.levelNum) || 0;\n                    descriptor = descriptors[idx];\n\n                    if (!(levelNum === 0 || (descriptor && member.name === getName(descriptor)))) {\n                        isRoot = false;\n                        break;\n                    }\n                }\n\n                return isRoot;\n            },\n\n            _mergeAxes: function(sourceAxes, data, axisToSkip) {\n                var columnMeasures = this._columnMeasures();\n                var rowMeasures = this._rowMeasures();\n                var axes = this.axes();\n                var startIndex, tuples;\n\n                var oldRowsLength = membersCount(axes.rows.tuples, rowMeasures);\n                var newRowsLength = sourceAxes.rows.tuples.length;\n\n                var oldColumnsLength = membersCount(axes.columns.tuples, columnMeasures);\n                var newColumnsLength = sourceAxes.columns.tuples.length;\n\n                if (axisToSkip == \"columns\") {\n                    newColumnsLength = oldColumnsLength;\n                    tuples = sourceAxes.columns.tuples;\n                } else {\n                    tuples = parseSource(sourceAxes.columns.tuples, columnMeasures);\n                    data = prepareDataOnColumns(tuples, data);\n                }\n\n                var mergedColumns = mergeTuples(axes.columns.tuples, tuples, columnMeasures);\n\n                if (axisToSkip == \"rows\") {\n                    newRowsLength = membersCount(sourceAxes.rows.tuples, rowMeasures);\n                    tuples = sourceAxes.rows.tuples;\n                } else {\n                    tuples = parseSource(sourceAxes.rows.tuples, rowMeasures);\n                    data = prepareDataOnRows(tuples, data);\n                }\n                var mergedRows = mergeTuples(axes.rows.tuples, tuples, rowMeasures);\n\n                axes.columns.tuples = mergedColumns.tuples;\n                axes.rows.tuples = mergedRows.tuples;\n\n                if (oldColumnsLength !== membersCount(axes.columns.tuples, columnMeasures)) {\n                    //columns are expanded\n                    startIndex = mergedColumns.index + findDataIndex(mergedColumns.parsedRoot, mergedColumns.memberIndex, columnMeasures);\n                    var offset = oldColumnsLength + newColumnsLength;\n                    data = this._mergeColumnData(data, startIndex, newRowsLength, newColumnsLength, offset);\n                } else if (oldRowsLength !== membersCount(axes.rows.tuples, rowMeasures)) {\n                    //rows are expanded\n                    startIndex = mergedRows.index + findDataIndex(mergedRows.parsedRoot, mergedRows.memberIndex, rowMeasures);\n                    data = this._mergeRowData(data, startIndex, newRowsLength, newColumnsLength);\n                }\n\n                if (axes.columns.tuples.length === 0 && axes.rows.tuples.length === 0) {\n                    data = [];\n                }\n\n                return {\n                    axes: axes,\n                    data: data\n                };\n            },\n\n            _mergeColumnData: function(newData, columnIndex, rowsLength, columnsLength, offset) {\n                var data = this.data().toJSON();\n                var rowIndex, index, drop = 0, toAdd;\n                var columnMeasures = Math.max(this._columnMeasures().length, 1);\n\n                rowsLength = Math.max(rowsLength, 1);\n\n                if (data.length > 0) {\n                    //if there is already data, drop the first new data item\n                    drop = columnMeasures;\n                    offset -= columnMeasures;\n                }\n\n                for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                    index = columnIndex + (rowIndex * offset);\n                    toAdd = newData.splice(0, columnsLength);\n                    toAdd.splice(0, drop);\n                    [].splice.apply(data, [index, 0].concat(toAdd));\n                }\n\n                return data;\n            },\n\n            _mergeRowData: function(newData, rowIndex, rowsLength, columnsLength) {\n                var data = this.data().toJSON();\n                var idx, dataIndex, toAdd;\n                var rowMeasures = Math.max(this._rowMeasures().length, 1);\n\n                columnsLength = Math.max(columnsLength, 1);\n                if (data.length > 0) {\n                    //if there is already data, drop the first new data item\n                    rowsLength -= rowMeasures;\n                    newData.splice(0, columnsLength * rowMeasures);\n                }\n\n                for (idx = 0; idx < rowsLength; idx++) {\n                    toAdd = newData.splice(0, columnsLength);\n                    dataIndex = (rowIndex * columnsLength) + (idx * columnsLength);\n                    [].splice.apply(data, [dataIndex, 0].concat(toAdd));\n                }\n\n                return data;\n            },\n\n            _columnMeasures: function() {\n                var measures = this.measures();\n                var columnMeasures = [];\n\n                if (this.measuresAxis() === \"columns\") {\n                    if (this.columns().length === 0) {\n                        columnMeasures = measures;\n                    } else if (measures.length > 1) {\n                        columnMeasures = measures;\n                    }\n                }\n\n                return columnMeasures;\n            },\n\n            _rowMeasures: function() {\n                var measures = this.measures();\n                var rowMeasures = [];\n\n                if (this.measuresAxis() === \"rows\") {\n                    if (this.rows().length === 0) {\n                        rowMeasures = measures;\n                    } else if (measures.length > 1) {\n                        rowMeasures = measures;\n                    }\n                }\n\n                return rowMeasures;\n            },\n\n            _updateLocalData: function(data, state) {\n                if (this.cubeBuilder) {\n                    if (state) {\n                        this._requestData = state;\n                    }\n                    data = this._processResult(data);\n                }\n\n                this._data = this._observe(data);\n\n                this._ranges = [];\n                this._addRange(this._data);\n\n                this._total = this._data.length;\n                this._pristineTotal = this._total;\n                this._process(this._data);\n            },\n\n            data: function(value) {\n                var that = this;\n                if (value !== undefined$1) {\n                    this._pristineData = value.slice(0);\n                    this._updateLocalData(value, {\n                            columns: this.columns(),\n                            rows: this.rows(),\n                            measures: this.measures()\n                        });\n                } else {\n                    return that._data;\n                }\n            },\n\n            _normalizeTuples: function(tuples, source, descriptors, measures) {\n                var length = measures.length || 1;\n                var idx = 0;\n\n                var roots = [];\n                var indexes = {};\n                var measureIdx = 0;\n                var tuple, memberIdx, last;\n\n                if (!tuples.length) {\n                    return;\n                }\n\n                if (this._skipNormalize <= 0 && !this._hasRoot(tuples[0], source, descriptors)) {\n                    this._skipNormalize = 0;\n                    for (; idx < length; idx++) {\n                        roots.push(this._createTuple(tuples[0], measures[idx], true));\n                        indexes[idx] = idx;\n                    }\n\n                    tuples.splice.apply(tuples, [0, tuples.length].concat(roots).concat(tuples));\n                    idx = length;\n                }\n\n                if (measures.length) {\n                    last = tuple = tuples[idx];\n                    memberIdx = tuple.members.length - 1;\n\n                    while (tuple) {\n                        if (measureIdx >= length) {\n                            measureIdx = 0;\n                        }\n\n                        if (tuple.members[memberIdx].name !== measures[measureIdx].name) {\n                            tuples.splice(idx, 0, this._createTuple(tuple, measures[measureIdx]));\n                            indexes[idx] = idx;\n                        }\n\n                        idx += 1;\n                        measureIdx += 1;\n                        tuple = tuples[idx];\n\n                        if (length > measureIdx && (!tuple || tupleName(last, memberIdx - 1) !== tupleName(tuple, memberIdx - 1))) {\n                            for (; measureIdx < length; measureIdx++) {\n                                tuples.splice(idx, 0, this._createTuple(last, measures[measureIdx]));\n                                indexes[idx] = idx;\n                                idx += 1;\n                            }\n                            tuple = tuples[idx];\n                        }\n                        last = tuple;\n                    }\n                }\n\n                return indexes;\n            },\n\n            _addMissingDataItems: function(result, metadata) {\n                while (metadata.rowIndexes[parseInt(result.length / metadata.columnsLength, 10)] !== undefined$1) {\n                    for (var idx = 0; idx < metadata.columnsLength; idx++) {\n                        result = addEmptyDataItem(result);\n                    }\n                }\n\n                while (metadata.columnIndexes[result.length % metadata.columnsLength] !== undefined$1) {\n                    result = addEmptyDataItem(result);\n                }\n\n                return result;\n            },\n\n            _normalizeOrdinals: function(result, dataItem, metadata) {\n                var lastOrdinal = metadata.lastOrdinal;\n\n                if (!dataItem) {\n                    return addEmptyDataItem(result);\n                }\n\n                if ((dataItem.ordinal - lastOrdinal) > 1) {\n                    lastOrdinal += 1;\n\n                    while (lastOrdinal < dataItem.ordinal && result.length < metadata.length) {\n                        result = this._addMissingDataItems(addEmptyDataItem(result), metadata);\n                        lastOrdinal += 1;\n                    }\n                }\n\n                dataItem.ordinal = result.length;\n                result[result.length] = dataItem;\n\n                return result;\n            },\n\n            _normalizeData: function(options) {\n                var data = options.data;\n                var dataIdx = 0;\n                var dataItem;\n                var result = [];\n                var lastOrdinal;\n                var length;\n\n                options.lastOrdinal = 0;\n                options.columnIndexes = options.columnIndexes || {};\n                options.rowIndexes = options.rowIndexes || {};\n                options.columnsLength = options.columnsLength || 1;\n                options.rowsLength = options.rowsLength || 1;\n                options.length = options.columnsLength * options.rowsLength;\n                length = options.length;\n\n                if (data.length === length) {\n                    return data;\n                }\n\n                while (result.length < length) {\n                    dataItem = data[dataIdx++];\n                    if (dataItem) {\n                        lastOrdinal = dataItem.ordinal;\n                    }\n\n                    result = this._normalizeOrdinals(this._addMissingDataItems(result, options), dataItem, options);\n\n                    options.lastOrdinal = lastOrdinal;\n                }\n\n                return result;\n            },\n\n            discover: function(options, converter) {\n                var that = this,\n                    transport = that.transport;\n\n                return $.Deferred(function(deferred) {\n                    transport.discover(extend({\n                        success: function(response) {\n                           response = that.reader.parse(response);\n\n                            if (that._handleCustomErrors(response)) {\n                                return;\n                            }\n\n                            if (converter) {\n                                response = converter(response);\n                            }\n                            deferred.resolve(response);\n                        },\n                        error: function(response, status, error) {\n                            deferred.reject(response);\n                            that.error(response, status, error);\n                        }\n                    }, options));\n                }).promise().done(function() {\n                    that.trigger(\"schemaChange\");\n                });\n            },\n\n            schemaMeasures: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaMeasures\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.measures(response);\n                });\n            },\n\n            schemaKPIs: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaKPIs\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.kpis(response);\n                });\n            },\n\n            schemaDimensions: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaDimensions\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.dimensions(response);\n                });\n            },\n\n            schemaHierarchies: function(dimensionName) {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaHierarchies\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube(),\n                            dimensionUniqueName: dimensionName\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.hierarchies(response);\n                });\n            },\n\n            schemaLevels: function(hierarchyName) {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaLevels\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube(),\n                            hierarchyUniqueName: hierarchyName\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.levels(response);\n                });\n            },\n\n            schemaCubes: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaCubes\",\n                        restrictions: {\n                            catalogName: that.transport.catalog()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.cubes(response);\n                });\n            },\n\n            schemaCatalogs: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaCatalogs\"\n                    }\n                }, function(response) {\n                    return that.reader.catalogs(response);\n                });\n            },\n\n            schemaMembers: function(restrictions) {\n                var that = this;\n                var success = (function(restrictions) {\n                    return function(response) {\n                        return that.reader.members(response, restrictions);\n                    };\n                }(restrictions));\n\n                return that.discover({\n                    data: {\n                        command: \"schemaMembers\",\n                        restrictions: extend({\n                           catalogName: that.transport.catalog(),\n                           cubeName: that.transport.cube()\n                       }, restrictions)\n                    }\n                }, success);\n            },\n\n            _params: function(data) {\n                if (this._clearAxesData) {\n                    this._axes = {};\n                    this._data = this._observe([]);\n                    this._clearAxesData = false;\n                    this.trigger(STATERESET);\n                }\n\n                var options = DataSource.fn._params.call(this, data);\n\n                options = extend({\n                    measures: this.measures(),\n                    measuresAxis: this.measuresAxis(),\n                    columns: this.columns(),\n                    rows: this.rows()\n                }, options);\n\n                if (this.cubeBuilder) {\n                    this._requestData = options;\n                }\n\n                return options;\n            }\n        });\n\n        function flatColumns(columns) {\n            var result = [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                result.push(columns[idx]);\n                if (columns[idx].children) {\n                    result = result.concat(flatColumns(columns[idx].children));\n                }\n            }\n\n            return result;\n        }\n\n        function sortItemsTree(field, items, sortFunction) {\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].children && items[i].children.length) {\n                    sortItemsTree(field, items[i].children, sortFunction);\n                }\n            }\n            if (items[0].parentName != field) {\n                return;\n            }\n            items = items.sort(sortFunction);\n        }\n\n        function fillSortTree(items, map) {\n            for (var i = 0; i < items.length; i++) {\n                var currentItem = map[items[i].name];\n\n                if (!$.isEmptyObject(currentItem.childrenMap)) {\n                    items[i].children = [];\n                    for (var name in currentItem.childrenMap) {\n                        items[i].children.push($.extend({}, { name: name, parentName: map[name].parentName }));\n                    }\n\n                    fillSortTree(items[i].children, map);\n                }\n            }\n        }\n\n        function addEmptyDataItem(result) {\n            result[result.length] = { value: \"\", fmtValue: \"\", ordinal: result.length };\n            return result;\n        }\n\n        function validateAxis(newAxis, axis, measures) {\n            if (newAxis.tuples.length < membersCount(axis.tuples, measures)) {\n\n                return axis;\n            }\n\n            return;\n        }\n\n        function adjustDataByColumn(sourceTuples, targetTuples, rowsLength, measures, data) {\n            var columnIdx, rowIdx, dataIdx;\n            var columnsLength = sourceTuples.length;\n            var targetColumnsLength = membersCount(targetTuples, measures);\n            var measuresLength = measures.length || 1;\n\n            for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n                for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                    dataIdx = tupleIndex(sourceTuples[columnIdx], targetTuples) * measuresLength;\n                    dataIdx += columnIdx % measuresLength;\n\n                    data[rowIdx * columnsLength + columnIdx].ordinal = rowIdx * targetColumnsLength + dataIdx;\n                }\n            }\n        }\n\n        function adjustDataByRow(sourceTuples, targetTuples, columnsLength, measures, data) {\n            var columnIdx, rowIdx, dataIdx;\n            var rowsLength = sourceTuples.length;\n            var measuresLength = measures.length || 1;\n\n            for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n                dataIdx = tupleIndex(sourceTuples[rowIdx], targetTuples);\n                dataIdx *= measuresLength;\n                dataIdx += rowIdx % measuresLength;\n\n                for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                    data[rowIdx * columnsLength + columnIdx].ordinal = dataIdx * columnsLength + columnIdx;\n                }\n            }\n        }\n\n        function tupleIndex(tuple, collection) {\n            return findExistingTuple(collection, tuple).index;\n        }\n\n        function membersCount(tuples, measures) {\n            if (!tuples.length) {\n                return 0;\n            }\n\n            var queue = tuples.slice();\n            var current = queue.shift();\n            var result = 1;\n\n            while (current) {\n                if (current.members) {\n                    [].push.apply(queue, current.members);\n                } else if (current.children) {\n                    if (!current.measure) {\n                        result += current.children.length;\n                    }\n                    [].push.apply(queue, current.children);\n                }\n\n                current = queue.shift();\n            }\n\n            if (measures.length) {\n                result = result * measures.length;\n            }\n\n            return result;\n        }\n\n        function normalizeAxis(axis) {\n            if (!axis) {\n                axis = {\n                    tuples: []\n                };\n            }\n\n            if (!axis.tuples) {\n                axis.tuples = [];\n            }\n\n            return axis;\n        }\n\n        function findDataIndex(tuple, memberIndex, measures) {\n            if (!tuple) {\n                return 0;\n            }\n\n            var measuresLength = Math.max(measures.length, 1);\n            var tuples = tuple.members.slice(0, memberIndex);\n            var current = tuples.shift();\n\n            //the initial value is equal to the total number of measures\n            //as the measures member is not extracted from the members of the starting tuple\n            //but should be calculated in the final result\n            var counter = measuresLength;\n\n            while (current) {\n                if (current.name === MEASURES) {\n                    //subtract 1 as the measures member has been already counted as a single standard member\n                    //but we are interested in the total number of measures instead\n                    counter += (measuresLength - 1);\n                } else if (current.children) {\n                    //is member\n                    [].push.apply(tuples, current.children);\n                } else {\n                    //is tuple\n                    counter ++;\n                    [].push.apply(tuples, current.members);\n                }\n\n                current = tuples.shift();\n            }\n\n            return counter;\n        }\n\n        function mergeTuples(target, source, measures) {\n            if (!source[0]) {\n                return {\n                    parsedRoot: null,\n                    tuples: target,\n                    memberIndex: 0,\n                    index: 0\n                };\n            }\n\n            var result = findExistingTuple(target, source[0]);\n\n            if (!result.tuple) {\n                return {\n                    parsedRoot: null,\n                    tuples: source,\n                    memberIndex: 0,\n                    index: 0\n                };\n            }\n\n            var targetMembers = result.tuple.members;\n            var sourceMembers = source[0].members;\n            var memberIndex = -1;\n\n            if (targetMembers.length !== sourceMembers.length) {\n                return {\n                    parsedRoot: null,\n                    tuples: source,\n                    memberIndex: 0,\n                    index: 0\n                };\n            }\n\n            for (var idx = 0, length = targetMembers.length; idx < length; idx++) {\n                if (!targetMembers[idx].measure && sourceMembers[idx].children[0]) {\n                    if (memberIndex == -1 && sourceMembers[idx].children.length) {\n                        memberIndex = idx;\n                    }\n\n                    targetMembers[idx].children = sourceMembers[idx].children;\n                }\n            }\n\n            measures = Math.max(measures.length, 1);\n\n            return {\n                parsedRoot: result.tuple,\n                index: result.index * measures,\n                memberIndex: memberIndex,\n                tuples: target\n            };\n        }\n\n        function equalTuples(first, second) {\n            var equal = true;\n            var idx, length;\n\n            first = first.members;\n            second = second.members;\n\n            for (idx = 0, length = first.length; idx < length; idx++) {\n                if (first[idx].measure || second[idx].measure) {\n                    continue;\n                }\n\n                equal = equal && (getName(first[idx]) === getName(second[idx]));\n            }\n\n            return equal;\n        }\n\n        function findExistingTuple(tuples, toFind) {\n            var idx, length, tuple, found, counter = 0;\n            var memberIndex, membersLength, member;\n\n            for (idx = 0, length = tuples.length; idx < length; idx++) {\n                tuple = tuples[idx];\n                if (equalTuples(tuple, toFind)) {\n                    return {\n                        tuple: tuple,\n                        index: counter\n                    };\n                }\n\n                counter ++;\n\n                for (memberIndex = 0, membersLength = tuple.members.length; memberIndex < membersLength; memberIndex++) {\n                    member = tuple.members[memberIndex];\n                    if (member.measure) {\n                        //counter += member.children.length;\n                        continue;\n                    }\n                    found = findExistingTuple(member.children, toFind);\n                    counter += found.index;\n                    if (found.tuple) {\n                        return {\n                            tuple: found.tuple,\n                            index: counter\n                        };\n                    }\n                }\n            }\n\n            return {\n                index: counter\n            };\n        }\n\n        function addMembers(members, map) {\n            var member, i, len, path = \"\";\n            for (i = 0, len = members.length; i < len; i++) {\n                member = members[i];\n                path += member.name;\n                if (!map[path]) {\n                    map[path] = member;\n                }\n            }\n        }\n\n\n        function findParentMember(tuple, map) {\n            var members = tuple.members;\n            var i, len, member, path = \"\";\n            var parentPath = \"\";\n            var parentMember;\n\n            for (i = 0, len = members.length; i < len; i++) {\n                member = members[i];\n                if (parentMember) {\n                    if (map[path + member.name]) {\n                        path += member.name;\n                        parentMember = map[path];\n                        continue;\n                    } else if (map[path + member.parentName]) {\n                        return map[path + member.parentName];\n                    } else if (map[parentPath + member.parentName]) {\n                        return map[parentPath + member.parentName];\n                    } else {\n                        return map[parentPath];\n                    }\n                }\n\n                path += member.name;\n                parentMember = map[member.parentName];\n\n                if (!parentMember) {\n                    parentMember = map[path];\n                    if (!parentMember) {\n                        return null;\n                    }\n                }\n\n                if (parentMember) {\n                    parentPath += parentMember.name;\n                }\n            }\n\n            return parentMember;\n        }\n\n        function measurePosition(tuple, measures) {\n            if (measures.length === 0) {\n                return -1;\n            }\n\n            var measure = measures[0];\n            var members = tuple.members;\n            for (var idx = 0, len = members.length; idx < len; idx ++) {\n                if (members[idx].name == measure.name) {\n                    return idx;\n                }\n            }\n        }\n\n        function normalizeTupleMeasures(tuple, index) {\n            if (index < 0) {\n                return;\n            }\n            var member = {\n                name: MEASURES,\n                measure: true,\n                children: [\n                    $.extend({ members: [], dataIndex: tuple.dataIndex }, tuple.members[index])\n                ]\n            };\n            tuple.members.splice(index, 1, member);\n            tuple.dataIndex = undefined$1;\n        }\n\n        function parseSource(tuples, measures) {\n            if (tuples.length < 1) {\n                return [];\n            }\n            var result = [];\n            var map = { };\n            var measureIndex = measurePosition(tuples[0], measures);\n\n            for (var i = 0; i < tuples.length; i++) {\n                var tuple = tuples[i];\n\n                //keep the old data index of the tuple\n                tuple.dataIndex = i;\n\n                normalizeTupleMeasures(tuple, measureIndex);\n                var parentMember = findParentMember(tuple, map);\n\n                if (parentMember) {\n                    if (measureIndex < 0 || !parentMember.measure) {\n                        parentMember.children.push(tuple);\n                    } else {\n                        parentMember.children.push(tuple.members[measureIndex].children[0]);\n                    }\n                } else {\n                    result.push(tuple);\n                }\n\n                addMembers(tuple.members, map);\n            }\n\n            return result;\n        }\n\n        function prepareDataOnRows(tuples, data) {\n            if (!tuples || !tuples.length) {\n                return data;\n            }\n\n            var result = [];\n            var indices = buildDataIndices(tuples);\n            var rowsLength = indices.length;\n            var columnsLength = Math.max(data.length / rowsLength, 1);\n            var rowIndex, columnIndex, targetIndex, sourceIndex;\n            var calcIndex;\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                targetIndex = columnsLength * rowIndex;\n                sourceIndex = columnsLength * indices[rowIndex];\n                for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                    calcIndex = parseInt(sourceIndex + columnIndex, 10);\n                    result[parseInt(targetIndex + columnIndex, 10)] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n                }\n            }\n\n            return result;\n        }\n\n        function prepareDataOnColumns(tuples, data) {\n            if (!tuples || !tuples.length) {\n                return data;\n            }\n\n            var result = [];\n            var indices = buildDataIndices(tuples);\n            var columnsLength = indices.length;\n            var rowsLength = Math.max(data.length / columnsLength, 1);\n            var columnIndex, rowIndex, dataIndex, calcIndex;\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                dataIndex = columnsLength * rowIndex;\n                for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                    calcIndex = indices[columnIndex] + dataIndex;\n                    result[dataIndex + columnIndex] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n                }\n            }\n\n            return result;\n        }\n\n        function buildDataIndices(tuples) {\n            tuples = tuples.slice();\n            var result = [];\n            var tuple = tuples.shift();\n            var idx, length, spliceIndex, children, member;\n\n            while (tuple) {\n                //required for multiple measures\n                if (tuple.dataIndex !== undefined$1) {\n                    result.push(tuple.dataIndex);\n                }\n\n                spliceIndex = 0;\n                for (idx = 0, length = tuple.members.length; idx < length; idx++) {\n                    member = tuple.members[idx];\n                    children = member.children;\n                    if (member.measure) {\n                        [].splice.apply(tuples, [0, 0].concat(children));\n                    } else {\n                        [].splice.apply(tuples, [spliceIndex, 0].concat(children));\n                    }\n                    spliceIndex += children.length;\n                }\n\n                tuple = tuples.shift();\n            }\n\n            return result;\n        }\n\n        PivotDataSourceV2.create = function(options) {\n            options = options && options.push ? { data: options } : options;\n\n            var dataSource = options || {},\n                data = dataSource.data;\n\n            dataSource.data = data;\n\n            if (!(dataSource instanceof PivotDataSourceV2) && dataSource instanceof kendo.data.DataSource) {\n                throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n            }\n\n            return dataSource instanceof PivotDataSourceV2 ? dataSource : new PivotDataSourceV2(dataSource);\n        };\n\n        PivotDataSource.create = function(options) {\n            options = options && options.push ? { data: options } : options;\n\n            var dataSource = options || {},\n                data = dataSource.data;\n\n            dataSource.data = data;\n\n            if (!(dataSource instanceof PivotDataSource) && dataSource instanceof kendo.data.DataSource) {\n                throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n            }\n\n            return dataSource instanceof PivotDataSource ? dataSource : new PivotDataSource(dataSource);\n        };\n\n        function baseHierarchyPath(memberName) {\n            var parts = memberName.split(\".\");\n            if (parts.length > 2) {\n                return parts[0] + \".\" + parts[1];\n            }\n            return memberName;\n        }\n\n        function expandMemberDescriptor(names, sort) {\n            var idx = names.length - 1;\n            var name = names[idx];\n            var sortDescriptor;\n\n            sortDescriptor = sortDescriptorForMember(sort, name);\n\n            if (sortDescriptor && sortDescriptor.dir) {\n                name = \"ORDER(\" + name + \".Children,\" + sortDescriptor.field + \".CurrentMember.MEMBER_CAPTION,\" + sortDescriptor.dir + \")\";\n            } else {\n                name += \".Children\";\n            }\n\n            names[idx] = name;\n\n            return names;\n        }\n\n        function sortDescriptorForMember(sort, member) {\n            for (var idx = 0, length = sort.length; idx < length; idx++) {\n                if (member.indexOf(sort[idx].field) === 0) {\n                    return sort[idx];\n                }\n            }\n            return null;\n        }\n\n        function crossJoin(names) {\n            var result = \"CROSSJOIN({\";\n            var r;\n\n            if (names.length > 2) {\n                r = names.pop();\n                result += crossJoin(names);\n            } else {\n                result += names.shift();\n                r = names.pop();\n            }\n\n            result += \"},{\";\n            result += r;\n            result += \"})\";\n            return result;\n        }\n\n        function crossJoinCommand(members, measures) {\n            var tmp = members.slice(0);\n\n            if (measures.length > 1) {\n                tmp.push(\"{\" + measureNames(measures).join(\",\") + \"}\");\n            }\n\n            return crossJoin(tmp);\n        }\n\n        function measureNames(measures) {\n            var idx = 0;\n            var length = measures.length;\n            var result = [];\n            var measure;\n\n            for (; idx < length; idx++) {\n                measure = measures[idx];\n                result.push(measure.name !== undefined$1 ? measure.name : measure);\n            }\n\n            return result;\n        }\n\n        function indexOf(name, items) {\n            var idx, length, index = -1;\n\n            for (idx = 0, length = items.length; idx < length; idx++) {\n                if (getName(items[idx]) === name) {\n                    index = idx;\n                    break;\n                }\n            }\n            return index;\n        }\n\n        function getName(name) {\n            name = name.name || name;\n\n            if (toString.call(name) === \"[object Array]\") {\n                name = name[name.length - 1];\n            }\n\n            return name;\n        }\n\n        function getRootNames(members) {\n            var length = members.length;\n            var names = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                names.push(members[idx].name[0]);\n            }\n\n            return names;\n        }\n\n        function mapNames(names, rootNames) {\n            var name;\n            var rootName;\n\n            var j;\n            var idx = 0;\n            var length = names.length;\n            var rootLength = rootNames.length;\n\n            rootNames = rootNames.slice(0);\n\n            for (; idx < length; idx++) {\n                name = names[idx];\n\n                for (j = 0; j < rootLength; j++) {\n                    rootName = baseHierarchyPath(rootNames[j]);\n\n                    if (name.indexOf(rootName) !== -1) {\n                        rootNames[j] = name;\n                        break;\n                    }\n                }\n            }\n\n            return {\n                names: rootNames,\n                expandedIdx: j,\n                uniquePath: rootNames.slice(0, j + 1).join(\"\")\n            };\n        }\n\n        function parseDescriptors(members) {\n            var expanded = [];\n            var child = [];\n            var root = [];\n            var member;\n\n            var j, l;\n            var idx = 0;\n            var length = members.length;\n\n            var name;\n            var hierarchyName;\n\n            var found;\n\n            for (; idx < length; idx++) {\n                member = members[idx];\n                name = member.name;\n                found = false;\n\n                if (toString.call(name) !== \"[object Array]\") {\n                    member.name = name = [name];\n                }\n\n                if (name.length > 1) {\n                    child.push(member);\n                } else {\n                    hierarchyName = baseHierarchyPath(name[0]);\n\n                    for (j = 0, l = root.length; j < l; j++) {\n                        if (root[j].name[0].indexOf(hierarchyName) === 0) {\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        root.push(member);\n                    }\n\n                    if (member.expand) {\n                        expanded.push(member);\n                    }\n                }\n            }\n\n            expanded = expanded.concat(child);\n\n            return {\n                root: root,\n                expanded: expanded\n            };\n        }\n\n        function serializeMembers(members, measures, sort) {\n            var command = \"\";\n\n            members = members || [];\n\n            var expanded = parseDescriptors(members);\n            var root = expanded.root;\n\n            var rootNames = getRootNames(root);\n            var crossJoinCommands = [];\n\n            expanded = expanded.expanded;\n\n            var length = expanded.length;\n            var idx = 0;\n\n            var memberName;\n            var names = [];\n\n            if (rootNames.length > 1 || measures.length > 1) {\n                crossJoinCommands.push(crossJoinCommand(rootNames, measures));\n\n                for (; idx < length; idx++) {\n                    memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                    names = mapNames(memberName, rootNames).names;\n\n                    crossJoinCommands.push(crossJoinCommand(names, measures));\n                }\n\n                command += crossJoinCommands.join(\",\");\n            } else {\n                for (; idx < length; idx++) {\n                    memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                    names.push(memberName[0]); //check if this is ok\n                }\n\n                command += rootNames.concat(names).join(\",\");\n            }\n\n            return command;\n        }\n\n        var filterFunctionFormats = {\n            contains: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\") > 0\",\n            doesnotcontain: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\")\",\n            startswith: \", Left({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n            endswith: \", Right({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n            eq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n            neq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\"\n        };\n\n        function serializeExpression(expression) {\n            var command = \"\";\n            var value = expression.value;\n            var field = expression.field;\n            var operator = expression.operator;\n\n            if (operator == \"in\") {\n                command += \"{\";\n                command += value;\n                command += \"}\";\n            } else {\n                command += operator == \"neq\" || operator == \"doesnotcontain\" ? \"-\" : \"\";\n                command += \"Filter(\";\n                command += field + \".MEMBERS\";\n                command += kendo.format(filterFunctionFormats[operator], field, value);\n                command += \")\";\n            }\n\n            return command;\n        }\n\n        function serializeFilters(filter, cube) {\n            var command = \"\", current;\n            var filters = filter.filters;\n            var length = filters.length;\n            var idx;\n\n            for (idx = length - 1; idx >= 0; idx--) {\n\n                current = \"SELECT (\";\n                current += serializeExpression(filters[idx]);\n                current += \") ON 0\";\n\n                if (idx == length - 1) {\n                    current += \" FROM [\" + cube + \"]\";\n                    command = current;\n                } else {\n                    command = current + \" FROM ( \" + command + \" )\";\n                }\n            }\n\n            return command;\n        }\n\n        function serializeOptions(parentTagName, options, capitalize) {\n            var result = \"\";\n\n            if (options) {\n                result += \"<\" + parentTagName + \">\";\n                var value;\n                for (var key in options) {\n                    value = options[key];\n                    if (capitalize) {\n                        key = key.replace(/([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)/g, \"$1_\").toUpperCase().replace(/_$/, \"\");\n                    }\n                    result += \"<\" + key + \">\" + value + \"</\" + key + \">\";\n                }\n                result += \"</\" + parentTagName + \">\";\n            } else {\n                result += \"<\" + parentTagName + \"/>\";\n            }\n            return result;\n        }\n\n        var xmlaDiscoverCommands = {\n            schemaCubes: \"MDSCHEMA_CUBES\",\n            schemaCatalogs: \"DBSCHEMA_CATALOGS\",\n            schemaMeasures: \"MDSCHEMA_MEASURES\",\n            schemaDimensions: \"MDSCHEMA_DIMENSIONS\",\n            schemaHierarchies: \"MDSCHEMA_HIERARCHIES\",\n            schemaLevels: \"MDSCHEMA_LEVELS\",\n            schemaMembers: \"MDSCHEMA_MEMBERS\",\n            schemaKPIs: \"MDSCHEMA_KPIS\"\n        };\n\n        var convertersMap = {\n            read: function(options) {\n                var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement>';\n\n                command += \"SELECT NON EMPTY {\";\n\n                var columns = options.columns || [];\n                var rows = options.rows || [];\n\n                var measures = options.measures || [];\n                var measuresRowAxis = options.measuresAxis === \"rows\";\n                var sort = options.sort || [];\n\n                if (!columns.length && rows.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                    columns = rows;\n                    rows = [];\n                    measuresRowAxis = false;\n                }\n\n                if (!columns.length && !rows.length) {\n                    measuresRowAxis = false;\n                }\n\n                if (columns.length) {\n                    command += serializeMembers(columns, !measuresRowAxis ? measures : [], sort);\n                } else if (measures.length && !measuresRowAxis) {\n                    command += measureNames(measures).join(\",\");\n                }\n\n                command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON COLUMNS\";\n\n                if (rows.length || (measuresRowAxis && measures.length > 1)) {\n                    command += \", NON EMPTY {\";\n\n                    if (rows.length) {\n                        command += serializeMembers(rows, measuresRowAxis ? measures : [], sort);\n                    } else {\n                        command += measureNames(measures).join(\",\");\n                    }\n\n                    command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON ROWS\";\n                }\n\n                if (options.filter) {\n                    command += \" FROM \";\n                    command += \"(\";\n                    command += serializeFilters(options.filter, options.connection.cube);\n                    command += \")\";\n                } else {\n                    command += \" FROM [\" + options.connection.cube + \"]\";\n                }\n\n                if (measures.length == 1 && columns.length) {\n                    command += \" WHERE (\" + measureNames(measures).join(\",\") + \")\";\n                }\n\n                command += '</Statement></Command><Properties><PropertyList><Catalog>' + options.connection.catalog + '</Catalog><Format>Multidimensional</Format></PropertyList></Properties></Execute></Body></Envelope>';\n                return command.replace(/\\&/g, \"&amp;\");\n            },\n            discover: function(options) {\n                options = options || {};\n\n                var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\">';\n                command += \"<RequestType>\" + (xmlaDiscoverCommands[options.command] || options.command) + \"</RequestType>\";\n\n                command += \"<Restrictions>\" + serializeOptions(\"RestrictionList\", options.restrictions, true) + \"</Restrictions>\";\n\n                if (options.connection && options.connection.catalog) {\n                    options.properties = $.extend({}, {\n                        Catalog: options.connection.catalog\n                    }, options.properties);\n                }\n\n                command += \"<Properties>\" + serializeOptions(\"PropertyList\", options.properties) + \"</Properties>\";\n\n                command += '</Discover></Body></Envelope>';\n                return command;\n            }\n        };\n\n        var XmlaTransport = kendo.data.RemoteTransport.extend({\n            init: function(options) {\n                var originalOptions = options;\n\n                options = this.options = extend(true, {}, this.options, options);\n\n                kendo.data.RemoteTransport.call(this, options);\n\n                if (isFunction(originalOptions.discover)) {\n                    this.discover = originalOptions.discover;\n                } else if (typeof originalOptions.discover === \"string\") {\n                    this.options.discover = {\n                        url: originalOptions.discover\n                    };\n                } else if (!originalOptions.discover) {\n                    this.options.discover = this.options.read;\n                }\n            },\n            setup: function(options, type) {\n                options.data = options.data || {};\n                $.extend(true, options.data, { connection: this.options.connection });\n\n                return kendo.data.RemoteTransport.fn.setup.call(this, options, type);\n            },\n            options: {\n                read: {\n                    dataType: \"text\",\n                    contentType: \"text/xml\",\n                    type: \"POST\"\n                },\n                discover: {\n                    dataType: \"text\",\n                    contentType: \"text/xml\",\n                    type: \"POST\"\n                },\n                parameterMap: function(options, type) {\n                    return convertersMap[type](options,type);\n                }\n            },\n\n            discover: function(options) {\n                return $.ajax(this.setup(options, \"discover\"));\n            }\n        });\n\n        var XmlaTransportV2 = Class.extend({\n            init: function(options) {\n                options = this.options = extend(true, {}, this.options, options);\n            },\n            setup: function(options) {\n                return $.extend(true, options || {}, { connection: this.options.connection });\n            },\n            read: function(options) {\n                var that = this,\n                    success,\n                    error;\n\n                var fetchOptions = that.setup(options.data, READ);\n\n                success = options.success || $.noop;\n                error = options.error || $.noop;\n\n                if (options.parameterMap) {\n                    fetchOptions = that.parameterMap(fetchOptions, READ);\n                }\n\n                fetchData({ url: that.options.read }, fetchOptions)\n                .then(createDataState)\n                .then(function(newDataState) {\n                    success(newDataState);\n                })\n                .catch(function(err) { error(err); });\n            },\n\n            catalog: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).catalog;\n\n                }\n\n                var connection = options.connection || {};\n                connection.catalog = val;\n\n                this.options.connection = connection;\n                $.extend(this.transport.options, { connection: connection });\n            },\n            cube: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).cube;\n                }\n\n                var connection = options.connection || {};\n                connection.cube = val;\n\n                this.options.connection = connection;\n                extend(true, this.transport.options, { connection: connection });\n            },\n\n            discover: function(options) {\n                return fetchDiscover({ url: this.options.read }, options);\n            }\n        });\n\n        function asArray(object) {\n            if (object == null) {\n                return [];\n            }\n\n            var type = toString.call(object);\n            if (type !== \"[object Array]\") {\n                return [object];\n            }\n\n            return object;\n        }\n\n        function translateAxis(axis) {\n            var result = { tuples: [] };\n            var tuples = asArray(kendo.getter(\"Tuples.Tuple\", true)(axis));\n            var captionGetter = kendo.getter(\"Caption['#text']\");\n            var unameGetter = kendo.getter(\"UName['#text']\");\n            var levelNameGetter = kendo.getter(\"LName['#text']\");\n            var levelNumGetter = kendo.getter(\"LNum['#text']\");\n            var childrenGetter = kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true);\n            var hierarchyGetter = kendo.getter(\"['@Hierarchy']\");\n            var parentNameGetter = kendo.getter(\"PARENT_UNIQUE_NAME['#text']\", true);\n\n            for (var idx = 0; idx < tuples.length; idx++) {\n                var members = [];\n                var member = asArray(tuples[idx].Member);\n                for (var memberIdx = 0; memberIdx < member.length; memberIdx++) {\n                    members.push({\n                        children: [],\n                        caption: captionGetter(member[memberIdx]),\n                        name: unameGetter(member[memberIdx]),\n                        levelName: levelNameGetter(member[memberIdx]),\n                        levelNum: levelNumGetter(member[memberIdx]),\n                        hasChildren: parseInt(childrenGetter(member[memberIdx]), 10) > 0,\n                        parentName: parentNameGetter(member[memberIdx]),\n                        hierarchy: hierarchyGetter(member[memberIdx])\n                    });\n                }\n\n                result.tuples.push({ members: members });\n            }\n            return result;\n        }\n\n        var schemaDataReaderMap = {\n            cubes: {\n                name: kendo.getter(\"CUBE_NAME['#text']\", true),\n                caption: kendo.getter(\"CUBE_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                type: kendo.getter(\"CUBE_TYPE['#text']\", true)\n            },\n            catalogs: {\n                name: kendo.getter(\"CATALOG_NAME['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true)\n            },\n            measures: {\n                name: kendo.getter(\"MEASURE_NAME['#text']\", true),\n                caption: kendo.getter(\"MEASURE_CAPTION['#text']\", true),\n                uniqueName: kendo.getter(\"MEASURE_UNIQUE_NAME['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                aggregator: kendo.getter(\"MEASURE_AGGREGATOR['#text']\", true),\n                groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true),\n                displayFolder: kendo.getter(\"MEASURE_DISPLAY_FOLDER['#text']\", true),\n                defaultFormat: kendo.getter(\"DEFAULT_FORMAT_STRING['#text']\", true)\n            },\n            kpis: {\n                name: kendo.getter(\"KPI_NAME['#text']\", true),\n                caption: kendo.getter(\"KPI_CAPTION['#text']\", true),\n                value: kendo.getter(\"KPI_VALUE['#text']\", true),\n                goal: kendo.getter(\"KPI_GOAL['#text']\", true),\n                status: kendo.getter(\"KPI_STATUS['#text']\", true),\n                trend: kendo.getter(\"KPI_TREND['#text']\", true),\n                statusGraphic: kendo.getter(\"KPI_STATUS_GRAPHIC['#text']\", true),\n                trendGraphic: kendo.getter(\"KPI_TREND_GRAPHIC['#text']\", true),\n                description: kendo.getter(\"KPI_DESCRIPTION['#text']\", true),\n                groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true)\n            },\n            dimensions: {\n                name: kendo.getter(\"DIMENSION_NAME['#text']\", true),\n                caption: kendo.getter(\"DIMENSION_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                uniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                defaultHierarchy: kendo.getter(\"DEFAULT_HIERARCHY['#text']\", true),\n                type: kendo.getter(\"DIMENSION_TYPE['#text']\", true)\n    //unknown = 0; time = 1; measure = 2; other = 3; quantitative = 5; accounts = 6; customers = 7; products = 8; scenario = 9; utility = 10; currency = 11; rates = 12; channel = 13; promotion = 14; organization = 15; billOfMaterials = 16; geography = 17;\n\n            },\n            hierarchies: {\n                name: kendo.getter(\"HIERARCHY_NAME['#text']\", true),\n                caption: kendo.getter(\"HIERARCHY_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                uniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n                dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                displayFolder: kendo.getter(\"HIERARCHY_DISPLAY_FOLDER['#text']\", true),\n                origin: kendo.getter(\"HIERARCHY_ORIGIN['#text']\", true),\n                defaultMember: kendo.getter(\"DEFAULT_MEMBER['#text']\", true)\n            },\n            levels: {\n                name: kendo.getter(\"LEVEL_NAME['#text']\", true),\n                caption: kendo.getter(\"LEVEL_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                uniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n                dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                displayFolder: kendo.getter(\"LEVEL_DISPLAY_FOLDER['#text']\", true),\n                orderingProperty: kendo.getter(\"LEVEL_ORDERING_PROPERTY['#text']\", true),\n                origin: kendo.getter(\"LEVEL_ORIGIN['#text']\", true),\n                hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true)\n            },\n            members: {\n                name: kendo.getter(\"MEMBER_NAME['#text']\", true),\n                caption: kendo.getter(\"MEMBER_CAPTION['#text']\", true),\n                uniqueName: kendo.getter(\"MEMBER_UNIQUE_NAME['#text']\", true),\n                dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n                levelUniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n                childrenCardinality: kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true)\n            }\n        };\n\n        var xmlaReaderMethods = [\"axes\", \"catalogs\", \"cubes\", \"dimensions\", \"hierarchies\", \"levels\", \"measures\"];\n\n        var XmlaDataReader = kendo.data.XmlDataReader.extend({\n            init: function(options) {\n                kendo.data.XmlDataReader.call(this, options);\n\n                this._extend(options);\n            },\n            _extend: function(options) {\n                var idx = 0;\n                var length = xmlaReaderMethods.length;\n                var methodName;\n                var option;\n\n                for (; idx < length; idx++) {\n                    methodName = xmlaReaderMethods[idx];\n                    option = options[methodName];\n\n                    if (option && option !== identity) {\n                        this[methodName] = option;\n                    }\n                }\n            },\n            parse: function(xml) {\n                var result = kendo.data.XmlDataReader.fn.parse(xml.replace(/<(\\/?)(\\w|-)+:/g, \"<$1\"));\n                return kendo.getter(\"['Envelope']['Body']\", true)(result);\n            },\n            errors: function(root) {\n                var fault = kendo.getter(\"['Fault']\", true)(root);\n                if (fault) {\n                    return [{\n                        faultstring: kendo.getter(\"faultstring['#text']\", true)(fault),\n                        faultcode: kendo.getter(\"faultcode['#text']\", true)(fault)\n                    }];\n                }\n                return null;\n            },\n            axes: function(root) {\n                root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n                var axes = asArray(kendo.getter(\"Axes.Axis\", true)(root));\n                var axis;\n\n                var result = {\n                    columns: {},\n                    rows: {}\n                };\n\n                for (var idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n\n                    if (axis[\"@name\"].toLowerCase() !== \"sliceraxis\") {\n                        if (!result.columns.tuples) {\n                            result.columns = translateAxis(axis);\n                        } else {\n                            result.rows = translateAxis(axis);\n                        }\n                    }\n                }\n\n                return result;\n            },\n            data: function(root) {\n                root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n                var cells = asArray(kendo.getter(\"CellData.Cell\", true)(root));\n\n                var result = [];\n                var ordinalGetter = kendo.getter(\"['@CellOrdinal']\");\n                var valueGetter = kendo.getter(\"Value['#text']\");\n                var fmtValueGetter = kendo.getter(\"FmtValue['#text']\");\n\n                for (var idx = 0; idx < cells.length; idx++) {\n                    result.push({\n                        value: valueGetter(cells[idx]),\n                        fmtValue: fmtValueGetter(cells[idx]),\n                        ordinal: parseInt(ordinalGetter(cells[idx]), 10)\n                    });\n                }\n\n                return result;\n            },\n            _mapSchema: function(root, getters) {\n                root = kendo.getter(\"DiscoverResponse[\\\"return\\\"].root\", true)(root);\n                var rows = asArray(kendo.getter(\"row\", true)(root));\n\n                var result = [];\n\n                for (var idx = 0; idx < rows.length; idx++) {\n                    var obj = {};\n                    for (var key in getters) {\n                        obj[key] = getters[key](rows[idx]);\n                    }\n                    result.push(obj);\n                }\n\n                return result;\n            },\n            measures: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.measures);\n            },\n            kpis: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.kpis);\n            },\n            hierarchies: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.hierarchies);\n            },\n            levels: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.levels);\n            },\n            dimensions: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.dimensions);\n            },\n            cubes: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.cubes);\n            },\n            catalogs: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.catalogs);\n            },\n            members: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.members);\n            }\n        });\n\n        extend(true, kendo.data, {\n           PivotDataSource: PivotDataSource,\n           PivotDataSourceV2: PivotDataSourceV2,\n           XmlaTransport: XmlaTransport,\n           XmlaDataReader: XmlaDataReader,\n           PivotCubeBuilder: PivotCubeBuilder,\n           transports: {\n               xmla: XmlaTransport\n           },\n           readers: {\n               xmla: XmlaDataReader\n           }\n        });\n\n        var sortExpr = function(expressions, name) {\n            if (!expressions) {\n                return null;\n            }\n\n            for (var idx = 0, length = expressions.length; idx < length; idx++) {\n                if (expressions[idx].field === name) {\n                    return expressions[idx];\n                }\n            }\n\n            return null;\n        };\n\n        var removeExpr = function(expressions, name) {\n            var result = [];\n\n            for (var idx = 0, length = expressions.length; idx < length; idx++) {\n                if (expressions[idx].field !== name) {\n                    result.push(expressions[idx]);\n                }\n            }\n\n            return result;\n        };\n\n        kendo.ui.PivotSettingTarget = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.element.addClass(\"k-pivot-setting\");\n\n                that.dataSource = kendo.data.PivotDataSource.create(options.dataSource);\n\n                that._refreshHandler = that.refresh.bind(that);\n                that.dataSource.first(CHANGE, that._refreshHandler);\n\n                if (!options.template) {\n                    var actions = '';\n\n                    if (that.options.enabled) {\n                        actions = \"<span class=\\\"k-setting-delete k-chip-action\\\">\" + (kendo.ui.icon(\"x\")) + \"</span>\";\n                    }\n\n                    that.options.template = function (data) { return ''\n                        + \"<span class=\\\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\\\" data-\" + (kendo.ns) + \"name=\\\"\" + (data.name || data) + \"\\\">\"\n                            + '<span class=\"k-chip-content\">'\n                                + \"<span class=\\\"k-chip-text\\\">\" + (data.name || data) + \"</span>\"\n                            + '</span>'\n                            + '<span class=\"k-chip-actions\">' + actions + '</span>'\n                        + '</span>'; };\n                }\n\n                that.template = kendo.template(that.options.template);\n                that.emptyTemplate = kendo.template(that.options.emptyTemplate);\n\n                that._sortable();\n\n                that.element.on(\"click\" + NS, '.k-chip, .k-button' , function(e) {\n                    var target = $(e.target).closest(\":not(path,svg)\");\n                    var action = target.closest('.k-chip-action');\n                    var name = target.closest(\"[\" + kendo.attr(\"name\") + \"]\")\n                                     .attr(kendo.attr(\"name\"));\n\n                    if (!name) {\n                        return;\n                    }\n\n                    if (action.hasClass(\"k-setting-delete\")) {\n                        that.remove(name);\n                        return;\n                    }\n\n                    if (target.closest('.k-chip-actions').length > 0) {\n                        return;\n                    }\n\n                    if (that.options.sortable) {\n                        var sortDirection = $(e.currentTarget).closest(\":not(path,svg)\").find('.k-i-sort-asc-small,.k-svg-i-sort-asc-small').length ? 'desc' : 'asc';\n\n                        that.sort({\n                            field: name,\n                            dir: sortDirection\n                        });\n                    }\n                });\n\n                if (options.filterable || options.sortable) {\n                    that.fieldMenu = new ui.PivotFieldMenu(that.element, {\n                        messages: that.options.messages.fieldMenu,\n                        filter: \".k-setting-fieldmenu\",\n                        filterable: options.filterable,\n                        sortable: options.sortable,\n                        dataSource: that.dataSource\n                    });\n                }\n\n                that.refresh();\n            },\n\n            options: {\n                name: \"PivotSettingTarget\",\n                template: null,\n                filterable: false,\n                sortable: false,\n                emptyTemplate: function (data) { return (\"<div class='k-empty'>\" + data + \"</div>\"); },\n                setting: \"columns\",\n                enabled: true,\n                messages: {\n                    empty: \"Drop Fields Here\"\n                }\n            },\n            setDataSource: function(dataSource) {\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.dataSource = this.options.dataSource = dataSource;\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.setDataSource(dataSource);\n                }\n                dataSource.first(CHANGE, this._refreshHandler);\n\n                this.refresh();\n            },\n\n            _sortable: function() {\n                var that = this;\n\n                if (that.options.enabled) {\n                    this.sortable = this.element.kendoSortable({\n                        connectWith: this.options.connectWith,\n                        hint: that.options.hint,\n                        filter: \">*:not(.k-empty)\",\n                        cursor: \"move\",\n                        start: function(e) {\n                            e.item.trigger(\"focus\").trigger(\"blur\");\n                        },\n                        change: function(e) {\n                            var name = e.item.attr(kendo.attr(\"name\"));\n\n                            if (e.action == \"receive\") {\n                                that.add(name);\n                            } else if (e.action == \"remove\") {\n                                that.remove(name);\n                            } else if (e.action == \"sort\") {\n                                that.move(name, e.newIndex);\n                            }\n                        }\n                    }).data(\"kendoSortable\");\n                }\n            },\n\n            _isKPI: function(data) {\n                return data.type === \"kpi\" || data.measure;\n            },\n\n            validate: function(data) {\n                var isMeasure = (data.type == 2 || \"aggregator\" in data || this._isKPI(data));\n\n                if (isMeasure) {\n                    return this.options.setting === \"measures\";\n                }\n\n                if (this.options.setting === \"measures\") {\n                    return isMeasure;\n                }\n\n                var items = this.dataSource[this.options.setting]();\n                var name = data.defaultHierarchy || data.uniqueName;\n                if (indexOf(name, items) > -1) {\n                    return false;\n                }\n\n                items = this.dataSource[this.options.setting === \"columns\" ? \"rows\" : \"columns\"]();\n                if (indexOf(name, items) > -1) {\n                    return false;\n                }\n\n                return true;\n            },\n\n            add: function(name) {\n                var items = this.dataSource[this.options.setting]();\n                var i, l;\n\n                name = Array.isArray(name) ? name.slice(0) : [name];\n\n                for (i = 0, l = name.length; i < l; i++) {\n                    if (indexOf(name[i], items) !== -1) {\n                        name.splice(i, 1);\n                        i -= 1;\n                        l -= 1;\n                    }\n                }\n\n                if (name.length) {\n                    items = items.concat(name);\n                    this.dataSource[this.options.setting](items);\n                }\n            },\n\n            move: function(name, index) {\n                var items = this.dataSource[this.options.setting]();\n                var idx = indexOf(name, items);\n\n                if (idx > -1) {\n                    name = items.splice(idx, 1)[0];\n\n                    items.splice(index, 0, name);\n\n                    this.dataSource[this.options.setting](items);\n                }\n            },\n\n            remove: function(name) {\n                var items = this.dataSource[this.options.setting]();\n                var idx = indexOf(name, items);\n                var sortExpressions = this.dataSource.sort();\n                var filter = this.dataSource.filter();\n\n                if (idx > -1) {\n                    if (filter) {\n                        filter.filters = removeExpr(filter.filters, name);\n                        this.dataSource._filter.filters = filter.filters;\n                        if (!filter.filters.length) {\n                            this.dataSource._filter = null;\n                        }\n                    }\n                    if (sortExpressions) {\n                        sortExpressions = removeExpr(sortExpressions, name);\n                        this.dataSource._sort = sortExpressions;\n                    }\n                    items.splice(idx, 1);\n                    this.dataSource[this.options.setting](items);\n                }\n            },\n\n            sort: function(expr) {\n                var sortable = this.options.sortable;\n                var allowUnsort = sortable === true || sortable.allowUnsort;\n                var skipExpr = allowUnsort && expr.dir === \"asc\";\n\n                var expressions = (this.dataSource.sort() || []);\n                var result = removeExpr(expressions, expr.field);\n\n                if (skipExpr && expressions.length !== result.length) {\n                    expr = null;\n                }\n\n                if (expr) {\n                    result.push(expr);\n                }\n\n                this.dataSource.sort(result);\n            },\n\n            refresh: function() {\n                var html = \"\";\n                var items = this.dataSource[this.options.setting]();\n                var length = items.length;\n                var idx = 0;\n                var item;\n\n                if (length) {\n                    for (; idx < length; idx++) {\n                        item = items[idx];\n                        item = item.name === undefined$1 ? { name: item } : item;\n\n                        html += this.template(extend({ sortIcon: this._sortIcon(item.name) }, item));\n                    }\n                } else {\n                    html = this.emptyTemplate(this.options.messages.empty);\n                }\n\n                this.element.html(html);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.element.off(NS);\n\n                if (this.sortable) {\n                    this.sortable.destroy();\n                }\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.destroy();\n                }\n\n                this.element = null;\n                this._refreshHandler = null;\n            },\n\n            _sortIcon: function(name) {\n                var expressions = this.dataSource.sort();\n                var expr = sortExpr(expressions, getName(name));\n                var icon = \"\";\n\n                if (expr) {\n                    icon = \"sort-\" + expr.dir;\n                }\n\n                return icon;\n            }\n        });\n\n        kendo.ui.PivotSettingTargetV2 = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.dataSource = kendo.data.PivotDataSourceV2.create(options.dataSource);\n\n                that._refreshHandler = that.refresh.bind(that);\n                that.dataSource.first(CHANGE, that._refreshHandler);\n\n                that.template = kendo.template(that.options.template);\n\n                that._sortable();\n\n                that.element.on(\"click\" + NS, \".k-i-x-circle,.k-svg-i-x-circle\", function(e) {\n                    var target = $(e.target).closest(\":not(path,svg)\");\n                    var parent = target.closest(\".k-chip\");\n                    var name = parent.find(\".k-chip-label\").text();\n\n                    if (!name) {\n                        return;\n                    }\n\n                    that.remove(name);\n                    parent.remove();\n                    that.trigger(\"remove\", { name: name });\n                });\n\n                if (that.options.navigatable) {\n                    that.element.on(\"keydown\" + NS, \".k-chip\", function(ev) {\n                        var chip = $(ev.target),\n                            key = ev.keyCode,\n                            name = chip.find(\".k-chip-label\").text();\n\n                        if (key === keys.DELETE || key === keys.BACKSPACE) {\n                            var targetIndex = that.options.configuratorNavigation ? that.options.configuratorNavigation.elements.indexOf(chip[0]) : -1;\n                            chip.find(\".k-i-x-circle,.k-svg-i-x-circle\").trigger(\"click\");\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                that.options.configuratorNavigation.elements[targetIndex - 1]\n                            );\n                        } else if (key === keys.DOWN && ev.altKey) {\n                            chip.find(\".k-i-more-vertical,.k-svg-i-more-vertical\").trigger(\"click\");\n                        } else if (ev.ctrlKey && ev.shiftKey) {\n                            if (key == keys.LEFT) {\n                                that.move(name, Math.max(0, chip.index() - 1));\n\n                                if (!that.options.configuratorNavigation) {\n                                    return;\n                                }\n\n                                that.options.configuratorNavigation.focusElement(\n                                    that.element.find(\".k-chip .k-chip-label\")\n                                        .filter(function (ind, el) { return $(el).text() == name; })\n                                        .closest(\".k-chip\")[0]\n                                );\n                            } else if (key == keys.RIGHT) {\n                                that.move(name, Math.min(chip.index() + 1, chip.parent().find(\"> .k-chip\").length - 1));\n\n                                if (!that.options.configuratorNavigation) {\n                                    return;\n                                }\n\n                                that.options.configuratorNavigation.focusElement(\n                                    that.element.find(\".k-chip .k-chip-label\")\n                                        .filter(function (ind, el) { return $(el).text() == name; })\n                                        .closest(\".k-chip\")[0]\n                                );\n                            } else if ((key == keys.UP && that.options.setting == \"rows\") ||\n                                (key == keys.DOWN && that.options.setting == \"columns\")) {\n\n                                var otherTarget = that.sortable.options.connectWith.data(\"kendoPivotSettingTargetV2\");\n                                if (!otherTarget) {\n                                    return;\n                                }\n\n                                that.remove(name);\n                                otherTarget.add(name);\n                                if (!that.options.configuratorNavigation) {\n                                    return;\n                                }\n\n                                that.options.configuratorNavigation.focusElement(\n                                    otherTarget.element.find(\".k-chip\").last()[0]\n                                );\n                            }\n                        }\n                    });\n                }\n\n                if (options.filterable || options.sortable) {\n                    that.fieldMenu = new ui.PivotFieldMenuV2(that.element, {\n                        messages: that.options.messages.fieldMenu,\n                        filterable: options.filterable,\n                        filter: \".k-i-more-vertical,.k-svg-i-more-vertical\",\n                        sortable: options.sortable,\n                        dataSource: that.dataSource\n                    });\n                }\n\n                that.refresh();\n            },\n\n            events: [\"remove\"],\n\n            options: {\n                name: \"PivotSettingTargetV2\",\n                template: null,\n                filterable: false,\n                sortable: false,\n                setting: \"columns\",\n                enabled: true,\n                messages: {\n                    empty: \"Drop Fields Here\"\n                }\n            },\n            setDataSource: function(dataSource) {\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.dataSource = this.options.dataSource = dataSource;\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.setDataSource(dataSource);\n                }\n                dataSource.first(CHANGE, this._refreshHandler);\n\n                this.refresh();\n            },\n\n            _applyState: function() {\n                if (this._sortState !== undefined$1) {\n                    this.dataSource._sort = this._sortState;\n                    this._sortState = undefined$1;\n                }\n\n                if (this._stateFilter !== undefined$1) {\n                    this.dataSource._filter = this._stateFilter;\n                    this._stateFilter = undefined$1;\n                }\n\n                this.dataSource[\"_\" + this.options.setting] = this.options.setting === \"measures\" ? normalizeMeasures(this._savedState) : normalizeMembers(this._savedState);\n            },\n\n            _cancelChanges: function() {\n                this._sortState = undefined$1;\n                this._stateFilter = undefined$1;\n                this._savedState = kendo.deepExtend([], this._initialState);\n                this._redraw();\n            },\n\n            _state: function(newState, modifyInit) {\n                var that = this;\n\n                if (!newState) {\n                    return that._savedState || [];\n                } else {\n                    if (!that._savedState || modifyInit) {\n                        that._initialState = kendo.deepExtend([], newState);\n                    }\n                    that._savedState = kendo.deepExtend([], newState);\n                }\n            },\n\n            _sortable: function() {\n                var that = this;\n\n                this.sortable = this.element.kendoSortable({\n                    connectWith: this.options.connectWith,\n                    hint: that.options.hint,\n                    filter: \">*:not(.k-empty)\",\n                    cursor: \"move\",\n                    start: function(e) {\n                        e.item.focus().blur();\n                    },\n                    change: function(e) {\n                        var name = e.item.find(\".k-chip-label\").text();\n\n                        if (e.action == \"receive\") {\n                            that.add(name);\n                        } else if (e.action == \"remove\") {\n                            that.remove(name);\n                        } else if (e.action == \"sort\") {\n                            that.move(name, e.newIndex);\n                        }\n                    }\n                }).data(\"kendoSortable\");\n            },\n\n            add: function(name) {\n                var items = this._state();\n                var i, l;\n\n                name = Array.isArray(name) ? name.slice(0) : [name];\n\n                for (i = 0, l = name.length; i < l; i++) {\n                    if (indexOf(name[i], items) !== -1) {\n                        name.splice(i, 1);\n                        i -= 1;\n                        l -= 1;\n                    }\n                }\n\n                if (name.length) {\n                    items = items.concat(name);\n                    this._state(items);\n                    this._redraw();\n                }\n            },\n\n            move: function(name, index) {\n                var items = this._state();\n                var idx = indexOf(name, items);\n\n                if (idx > -1) {\n                    name = items.splice(idx, 1)[0];\n\n                    items.splice(index, 0, name);\n\n                    this._state(items);\n                    this._redraw();\n                }\n            },\n\n            remove: function(name) {\n                var items = this._state();\n                var idx = indexOf(name, items);\n                var sortExpressions = this.dataSource.sort();\n                var filter = this.dataSource.filter();\n\n                if (idx > -1) {\n                    if (filter) {\n                        filter.filters = removeExpr(filter.filters, name);\n                        this._savedFilter = this.dataSource._filter;\n                        this._savedFilter.filters = filter.filters;\n                        if (!filter.filters.length) {\n                            this._savedFilter = null;\n                        }\n                    }\n                    if (sortExpressions) {\n                        sortExpressions = removeExpr(sortExpressions, name);\n                        this._sortState = sortExpressions;\n                    }\n                    items.splice(idx, 1);\n                    this._state(items);\n                    this._redraw();\n                }\n            },\n\n            _emptyState: function(enable) {\n                var that = this;\n                if (enable) {\n                    that.element.html(this.options.messages.empty)\n                        .addClass(\"k-settings-description\")\n                        .removeClass(\"k-chip-list\");\n                } else {\n                    that.element\n                        .removeClass(\"k-settings-description\")\n                        .addClass(\"k-chip-list\");\n                }\n            },\n\n            _redraw: function() {\n                var items = this._state() || [];\n                this._emptyState(!items.length);\n                if (items.length) {\n                    this.element.html(this._targetsHTML(items));\n                }\n            },\n\n            _targetsHTML: function(items) {\n                var item;\n                var html = \"\";\n                var idx = 0;\n                var options = this.options;\n                var enabled = false;\n\n                if (this.options.setting != \"measures\") {\n                    enabled = options.filterable || options.sortable;\n                }\n\n                if (items.length) {\n                    for (; idx < items.length; idx++) {\n                        item = items[idx];\n                        item = item.name === undefined$1 ? { name: item } : item;\n\n                        html += this.template({ name: item.name, menuenabled: enabled });\n                    }\n                }\n                return html;\n            },\n\n            refresh: function() {\n                if (this.dataSource._preventRefresh) {\n                    return;\n                }\n                var items = this.dataSource[this.options.setting]();\n                this._state(items, true);\n                this._emptyState(!this._state().length);\n                if (items.length) {\n                    this.element.html(this._targetsHTML(items));\n                }\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.element.off(NS);\n\n                if (this.sortable) {\n                    this.sortable.destroy();\n                }\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.destroy();\n                }\n\n                this.element = null;\n                this._refreshHandler = null;\n            }\n        });\n\n        var PivotConfiguratorButton = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.element = $(element);\n\n                that._element();\n                that._attachEvents();\n            },\n\n            options: {\n                name: \"PivotConfiguratorButton\",\n                text: \"Change settings\",\n                configurator: \"\"\n            },\n\n            destroy: function() {\n                this.element.off(NS);\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                kendo.deepExtend(that.options, options);\n                this.init(this.element, this.options);\n            },\n\n            toggle: function() {\n                var attr = kendo.attr(\"role\");\n                var pivotEl = this.element\n                    .closest(\"[\" + attr + \"=pivotcontainer]\")\n                    .find(\"[\" + attr + \"=pivotgridv2]\");\n                var pivot;\n\n                $(\"#\" + this.options.configurator).toggleClass(\"k-hidden\");\n\n                if (pivotEl.length) {\n                    pivot = pivotEl.getKendoPivotGridV2();\n                    pivot._setContentWidth();\n                    pivot._updateDimensions();\n                }\n            },\n\n            _attachEvents: function() {\n                this.element.on(\"click\" + NS, this.toggle.bind(this));\n            },\n\n            _element: function() {\n                var options = this.options;\n                this.element.addClass(\"k-pivotgrid-configurator-button\");\n                this.element.html(kendo.format(\"<span>{0}{1}</span>\",options.text, kendo.ui.icon('gear')));\n            }\n        });\n\n        var PivotContainer = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.element = $(element);\n                that.options = options;\n\n\n                that._addClasses();\n            },\n\n            options: {\n                name: \"PivotContainer\",\n                configuratorPosition: \"left\"\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                kendo.deepExtend(that.options, options);\n                this.init(this.element, this.options);\n            },\n\n            _addClasses: function() {\n                var options = this.options;\n                var className;\n                this.element.removeClass(\"k-flex-row k-flex-row-reverse k-flex-column k-flex-column-reverse\");\n\n                switch (options.configuratorPosition) {\n                    case \"right\":\n                        className = \"k-flex-row\";\n                        break;\n                    case \"left\":\n                        className = \"k-flex-row-reverse\";\n                        break;\n                    case \"bottom\":\n                        className = \"k-flex-column\";\n                        break;\n                    case \"top\":\n                        className = \"k-flex-column-reverse\";\n                        break;\n                    default:\n                        className = \"k-flex-row\";\n                }\n\n                this.element\n                    .addClass(\"k-d-flex k-pos-relative\")\n                    .addClass(className);\n            }\n        });\n\n        var PivotGridV2 = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._dataSource();\n\n                that._bindConfigurator();\n\n                that._ariaId = that.element.attr(\"id\") || kendo.guid();\n                that._wrapper();\n\n                that._columnHeadersWrapper = $('<div class=\"k-pivotgrid-column-headers\"></div>');\n                that._rowHeadersWrapper = $('<div class=\"k-pivotgrid-row-headers\"></div>');\n                that._contentWrapper = $('<div class=\"k-pivotgrid-values\"></div>');\n\n                that.wrapper.append(that._columnHeadersWrapper);\n                that.wrapper.append(that._rowHeadersWrapper);\n                that.wrapper.append(that._contentWrapper);\n\n                that._columnBuilder = new ColumnRowBuilder( { template: this.options.columnHeaderTemplate, axes: \"columns\", ariaId: that._ariaId });\n                that._rowBuilder = new ColumnRowBuilder( { template: this.options.rowHeaderTemplate, axes: \"rows\", ariaId: that._ariaId });\n                that._contentBuilder = new ContentBuilderV2( { template: this.options.dataCellTemplate || DATACELL_TEMPLATE, ariaId: that._ariaId });\n\n                that._scrollable();\n                that._rowHeadersWrapper\n                    .add(that._columnHeadersWrapper)\n                    .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                        var button = $(this);\n                        var path = button.parent().attr(kendo.attr(\"key\"));\n                        var expanded = button.is(\".k-i-chevron-up,.k-svg-i-chevron-up\");\n                        var isRow = button.closest(\".k-pivotgrid-row-headers\").length !== 0;\n                        var paths = path.split(\",\");\n                        var eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n\n                        if (that.trigger(eventName, { path: paths, axis: isRow ? \"rows\" : \"columns\" })) {\n                            return;\n                        }\n\n                        var reducerPayLoad = {\n                            type: \"HEADERS_ACTION_TOGGLE\",\n                            payload: paths,\n                            tree: isRow ? that._rowBuilder.getTree() : that._columnBuilder.getTree()\n                        };\n                        var currentAxes = isRow ? that.dataSource._rows : that.dataSource._columns;\n                        var newHeaders = headersReducer(currentAxes, reducerPayLoad);\n\n                        that.dataSource._preventRefresh = true;\n\n                        if (isRow) {\n                            that.dataSource.rows(newHeaders);\n                        } else {\n                            that.dataSource.columns(newHeaders);\n                        }\n                     });\n\n                if (that.options.autoBind) {\n                    that.dataSource.fetch();\n                }\n\n                that._aria();\n\n                if (that.options.navigatable) {\n                    that._initPivotGridNavigation();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                DATABINDING,\n                DATABOUND,\n                EXPANDMEMBER,\n                COLLAPSEMEMBER\n            ],\n\n            options: {\n                name: \"PivotGridV2\",\n                autoBind: true,\n                height: null,\n                columnWidth: null,\n                configurator: \"\",\n                columnHeaderTemplate: null,\n                rowHeaderTemplate: null,\n                dataCellTemplate: null,\n                messages: {\n                    emptyCellLabel: \"PivotGrid Empty Cell\"\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n                Widget.fn.destroy.call(that);\n\n                if (that._windowResizeHandler) {\n                    $(window).off(RESIZE + NS, that._windowResizeHandler);\n                    that._windowResizeHandler = null;\n                }\n            },\n\n            _aria: function() {\n                var that = this;\n                that.element.attr(\"role\", \"grid\");\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                this._bindConfigurator();\n\n                if (this.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n\n            _initPivotGridNavigation: function() {\n                var that = this;\n\n                that.navigation = new PivotGridNavigation({ tabIndex: 0 });\n                that.navigation.start(that.element[0]);\n\n                var firstCell = that.navigation.first;\n\n                if (firstCell) {\n                    firstCell.setAttribute('tabindex', '0');\n                }\n            },\n\n            _matchAriaAttributes: function(wrapper) {\n                var that = this;\n                var rowHeaderRows = wrapper.querySelectorAll(\n                    \".k-pivotgrid-row-headers .k-pivotgrid-row\"\n                );\n                var rowHeaderCols = !rowHeaderRows[0] ? [] : Array.from(rowHeaderRows[0].children).reduce(\n                    function (acc, curr) { return (acc += curr.getAttribute(\"colspan\") !== null ? +curr.getAttribute(\"colspan\") : 1); },\n                    0\n                );\n                var colHeaderRows = wrapper.querySelectorAll(\n                    \".k-pivotgrid-column-headers tr\"\n                );\n                var colHeaderCells = wrapper.querySelectorAll(\n                    \".k-pivotgrid-column-headers th\"\n                );\n                var valueTableCells = wrapper.querySelectorAll(\".k-pivotgrid-values td\");\n                var emptyCell = wrapper.querySelector(\".k-pivotgrid-empty-cell\");\n\n                emptyCell.setAttribute(\"aria-rowspan\", colHeaderRows.length.toString());\n                emptyCell.setAttribute(\"aria-colspan\", rowHeaderCols.toString());\n\n                var firstColHeadersRow = colHeaderRows[0];\n                var firstColHeaderRowCellsIds = !firstColHeadersRow ? [] : Array.from(firstColHeadersRow.children)\n                    .map(function (el) { return el.getAttribute(\"id\"); })\n                    .join(\" \");\n                firstColHeadersRow.setAttribute(\n                    \"aria-owns\",\n                    ((emptyCell.getAttribute(\"id\")) + \" \" + firstColHeaderRowCellsIds)\n                );\n\n                rowHeaderRows.forEach(function (row, index) {\n                    var valueCellsIds = that.filterAndMap(\n                        Array.from(valueTableCells),\n                        function (c) {\n                            var idParts = c.getAttribute(\"id\").split(\"-\");\n                            return idParts[idParts.length - 2] === (index + 1).toString();\n                        },\n                        function (c) { return c.getAttribute(\"id\"); }\n                    );\n\n                    row.setAttribute(\"aria-owns\", valueCellsIds.join(\" \"));\n                });\n\n                valueTableCells.forEach(function (cell) {\n                    var idParts = cell.getAttribute(\"id\").split(\"-\");\n                    var cellColIndex = +idParts[idParts.length - 1];\n                    var colHeaderCellsIds = that.filterAndMap(\n                        Array.from(colHeaderCells),\n                        function (c) {\n                            var idParts = c.getAttribute(\"id\").split(\"-\");\n                            var headerCellColIndex = +idParts[idParts.length - 1];\n                            var headerCellColspan = +c.getAttribute(\"colspan\");\n                            var colIndexIsEqual = cellColIndex === headerCellColIndex;\n                            var cellColIndexIsWithinHeaderCellRange =\n                                headerCellColspan > 1 &&\n                                headerCellColIndex < cellColIndex &&\n                                headerCellColIndex + headerCellColspan - 1 >= cellColIndex;\n\n                            return colIndexIsEqual || cellColIndexIsWithinHeaderCellRange;\n                        },\n                        function (c) { return c.getAttribute(\"id\"); }\n                    );\n\n                    cell.setAttribute(\"aria-describedby\", colHeaderCellsIds.join(\" \"));\n                });\n            },\n\n            filterAndMap: function(arr, predicate, mapper) {\n                return arr.reduce(\n                    function (acc, curr) { return (predicate(curr) ? acc.concat( [mapper(curr)]) : acc); },\n                    []\n                );\n            },\n\n            _dataSource: function() {\n                var that = this;\n                var dataSource = that.options.dataSource;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (that.dataSource && this._refreshHandler) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler)\n                                   .unbind(PROGRESS, that._progressHandler)\n                                   .unbind(ERROR, that._errorHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSourceV2.create(dataSource)\n                                       .bind(CHANGE, that._refreshHandler)\n                                       .bind(PROGRESS, that._progressHandler)\n                                       .bind(ERROR, that._errorHandler);\n            },\n\n            _resize: function() {\n                var that = this;\n                that.wrapper[0].style.setProperty('--kendo-scrollbar-width', kendo.format(\"{0}px\", getScollWidth()));\n            },\n\n            _scrollable: function() {\n                var that = this;\n                var columnsHeader = that._columnHeadersWrapper;\n                var rowsHeader = that._rowHeadersWrapper;\n\n                that._resize();\n                that._windowResizeHandler = that._resize.bind(that);\n\n                that._contentWrapper.scroll(function() {\n                    kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                    rowsHeader.scrollTop(this.scrollTop);\n                });\n\n                rowsHeader.bind(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n                $(window).on(RESIZE + NS, that._windowResizeHandler);\n            },\n\n            _wheelScroll: function(e) {\n                if (e.ctrlKey) {\n                    return;\n                }\n\n                var delta = kendo.wheelDeltaY(e);\n                var scrollTop = this._contentWrapper.scrollTop();\n\n                if (delta) {\n                    e.preventDefault();\n                    $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                    this._rowHeadersWrapper.scrollTop(scrollTop + (-delta));\n                    this._contentWrapper.scrollTop(scrollTop + (-delta));\n                }\n            },\n\n            _wrapper: function() {\n                var height = this.options.height;\n\n                this.wrapper = this.element.addClass(\"k-pivotgrid\");\n                var emptyCell = $((\"<span class=\\\"k-pivotgrid-empty-cell\\\" id=\\\"\" + (this._ariaId) + \"-empty-cell\\\" role=\\\"columnheader\\\"><span class=\\\"k-sr-only\\\">\" + (this.options.messages.emptyCellLabel) + \"</span></span>\"));\n                this.wrapper.append(emptyCell);\n\n                if (height) {\n                    this.wrapper.css(\"height\", height);\n                }\n            },\n\n            _progress: function(toggle) {\n                kendo.ui.progress(this.wrapper, toggle);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _updateDimensions: function() {\n                var that = this;\n                that.wrapper.css({\n                    \"grid-template-columns\": kendo.format(\"{0}px 1fr\", that._rowHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetWidth),\n                    \"grid-template-rows\": kendo.format(\"{0}px 1fr\", that._columnHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetHeight),\n                });\n            },\n\n            _setContentWidth: function() {\n                if (!this.options.columnWidth) {\n                    return;\n                }\n                var contentTable = this._contentWrapper.find(\"table\");\n                var columnTable = this._columnHeadersWrapper.children(\"table\");\n                var rowTable = this._rowHeadersWrapper.children(\"table\");\n\n                contentTable.add(columnTable).add(rowTable).find(\"col\").width(this.options.columnWidth);\n            },\n\n            _bindConfigurator: function() {\n                var configurator = this.options.configurator;\n                if (configurator) {\n                    $(configurator).kendoPivotConfiguratorV2(\"setDataSource\", this.dataSource);\n                }\n            },\n\n            cellInfoByElement: function(element) {\n                element = $(element);\n\n                return this.cellInfo(element.index(), element.parent(\"tr\").index());\n            },\n\n            cellInfo: function(columnIndex, rowIndex) {\n                var contentBuilder = this._contentBuilder;\n                var dataIndex;\n                var dataItem;\n\n                if (columnIndex >= contentBuilder.columnsCount || columnIndex < 0 ||\n                    rowIndex >= contentBuilder.rowsCount || rowIndex < 0) {\n                    return null;\n                }\n\n                dataIndex = rowIndex * contentBuilder.columnsCount + columnIndex;\n                dataItem = contentBuilder.hash[dataIndex < 0 ? 0 : dataIndex];\n\n                return {\n                    columnTuple: dataItem.columnTuple,\n                    rowTuple: dataItem.rowTuple,\n                    dataItem: dataItem.data\n                };\n            },\n\n            refresh: function() {\n                var that = this;\n\n                var dataSource = that.dataSource;\n                if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                    return;\n                }\n\n                var lastFocusedCellID = kendo._activeElement() ? kendo._activeElement().id : null;\n                var lastCellIdWithTabIndex = that.wrapper.find(\"[tabindex=0]\").attr(\"id\");\n                that._columnBuilder.setTuples(dataSource._columnTuples);\n                that._columnHeadersWrapper.html(that._columnBuilder.build());\n\n                that._rowBuilder.setTuples(dataSource._rowTuples);\n                that._rowHeadersWrapper.html(that._rowBuilder.build());\n\n                that._contentBuilder.setRowColumnInfo({\n                    columnHeaderLeafs: that._columnBuilder.getHeaderLeafs(),\n                    rowHeaderLeafs: that._rowBuilder.getHeaderLeafs(),\n                    columnHeaderBreadth: that._columnBuilder.getBreadth(),\n                    rowHeaderDepth: that._rowBuilder.getBreadth(),\n                    data: dataSource._view\n                });\n\n                that._contentWrapper.html(that._contentBuilder.build());\n\n\n                that._setContentWidth();\n                that._updateDimensions();\n\n                that._progress(false);\n\n                that.trigger(DATABOUND);\n                that._matchAriaAttributes(that.wrapper[0]);\n\n                if (!that.navigation) {\n                    return;\n                }\n\n                if (lastCellIdWithTabIndex && that.element.find((\"#\" + lastCellIdWithTabIndex)).length > 0) {\n                    that.element.find((\"#\" + lastCellIdWithTabIndex)).attr('tabindex', '0');\n                } else {\n                    var firstCell = that.navigation.first;\n\n                    if (firstCell) {\n                        firstCell.setAttribute('tabindex', '0');\n                    }\n                }\n\n                if (lastFocusedCellID && lastFocusedCellID.indexOf(that._ariaId) == 0) {\n                    that.navigation.focusElement(that.element.find((\"#\" + lastFocusedCellID))[0]);\n                }\n            }\n        });\n\n        ui.plugin(PivotConfiguratorButton);\n        ui.plugin(PivotContainer);\n        ui.plugin(PivotGridV2);\n\n        var PivotGrid = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                var columnBuilder;\n                var rowBuilder;\n\n                Widget.fn.init.call(that, element, options);\n\n                STATE_COLLAPSED_ICONNAME = kendo.support.isRtl(that.element) ? \"caret-alt-left\" : \"caret-alt-right\";\n\n                that._dataSource();\n\n                that._bindConfigurator();\n\n                that._wrapper();\n                that._createLayout();\n\n                that._columnBuilder = columnBuilder = new ColumnBuilder();\n                that._rowBuilder = rowBuilder = new RowBuilder();\n                that._contentBuilder = new ContentBuilder();\n\n                that._templates();\n\n                that.columnsHeader\n                    .add(that.rowsHeader)\n                    .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                        var button = $(this);\n                        var builder = columnBuilder;\n                        var action = \"expandColumn\";\n                        var eventName;\n                        var path = button.attr(kendo.attr(\"path\"));\n                        var eventArgs = {\n                            axis: \"columns\",\n                            path: $.parseJSON(path)\n                        };\n\n                        if (button.parent().is(\"td\")) {\n                            builder = rowBuilder;\n                            action = \"expandRow\";\n                            eventArgs.axis = \"rows\";\n                        }\n\n                        var expanded = button.is(STATE_EXPANDED_SELECTOR);\n                        var metadata = builder.metadata[path];\n                        var request = metadata.expanded === undefined$1;\n\n                        eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n                        eventArgs.childrenLoaded = metadata.maxChildren > metadata.children;\n\n                        if (that.trigger(eventName, eventArgs)) {\n                            return;\n                        }\n\n                        builder.metadata[path].expanded = !expanded;\n                        kendo.ui.icon(button,{ icon: !expanded ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME });\n\n                        if (!expanded && request) {\n                            that.dataSource[action](eventArgs.path);\n                        } else {\n                            that.refresh();\n                        }\n                    });\n\n                that._scrollable();\n\n                if (that.options.autoBind) {\n                    that.dataSource.fetch();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                DATABINDING,\n                DATABOUND,\n                EXPANDMEMBER,\n                COLLAPSEMEMBER\n            ],\n\n            options: {\n                name: \"PivotGrid\",\n                autoBind: true,\n                reorderable: true,\n                filterable: false,\n                sortable: false,\n                navigatable: false,\n                height: null,\n                columnWidth: 100,\n                configurator: \"\",\n                columnHeaderTemplate: null,\n                rowHeaderTemplate: null,\n                dataCellTemplate: null,\n                kpiStatusTemplate: null,\n                kpiTrendTemplate: null,\n                messages: {\n                    measureFields: \"Drop Data Fields Here\",\n                    columnFields: \"Drop Column Fields Here\",\n                    rowFields: \"Drop Rows Fields Here\"\n                }\n            },\n\n            _templates: function() {\n                var columnTemplate = this.options.columnHeaderTemplate;\n                var rowTemplate = this.options.rowHeaderTemplate;\n                var dataTemplate = this.options.dataCellTemplate;\n                var kpiStatusTemplate = this.options.kpiStatusTemplate;\n                var kpiTrendTemplate = this.options.kpiTrendTemplate;\n\n                this._columnBuilder.template = kendo.template(columnTemplate || HEADER_TEMPLATE, { useWithBlock: !!columnTemplate });\n                this._contentBuilder.dataTemplate = kendo.template(dataTemplate || DATACELL_TEMPLATE, { useWithBlock: !!dataTemplate });\n                this._contentBuilder.kpiStatusTemplate = kendo.template(kpiStatusTemplate || KPISTATUS_TEMPLATE, { useWithBlock: !!kpiStatusTemplate });\n                this._contentBuilder.kpiTrendTemplate = kendo.template(kpiTrendTemplate || KPITREND_TEMPLATE, { useWithBlock: !!kpiTrendTemplate });\n                this._rowBuilder.template = kendo.template(rowTemplate || HEADER_TEMPLATE, { useWithBlock: !!rowTemplate });\n            },\n\n            _bindConfigurator: function() {\n                var configurator = this.options.configurator;\n                if (configurator) {\n                    $(configurator).kendoPivotConfigurator(\"setDataSource\", this.dataSource);\n                }\n            },\n\n            cellInfoByElement: function(element) {\n                element = $(element);\n\n                return this.cellInfo(element.index(), element.parent(\"tr\").index());\n            },\n\n            cellInfo: function(columnIndex, rowIndex) {\n                var contentBuilder = this._contentBuilder;\n                var columnInfo = contentBuilder.columnIndexes[columnIndex || 0];\n                var rowInfo = contentBuilder.rowIndexes[rowIndex || 0];\n                var dataIndex;\n\n                if (!columnInfo || !rowInfo) {\n                    return null;\n                }\n\n                dataIndex = (rowInfo.index * contentBuilder.rowLength) + columnInfo.index;\n\n                return {\n                    columnTuple: columnInfo.tuple,\n                    rowTuple: rowInfo.tuple,\n                    measure: columnInfo.measure || rowInfo.measure,\n                    dataItem: this.dataSource.view()[dataIndex]\n                };\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                if (this.measuresTarget) {\n                    this.measuresTarget.setDataSource(dataSource);\n                }\n\n                if (this.rowsTarget) {\n                    this.rowsTarget.setDataSource(dataSource);\n                }\n\n                if (this.columnsTarget) {\n                    this.columnsTarget.setDataSource(dataSource);\n                }\n\n                this._bindConfigurator();\n\n                if (this.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n\n                this._templates();\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                clearTimeout(this._headerReflowTimeout);\n            },\n\n            _dataSource: function() {\n                var that = this;\n                var dataSource = that.options.dataSource;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (that.dataSource && this._refreshHandler) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler)\n                                   .unbind(STATERESET, that._stateResetHandler)\n                                   .unbind(PROGRESS, that._progressHandler)\n                                   .unbind(ERROR, that._errorHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                    that._stateResetHandler = that._stateReset.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSource.create(dataSource)\n                                       .bind(CHANGE, that._refreshHandler)\n                                       .bind(PROGRESS, that._progressHandler)\n                                       .bind(STATERESET, that._stateResetHandler)\n                                       .bind(ERROR, that._errorHandler);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _stateReset: function() {\n                this._columnBuilder.reset();\n                this._rowBuilder.reset();\n            },\n\n            _wrapper: function() {\n                var height = this.options.height;\n\n                this.wrapper = this.element.addClass(\"k-pivot\");\n\n                if (height) {\n                    this.wrapper.css(\"height\", height);\n                }\n            },\n\n            _measureFields: function() {\n                this.measureFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-measures\");\n\n                this.measuresTarget = this._createSettingTarget(this.measureFields, {\n                    setting: \"measures\",\n                    messages: {\n                        empty: this.options.messages.measureFields\n                    }\n                });\n            },\n\n            _createSettingTarget: function(element, options) {\n                var template,\n                    pivotOptions = this.options;\n\n                template = function (ref) {\n                    var sortIcon = ref.sortIcon;\n                    var name = ref.name;\n\n                    return ''\n                    + \"<span class=\\\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\\\" tabindex=\\\"0\\\" data-\" + (kendo.ns) + \"name=\\\"\" + name + \"\\\">\"\n                        + '<span class=\"k-chip-content\">'\n                            + \"<span class=\\\"k-chip-text\\\">\" + name + \"</span>\"\n                        + '</span>'\n                        + '<span class=\"k-chip-actions k-field-actions\">'\n                            + getIcons(sortIcon, options, pivotOptions)\n                        + '</span>'\n                    + '</span>';\n                };\n\n                return new kendo.ui.PivotSettingTarget(element, $.extend({\n                    dataSource: this.dataSource,\n                    template: template,\n                    emptyTemplate: function (data) { return (\"<span class=\\\"k-empty\\\">\" + data + \"</span>\"); },\n                    enabled: this.options.reorderable\n                }, options));\n            },\n\n            _initSettingTargets: function() {\n                this.columnsTarget = this._createSettingTarget(this.columnFields, {\n                    connectWith: this.rowFields,\n                    setting: \"columns\",\n                    filterable: this.options.filterable,\n                    sortable: this.options.sortable,\n                    messages: {\n                        empty: this.options.messages.columnFields,\n                        fieldMenu: this.options.messages.fieldMenu\n                    }\n                });\n\n                this.rowsTarget = this._createSettingTarget(this.rowFields, {\n                    connectWith: this.columnFields,\n                    setting: \"rows\",\n                    filterable: this.options.filterable,\n                    sortable: this.options.sortable,\n                    messages: {\n                        empty: this.options.messages.rowFields,\n                        fieldMenu: this.options.messages.fieldMenu\n                    }\n                });\n            },\n\n            _createLayout: function() {\n                var that = this;\n                var layoutTable = $(LAYOUT_TABLE);\n                var leftContainer = layoutTable.find(\".k-pivot-rowheaders\");\n                var rightContainer = layoutTable.find(\".k-pivot-table\");\n                var gridWrapper = $(DIV).addClass(\"k-grid\");\n\n                that._measureFields();\n                that.columnFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-columns\");\n\n                that.rowFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-rows\");\n                that.columnsHeader = $('<div class=\"k-grid-header-wrap\" />')\n                                        .wrap('<div class=\"k-grid-header\" />');\n\n                that.columnsHeader.parent().css(\"padding-right\", kendo.support.scrollbar());\n\n                that.rowsHeader = $('<div class=\"k-grid k-alt\"/>');\n                that.content = $('<div class=\"k-grid-content\" />');\n\n                leftContainer.append(that.measureFields);\n                leftContainer.append(that.rowFields);\n                leftContainer.append(that.rowsHeader);\n\n                gridWrapper.append(that.columnsHeader.parent());\n                gridWrapper.append(that.content);\n\n                rightContainer.append(that.columnFields);\n                rightContainer.append(gridWrapper);\n\n                that.wrapper.append(layoutTable);\n\n                that.columnsHeaderTree = new kendo.dom.Tree(that.columnsHeader[0]);\n                that.rowsHeaderTree = new kendo.dom.Tree(that.rowsHeader[0]);\n                that.contentTree = new kendo.dom.Tree(that.content[0]);\n\n                that._initSettingTargets();\n            },\n\n            _progress: function(toggle) {\n                kendo.ui.progress(this.wrapper, toggle);\n            },\n\n            _resize: function() {\n                if (this.content[0].firstChild) {\n                    this._setSectionsWidth();\n                    this._setSectionsHeight();\n                    this._setContentWidth();\n                    this._setContentHeight();\n                    this._columnHeaderReflow();\n                }\n            },\n\n            _columnHeaderReflow: function() {\n                var columnTable = this.columnsHeader.children(\"table\");\n\n                if (!kendo.support.browser.mozilla) {\n                    return;\n                }\n\n                clearTimeout(this._headerReflowTimeout);\n\n                columnTable.css(\"table-layout\", \"auto\");\n\n                this._headerReflowTimeout = setTimeout(function() {\n                    columnTable.css(\"table-layout\", \"\");\n                });\n            },\n\n            _setSectionsWidth: function() {\n                var rowsHeader = this.rowsHeader;\n                var leftColumn = rowsHeader.parent(\".k-pivot-rowheaders\").width(AUTO);\n                var width;\n\n                width = Math.max(outerWidth(this.measureFields), outerWidth(this.rowFields));\n                width = Math.max(rowsHeader.children(\"table\").width(), width);\n\n                leftColumn.width(width);\n            },\n\n            _setSectionsHeight: function() {\n                var measureFieldsHeight = this.measureFields.height(AUTO).height();\n                var columnFieldsHeight = this.columnFields.height(AUTO).height();\n                var rowFieldsHeight = this.rowFields.height(AUTO).innerHeight();\n                var columnsHeight = this.columnsHeader.height(AUTO).innerHeight();\n\n                var padding = rowFieldsHeight - this.rowFields.height();\n\n                var firstRowHeight = columnFieldsHeight > measureFieldsHeight ? columnFieldsHeight : measureFieldsHeight;\n                var secondRowHeight = columnsHeight > rowFieldsHeight ? columnsHeight : rowFieldsHeight;\n\n                this.measureFields.height(firstRowHeight);\n                this.columnFields.height(firstRowHeight);\n                this.rowFields.height(secondRowHeight - padding);\n                this.columnsHeader.height(secondRowHeight);\n            },\n\n            _setContentWidth: function() {\n                var contentTable = this.content.find(\"table\");\n                var columnTable = this.columnsHeader.children(\"table\");\n\n                var rowLength = contentTable.children(\"colgroup\").children().length;\n\n                var calculatedWidth = rowLength * this.options.columnWidth;\n                var minWidth = Math.ceil((calculatedWidth / this.content.width()) * 100);\n\n                if (minWidth < 100) {\n                    minWidth = 100;\n                }\n\n                contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n\n                this._resetColspan(columnTable);\n            },\n\n            _setContentHeight: function() {\n                var that = this;\n                var content = that.content;\n                var rowsHeader = that.rowsHeader;\n                var innerHeight = that.wrapper.innerHeight();\n                var scrollbar = kendo.support.scrollbar();\n                var skipScrollbar = content[0].offsetHeight === content[0].clientHeight;\n                var height = that.options.height;\n\n                if (that.wrapper.is(\":visible\")) {\n                    if (!innerHeight || !height) {\n                        if (skipScrollbar) {\n                            scrollbar = 0;\n                        }\n\n                        content.height(\"auto\");\n                        rowsHeader.height(content.height() - scrollbar);\n                        return;\n                    }\n\n                    innerHeight -= outerHeight(that.columnFields);\n                    innerHeight -= outerHeight(that.columnsHeader.parent());\n\n                    if (innerHeight <= scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                        innerHeight = scrollbar * 2 + 1;\n                        if (!skipScrollbar) {\n                            innerHeight += scrollbar;\n                        }\n                    }\n\n                    content.height(innerHeight);\n\n                    if (skipScrollbar) {\n                        scrollbar = 0;\n                    }\n\n                    rowsHeader.height(innerHeight - scrollbar);\n                }\n            },\n\n            _resetColspan: function(columnTable) {\n                var that = this;\n                var cell = columnTable.children(\"tbody\").children().first().children().first();\n\n                if (that._colspan === undefined$1) {\n                    that._colspan = cell.attr(\"colspan\");\n                }\n\n                cell.attr(\"colspan\", 1);\n\n                clearTimeout(that._layoutTimeout);\n\n                that._layoutTimeout = setTimeout(function() {\n                    cell.attr(\"colspan\", that._colspan);\n                    that._colspan = undefined$1;\n                });\n            },\n\n            _axisMeasures: function(axis) {\n                var result = [];\n                var dataSource = this.dataSource;\n                var measures = dataSource.measures();\n                var hasMeasure = measures.length > 1 || (measures[0] && measures[0].type);\n\n                if (dataSource.measuresAxis() === axis) {\n                    if (dataSource[axis]().length === 0 || hasMeasure) {\n                        result = measures;\n                    }\n                }\n\n                return result;\n            },\n\n            items: function() {\n                return [];\n            },\n\n            refresh: function() {\n                var that = this;\n                var dataSource = that.dataSource;\n\n                var axes = dataSource.axes();\n                var columns = (axes.columns || {}).tuples || [];\n                var rows = (axes.rows || {}).tuples || [];\n\n                var columnBuilder = that._columnBuilder;\n                var rowBuilder = that._rowBuilder;\n\n                var columnAxis = {};\n                var rowAxis = {};\n\n                if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                    return;\n                }\n\n                columnBuilder.measures = that._axisMeasures(AXIS_COLUMNS);\n                rowBuilder.measures = that._axisMeasures(AXIS_ROWS);\n\n                that.columnsHeaderTree.render(columnBuilder.build(columns));\n                that.rowsHeaderTree.render(rowBuilder.build(rows));\n\n                columnAxis = {\n                    indexes: columnBuilder._indexes,\n                    measures: columnBuilder.measures,\n                    metadata: columnBuilder.metadata\n                };\n\n                rowAxis = {\n                    indexes: rowBuilder._indexes,\n                    measures: rowBuilder.measures,\n                    metadata: rowBuilder.metadata\n                };\n\n                that.contentTree.render(that._contentBuilder.build(dataSource.view(), columnAxis, rowAxis));\n\n                that._resize();\n\n                if (that.touchScroller) {\n                    that.touchScroller.contentResized();\n                } else {\n                    var touchScroller = kendo.touchScroller(that.content);\n\n                    if (touchScroller && touchScroller.movable) {\n                        that.touchScroller = touchScroller;\n\n                        touchScroller.movable.bind(\"change\", function(e) {\n                            kendo.scrollLeft(that.columnsHeader, -e.sender.x);\n                            that.rowsHeader.scrollTop(-e.sender.y);\n                        });\n                    }\n                }\n\n                that._progress(false);\n\n                that.trigger(DATABOUND);\n            },\n\n            _scrollable: function() {\n                var that = this;\n                var columnsHeader = that.columnsHeader;\n                var rowsHeader = that.rowsHeader;\n\n                that.content.on(\"scroll\", function() {\n                    kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                    rowsHeader.scrollTop(this.scrollTop);\n                });\n\n                rowsHeader.on(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n            },\n\n            _wheelScroll: function(e) {\n                if (e.ctrlKey) {\n                    return;\n                }\n\n                var delta = kendo.wheelDeltaY(e);\n                var scrollTop = this.content.scrollTop();\n\n                if (delta) {\n                    e.preventDefault();\n                    //In Firefox DOMMouseScroll event cannot be canceled\n                    $(e.currentTarget).closest(\":not(path,svg)\").one(\"wheel\" + NS, false);\n\n                    this.rowsHeader.scrollTop(scrollTop + (-delta));\n                    this.content.scrollTop(scrollTop + (-delta));\n                }\n            }\n        });\n\n        var element = kendo.dom.element;\n        var htmlNode = kendo.dom.html;\n\n        var createMetadata = function(levelNum, memberIdx) {\n           return {\n                maxChildren: 0,\n                children: 0,\n                maxMembers: 0,\n                members: 0,\n                measures: 1,\n                levelNum: levelNum,\n                parentMember: memberIdx !== 0\n            };\n        };\n\n        var buildPath = function(tuple, index) {\n            var path = [];\n            var idx = 0;\n\n            for (; idx <= index; idx++) {\n                path.push(tuple.members[idx].name);\n            }\n\n            return path;\n        };\n\n        var tupleName = function(tuple, index) {\n            var name = \"\";\n            var idx = 0;\n\n            for (; idx <= index; idx++) {\n                name += tuple.members[idx].name;\n            }\n\n            return name;\n        };\n\n        var ContentBuilderV2 = Class.extend({\n            init: function(options) {\n                this.template = kendo.template(options.template);\n                this.ariaId = options.ariaId;\n                this.hash = [];\n            },\n\n            setRowColumnInfo: function(options) {\n                this.data = options.data;\n                this.columnHeaderLeafs = options.columnHeaderLeafs;\n                this.rowHeaderLeafs = options.rowHeaderLeafs;\n                this.columnHeaderBreadth = options.columnHeaderBreadth;\n                this.rowHeaderDepth = options.rowHeaderDepth;\n                this.hash.length = 0;\n            },\n\n            addColElements: function(count) {\n                var html = \"\";\n\n                for (var index = 0; index < count; index++) {\n                    html += \"<col>\";\n                }\n\n                this.table.find(\"colgroup\").append(html);\n            },\n\n            addRowElements: function(data) {\n                var that = this;\n                var body = that.table.find(\"tbody\");\n                var row;\n\n                for (var index = 0; index < data.length; index++) {\n                    row = $((\"<tr class=\\\"\" + (tableStyles.tableRow) + \" k-pivotgrid-row\\\" role='presentation'></tr>\"));\n                    body.append(row);\n                    that.addColumCell(row, data[index], index);\n                }\n\n                this.rowsCount = data.length;\n            },\n\n            addColumCell: function(rowEl, rowItem, rowIndex) {\n                var that = this;\n                for (var index = 0; index < rowItem.cells.length; index++) {\n                    var cell = rowItem.cells[index];\n                    if (cell) {\n                        var cellEl = $((\"<td id=\\\"\" + (that.ariaId) + \"-cell-\" + (rowIndex + 1) + \"-\" + (index + 1) + \"\\\" class=\\\"\" + (tableStyles.tableCell) + \" k-pivotgrid-cell\\\" role=\\\"gridcell\\\"></td>\"));\n                        if (this.rowHeaderLeafs[rowIndex].total || this.columnHeaderLeafs[index].total) {\n                            cellEl.addClass(\"k-pivotgrid-header-total\");\n                        }\n                        cellEl.append(that.template({\n                            dataItem: cell.data,\n                            rowTuple: cell.rowTuple,\n                            columnTuple: cell.columnTuple\n                        }));\n                        this.hash.push(cell);\n                        rowEl.append(cellEl);\n                    }\n                }\n            },\n\n            build: function() {\n                var data = toData((this.data || []).slice(), this.columnHeaderLeafs, this.rowHeaderLeafs, this.columnHeaderBreadth, this.rowHeaderDepth);\n                var that = this;\n\n                var table = $((\"<table class='\" + (tableStyles.contentTable) + \" k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='\" + (tableStyles.tbody) + \" k-pivotgrid-tbody' role='presentation'></tbody></table>\"));\n\n                that.table = table;\n                that.addColElements(this.columnHeaderLeafs.length);\n                that.addRowElements(data);\n                this.rowsCount = data.length;\n                this.columnsCount = this.columnHeaderLeafs.length;\n\n                return that.table;\n            }\n        });\n\n        var ColumnRowBuilder = Class.extend({\n            init: function(options) {\n                this.tuples = options.tuples;\n                this.axes = options.axes;\n                this.ariaId = options.ariaId;\n                this.headerTemplate = kendo.template(HEADERTEMPLATE);\n                if (options.template) {\n                    this.template = kendo.template(options.template);\n                }\n            },\n\n            setTuples: function(tuples) {\n                this.tuples = tuples;\n            },\n\n            addColElements: function(count) {\n                var html = \"\";\n\n                for (var index = 0; index < count; index++) {\n                    html += \"<col>\";\n                }\n\n                this.table.find(\"colgroup\").append(html);\n            },\n\n            addRowElements: function(columnHeaderRows) {\n                var that = this;\n                var body = that.table.find(\"tbody\");\n                var row;\n\n                for (var index = 0; index < columnHeaderRows.length; index++) {\n                    row = $('<tr class=\"k-table-row k-pivotgrid-row\" role=\"row\"></tr>');\n                    body.append(row);\n                    that.addColumCell(row, columnHeaderRows[index], index);\n                }\n            },\n\n            addColumCell: function(rowEl, rowItem, rowIndex) {\n                var that = this;\n                var cellEl;\n                var cell;\n\n                for (var index = 0; index < rowItem.cells.length; index++) {\n                    cell = rowItem.cells[index];\n                    if (cell) {\n                        cellEl = $(that.headerTemplate({\n                            id: ((that.ariaId) + \"-\" + (that.axes == \"columns\" ? \"ch\" : \"rh\") + \"-\" + (rowIndex + 1) + \"-\" + (index + 1)),\n                            rowspan: cell.rowSpan,\n                            colspan: cell.colSpan,\n                            key: cell.path.join(\",\") + (cell.total ? '|[TOTAL]' : ''),\n                            iconClass: (cell.children && cell.children.length) ? \"up\" : \"down\",\n                            expandable: cell.hasChildren && !cell.total,\n                            expanded: (cell.children && cell.children.length) ? \"true\" : \"false\",\n                            headerClass: kendo.format(\"k-pivotgrid-cell{0}{1}\", cell.total ? \" k-pivotgrid-header-total\" : \"\", cell.levelNum === 0 ? \" k-pivotgrid-header-root\" : \"\"),\n                            role: that.axes == \"columns\" ? \"columnheader\" : \"rowheader\"\n                        }));\n                        cellEl.append(that.template ? that.template({ member: cell }) : cell.caption);\n                        rowEl.append(cellEl);\n                    }\n                }\n            },\n\n            build: function() {\n                var tree = toTree((this.tuples || []).slice());\n                var treeData = this.axes == \"columns\" ? toColumns(tree) : toRows(tree);\n                var headerRows = treeData[0];\n                var headerLeafs = treeData[1];\n                var breadth = treeData[2];\n                var rowHeaderBreadth = treeData[3];\n                var that = this;\n                that._tree = tree;\n                that._breadth = breadth;\n                that._headerLeafs = headerLeafs;\n\n                var table = $((\"<table class='\" + (tableStyles.headerTable) + \" k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='\" + (tableStyles.tbody) + \" k-pivotgrid-tbody' role='rowgroup'></tbody></table>\"));\n\n                that.table = table;\n                that.addColElements(this.axes == \"columns\" ? headerLeafs.length : rowHeaderBreadth);\n                that.addRowElements(headerRows);\n\n                return that.table;\n            },\n\n            getTree: function() {\n                return this._tree;\n            },\n\n            getBreadth: function() {\n                return this._breadth;\n            },\n\n            getHeaderLeafs: function() {\n                return this._headerLeafs;\n            }\n        });\n\n        var ColumnBuilder = Class.extend({\n            init: function() {\n                this.measures = 1;\n                this.metadata = {};\n            },\n\n            build: function(tuples) {\n                var tbody = this._tbody(tuples);\n                var colgroup = this._colGroup();\n\n                return [\n                    element(\"table\", { className: tableStyles.headerTable }, [colgroup, tbody])\n                ];\n            },\n\n            reset: function() {\n                this.metadata = {};\n            },\n\n            _colGroup: function() {\n                var length = this._rowLength();\n                var children = [];\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    children.push(element(\"col\", null));\n                }\n\n                return element(\"colgroup\", null, children);\n            },\n\n            _tbody: function(tuples) {\n                var root = tuples[0];\n\n                this.map = {};\n                this.rows = [];\n                this.rootTuple = root;\n\n                this._indexes = [];\n\n                if (root) {\n                    this._buildRows(root, 0);\n                    this._normalize();\n                } else {\n                    this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"th\", { className: tableStyles.header } , [ htmlNode(\"&nbsp;\") ]) ]));\n                }\n\n                return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n            },\n\n            _normalize: function() {\n                var rows = this.rows;\n                var rowsLength = rows.length;\n                var rowIdx = 0;\n                var row;\n\n                var cellsLength;\n                var cellIdx;\n                var cells;\n                var cell;\n\n                for (; rowIdx < rowsLength; rowIdx++) {\n                    row = rows[rowIdx];\n\n                    if (row.rowSpan === 1) {\n                        continue;\n                    }\n\n                    cells = row.children;\n\n                    cellIdx = 0;\n                    cellsLength = cells.length;\n\n                    for (; cellIdx < cellsLength; cellIdx++) {\n                        cell = cells[cellIdx];\n\n                        if (cell.tupleAll) {\n                            cell.attr.rowSpan = row.rowSpan;\n                        }\n                    }\n                }\n            },\n\n            _rowIndex: function(row) {\n                var rows = this.rows;\n                var length = rows.length;\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    if (rows[idx] === row) {\n                        break;\n                    }\n                }\n\n                return idx;\n            },\n\n            _rowLength: function() {\n                var cells = this.rows[0] ? this.rows[0].children : [];\n                var length = cells.length;\n                var rowLength = 0;\n                var idx = 0;\n\n                if (length) {\n                    for (; idx < length; idx++) {\n                        rowLength += cells[idx].attr.colSpan || 1;\n                    }\n                }\n\n                if (!rowLength) {\n                    rowLength = this.measures;\n                }\n\n                return rowLength;\n            },\n\n            _row: function(tuple, memberIdx, parentMember) {\n                var rootName = this.rootTuple.members[memberIdx].name;\n                var levelNum = tuple.members[memberIdx].levelNum;\n                var rowKey = rootName + levelNum;\n                var map = this.map;\n                var parentRow;\n                var children;\n\n                var row = map[rowKey];\n\n                if (!row) {\n                    row = element(\"tr\", { className: tableStyles.tableRow }, []);\n\n                    row.parentMember = parentMember;\n                    row.collapsed = 0;\n                    row.colSpan = 0;\n                    row.rowSpan = 1;\n\n                    map[rowKey] = row;\n                    parentRow = map[rootName + (Number(levelNum) - 1)];\n\n                    if (parentRow) {\n                        children = parentRow.children;\n\n                        if (children[1] && children[1].attr.className.indexOf(\"k-alt\") === -1) {\n                            row.notFirst = true;\n                        } else {\n                            row.notFirst = parentRow.notFirst;\n                        }\n                    }\n\n                    this.rows.splice(this._rowIndex(parentRow) + 1, 0, row);\n                } else {\n                    row.notFirst = false;\n\n                    if (!row.parentMember || row.parentMember !== parentMember) {\n                        row.parentMember = parentMember;\n                        row.collapsed = 0;\n                        row.colSpan = 0;\n                    }\n                }\n\n                return row;\n            },\n\n            _measures: function(measures, tuple, className) {\n                var map = this.map;\n                var row = map.measureRow;\n                var measure;\n\n                if (!row) {\n                    row = element(\"tr\", { className: tableStyles.tableRow }, []);\n                    map.measureRow = row;\n                    this.rows.push(row);\n                }\n\n                for (var idx = 0, length = measures.length; idx < length; idx++) {\n                    measure = measures[idx];\n                    row.children.push(this._cell((className || \"\"), [this._content(measure, tuple)], measure));\n                }\n\n                return length;\n            },\n\n            _content: function(member, tuple) {\n                return htmlNode(this.template({\n                    member: member,\n                    tuple: tuple\n                }), true);\n            },\n\n            _cell: function(className, children, member) {\n                var cell = element(\"th\", { className: tableStyles.header + \" \" + className }, children);\n                cell.value = member.caption || member.name;\n                return cell;\n            },\n\n            _buildRows: function(tuple, memberIdx, parentMember) {\n                var members = tuple.members;\n                var member = members[memberIdx];\n                var nextMember = members[memberIdx + 1];\n\n                var row, childRow, children, childrenLength;\n                var cell, allCell, cellAttr;\n                var cellChildren = [];\n                var path;\n\n                var idx = 0;\n                var metadata;\n\n                var colSpan;\n                var collapsed = 0;\n                var memberCollapsed = 0;\n\n                if (member.measure) {\n                    this._measures(member.children, tuple);\n                    return;\n                }\n\n                path = kendo.stringify(buildPath(tuple, memberIdx));\n                row = this._row(tuple, memberIdx, parentMember);\n\n                children = member.children;\n                childrenLength = children.length;\n\n                metadata = this.metadata[path];\n                if (!metadata) {\n                    this.metadata[path] = metadata = createMetadata(Number(member.levelNum), memberIdx);\n                    metadata.rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n                }\n\n                this._indexes.push({\n                    path: path,\n                    tuple: tuple\n                });\n\n                if (member.hasChildren) {\n                    if (metadata.expanded === false) {\n                        collapsed = metadata.maxChildren;\n                        row.collapsed += collapsed;\n\n                        metadata.children = 0;\n                        childrenLength = 0;\n                    }\n\n                    var cellIconEl = $(\"<span></span>\");\n                    cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                    cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME }), true));\n                }\n\n                cellChildren.push(this._content(member, tuple));\n                cell = this._cell((row.notFirst ? \" k-first\" : \"\"), cellChildren, member);\n\n                row.children.push(cell);\n                row.colSpan += 1;\n\n                if (childrenLength) {\n                    allCell = this._cell(\" k-alt\", [this._content(member, tuple)], member);\n                    row.children.push(allCell);\n\n                    for (; idx < childrenLength; idx++) {\n                        childRow = this._buildRows(children[idx], memberIdx, member);\n                    }\n\n                    colSpan = childRow.colSpan;\n                    collapsed = childRow.collapsed;\n\n                    cell.attr.colSpan = colSpan;\n\n                    metadata.children = colSpan;\n                    metadata.members = 1;\n\n                    row.colSpan += colSpan;\n                    row.collapsed += collapsed;\n                    row.rowSpan = childRow.rowSpan + 1;\n\n                    if (nextMember) {\n                        if (nextMember.measure) {\n                            colSpan = this._measures(nextMember.children, tuple, \" k-alt\");\n                        } else {\n                            childRow = this._buildRows(tuple, memberIdx + 1);\n                            colSpan = childRow.colSpan;\n\n                            row.collapsed += childRow.collapsed;\n                            memberCollapsed = childRow.collapsed;\n                        }\n\n                        allCell.attr.colSpan = colSpan;\n                        colSpan -= 1;\n\n                        metadata.members += colSpan;\n                        row.colSpan += colSpan;\n                    }\n                } else if (nextMember) {\n                    if (nextMember.measure) {\n                        colSpan = this._measures(nextMember.children, tuple);\n                    } else {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        colSpan = childRow.colSpan;\n\n                        row.collapsed += childRow.collapsed;\n                        memberCollapsed = childRow.collapsed;\n                    }\n\n                    metadata.members = colSpan;\n\n                    if (colSpan > 1) {\n                        cell.attr.colSpan = colSpan;\n                        row.colSpan += colSpan - 1;\n                    }\n                }\n\n                if (metadata.maxMembers < (metadata.members + memberCollapsed)) {\n                    metadata.maxMembers = metadata.members + memberCollapsed;\n                }\n\n                children = metadata.children + collapsed;\n\n                if (metadata.maxChildren < children) {\n                    metadata.maxChildren = children;\n                }\n\n                (allCell || cell).tupleAll = true;\n\n                return row;\n            }\n        });\n\n        var RowBuilder = Class.extend({\n            init: function() {\n                this.metadata = {};\n            },\n\n            build: function(tuples) {\n                var tbody = this._tbody(tuples);\n                var colgroup = this._colGroup();\n\n                return [\n                    element(\"table\", { className: tableStyles.table }, [colgroup, tbody])\n                ];\n            },\n\n            reset: function() {\n                this.metadata = {};\n            },\n\n            _rowLength: function() {\n                var children = this.rows[0].children;\n                var length = 0;\n                var idx = 0;\n\n                var cell = children[idx];\n\n                while (cell) {\n                    length += (cell.attr.colSpan || 1);\n                    cell = children[++idx];\n                }\n\n                return length;\n            },\n\n            _colGroup: function() {\n                var length = this._rowLength();\n                var children = [];\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    children.push(element(\"col\", null));\n                }\n\n                return element(\"colgroup\", null, children);\n            },\n\n            _tbody: function(tuples) {\n                var root = tuples[0];\n\n                this.rootTuple = root;\n                this.rows = [];\n                this.map = {};\n\n                this._indexes = [];\n\n                if (root) {\n                    this._buildRows(root, 0);\n                    this._normalize();\n                } else {\n                    this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n                }\n\n                return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n            },\n\n            _normalize: function() {\n                var rows = this.rows;\n                var rowsLength = rows.length;\n                var rowIdx = 0;\n\n                var members = this.rootTuple.members;\n                var firstMemberName = members[0].name;\n                var membersLength = members.length;\n                var memberIdx = 0;\n\n                var row;\n                var cell;\n                var maxcolSpan;\n                var map = this.map;\n                var allRow;\n\n                for (; rowIdx < rowsLength; rowIdx++) {\n                    row = rows[rowIdx];\n\n                    for (memberIdx = 0; memberIdx < membersLength; memberIdx++) {\n                        maxcolSpan = this[members[memberIdx].name];\n                        cell = row.colSpan[\"dim\" + memberIdx];\n\n                        if (cell && cell.colSpan < maxcolSpan) {\n                            cell.attr.colSpan = (maxcolSpan - cell.colSpan) + 1;\n                        }\n                    }\n                }\n\n                row = map[firstMemberName];\n                allRow = map[firstMemberName + \"all\"];\n\n                if (row) {\n                    row.children[0].attr.className = tableStyles.tableCell + \" k-first\";\n                }\n\n                if (allRow) {\n                    allRow.children[0].attr.className += \" k-first \" + tableStyles.tableCell;\n                }\n            },\n\n            _row: function(children) {\n                var row = element(\"tr\", { className: tableStyles.tableRow }, children);\n                row.rowSpan = 1;\n                row.colSpan = {};\n\n                this.rows.push(row);\n\n                return row;\n            },\n\n            _content: function(member, tuple) {\n                return htmlNode(this.template({\n                    member: member,\n                    tuple: tuple\n                }), true);\n            },\n\n            _cell: function(className, children, member) {\n                var cell = element(\"td\", { className: tableStyles.tableCell + \" \" + className }, children);\n                cell.value = member.caption || member.name;\n                return cell;\n            },\n\n            _buildRows: function(tuple, memberIdx) {\n                var map = this.map;\n                var path;\n\n                var members = tuple.members;\n                var member = members[memberIdx];\n                var nextMember = members[memberIdx + 1];\n\n                var children = member.children;\n                var childrenLength = children.length;\n\n                var levelNum = Number(member.levelNum);\n                var rootName = this.rootTuple.members[memberIdx].name;\n                var tuplePath = buildPath(tuple, memberIdx - 1).join(\"\");\n                var rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n                var parentName = tuplePath + (rootLevelNum === levelNum ? \"\" : (member.parentName || \"\"));\n                var row = map[parentName + \"all\"] || map[parentName];\n                var colSpan = levelNum + 1;\n\n                var cell, allCell;\n                var childRow, allRow;\n                var metadata;\n                var className;\n                var cellChildren = [];\n                var expandIconAttr;\n                var idx;\n\n                if (!row || row.hasChild) {\n                    row = this._row();\n                } else {\n                    row.hasChild = true;\n                }\n\n                if (member.measure) {\n                    className = row.allCell ? \"k-grid-footer\" : \"\";\n                    row.children.push(this._cell(className, [ this._content(children[0], tuple) ], children[0]));\n\n                    row.rowSpan = childrenLength;\n\n                    for (idx = 1; idx < childrenLength; idx++) {\n                        this._row([ this._cell(className, [ this._content(children[idx], tuple) ], children[idx]) ]);\n                    }\n\n                    return row;\n                }\n\n                map[tuplePath + member.name] = row;\n\n                path = kendo.stringify(buildPath(tuple, memberIdx));\n\n                metadata = this.metadata[path];\n                if (!metadata) {\n                    this.metadata[path] = metadata = createMetadata(levelNum, memberIdx);\n                    metadata.rootLevelNum = rootLevelNum;\n                }\n\n                this._indexes.push({\n                    path: path,\n                    tuple: tuple\n                });\n\n                if (member.hasChildren) {\n                    if (metadata.expanded === false) {\n                        childrenLength = 0;\n                        metadata.children = 0;\n                    }\n\n                    var cellIconEl = $(\"<span></span>\");\n                    cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                    cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME }), true));\n                }\n\n                cellChildren.push(this._content(member, tuple));\n\n                className = row.allCell && !childrenLength ? \"k-grid-footer\" : \"\";\n                cell = this._cell(className, cellChildren, member);\n                cell.colSpan = colSpan;\n\n                row.children.push(cell);\n                row.colSpan[\"dim\" + memberIdx] = cell;\n\n                if (!this[rootName] || this[rootName] < colSpan) {\n                    this[rootName] = colSpan;\n                }\n\n                if (childrenLength) {\n                    row.allCell = false;\n                    row.hasChild = false;\n\n                    for (idx = 0; idx < childrenLength; idx++) {\n                        childRow = this._buildRows(children[idx], memberIdx);\n\n                        if (row !== childRow) {\n                            row.rowSpan += childRow.rowSpan;\n                        }\n                    }\n\n                    if (row.rowSpan > 1) {\n                        cell.attr.rowSpan = row.rowSpan;\n                    }\n\n                    metadata.children = row.rowSpan;\n\n                    allCell = this._cell(\"k-grid-footer\", [this._content(member, tuple)], member);\n                    allCell.colSpan = colSpan;\n\n                    allRow = this._row([ allCell ]);\n                    allRow.colSpan[\"dim\" + memberIdx] = allCell;\n                    allRow.allCell = true;\n\n                    map[tuplePath + member.name + \"all\"] = allRow;\n\n                    if (nextMember) {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        allCell.attr.rowSpan = childRow.rowSpan;\n                    }\n\n                    row.rowSpan += allRow.rowSpan;\n\n                    metadata.members = allRow.rowSpan;\n\n                } else if (nextMember) {\n                    row.hasChild = false;\n                    this._buildRows(tuple, memberIdx + 1);\n\n                    (allCell || cell).attr.rowSpan = row.rowSpan;\n\n                    metadata.members = row.rowSpan;\n                }\n\n                if (metadata.maxChildren < metadata.children) {\n                    metadata.maxChildren = metadata.children;\n                }\n\n                if (metadata.maxMembers < metadata.members) {\n                    metadata.maxMembers = metadata.members;\n                }\n\n                return row;\n            }\n        });\n\n        var ContentBuilder = Class.extend({\n            init: function() {\n                this.columnAxis = {};\n                this.rowAxis = {};\n            },\n\n            build: function(data, columnAxis, rowAxis) {\n                var index = columnAxis.indexes[0];\n                var metadata = columnAxis.metadata[index ? index.path : undefined$1];\n\n                this.columnAxis = columnAxis;\n                this.rowAxis = rowAxis;\n\n                this.data = data;\n\n                this.rowLength = metadata ? metadata.maxChildren + metadata.maxMembers : columnAxis.measures.length || 1;\n\n                if (!this.rowLength) {\n                    this.rowLength = 1;\n                }\n\n                var tbody = this._tbody();\n                var colgroup = this._colGroup();\n\n                return [\n                    element(\"table\", { className: tableStyles.contentTable }, [colgroup, tbody])\n                ];\n            },\n\n            _colGroup: function() {\n                var length = this.columnAxis.measures.length || 1;\n                var children = [];\n                var idx = 0;\n\n                if (this.rows[0]) {\n                    length = this.rows[0].children.length;\n                }\n\n                for (; idx < length; idx++) {\n                    children.push(element(\"col\", null));\n                }\n\n                return element(\"colgroup\", null, children);\n            },\n\n            _tbody: function() {\n                this.rows = [];\n\n                if (this.data[0]) {\n                    this.columnIndexes = this._indexes(this.columnAxis, this.rowLength);\n                    this.rowIndexes = this._indexes(this.rowAxis, Math.ceil(this.data.length / this.rowLength));\n\n                    this._buildRows();\n                } else {\n                    this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n                }\n\n                return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n            },\n\n            _indexes: function(axisInfo, total) {\n                var result = [];\n                var axisInfoMember;\n                var indexes = axisInfo.indexes;\n                var metadata = axisInfo.metadata;\n                var measures = axisInfo.measures;\n                var measuresLength = measures.length || 1;\n\n                var current;\n                var dataIdx = 0;\n                var firstEmpty = 0;\n\n                var idx = 0;\n                var length = indexes.length;\n                var measureIdx;\n                var index;\n\n                var children;\n                var skipChildren;\n\n                if (!length) {\n                    for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                        result[measureIdx] = {\n                            index: measureIdx,\n                            measure: measures[measureIdx],\n                            tuple: null\n                        };\n                    }\n\n                    return result;\n                }\n\n                for (; idx < length; idx++) {\n                    axisInfoMember = indexes[idx];\n                    current = metadata[axisInfoMember.path];\n                    children = current.children + current.members;\n                    skipChildren = 0;\n\n                    if (children) {\n                        children -= measuresLength;\n                    }\n\n                    if (current.expanded === false && current.children !== current.maxChildren) {\n                        skipChildren = current.maxChildren;\n                    }\n\n                    if (current.parentMember && current.levelNum === current.rootLevelNum) {\n                        children = -1;\n                    }\n\n                    if (children > -1) {\n                        for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                            index = children + measureIdx;\n                            if (!current.children) {\n                                index += firstEmpty;\n                            }\n\n                            result[children + firstEmpty + measureIdx] = {\n                                children: children,\n                                index: dataIdx,\n                                measure: measures[measureIdx],\n                                tuple: axisInfoMember.tuple\n                            };\n                            dataIdx += 1;\n                        }\n\n                        while (result[firstEmpty] !== undefined$1) {\n                            firstEmpty += 1;\n                        }\n                    }\n\n                    if (firstEmpty === total) {\n                        break;\n                    }\n\n                    dataIdx += skipChildren;\n                }\n\n                return result;\n            },\n\n            _buildRows: function() {\n                var rowIndexes = this.rowIndexes;\n                var length = rowIndexes.length;\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    var rowIndex = rowIndexes[idx];\n                    if (rowIndex) {\n                        this.rows.push(this._buildRow(rowIndex));\n                    }\n                }\n            },\n\n            _buildRow: function(rowInfo) {\n                var startIdx = rowInfo.index * this.rowLength;\n                var columnIndexes = this.columnIndexes;\n                var length = columnIndexes.length;\n                var columnInfo;\n                var cells = [];\n                var idx = 0;\n\n                var templateInfo;\n                var cell, cellContent;\n                var attr, dataItem, measure;\n\n                for (; idx < length; idx++) {\n                    columnInfo = columnIndexes[idx];\n\n                    if (columnInfo === undefined$1) {\n                        continue;\n                    }\n\n                    attr = { className: tableStyles.tableCell };\n                    if (columnInfo.children) {\n                        attr.className += \" k-alt\";\n                    }\n\n                    cellContent = \"\";\n                    dataItem = this.data[startIdx + columnInfo.index];\n                    measure = columnInfo.measure || rowInfo.measure;\n\n                    templateInfo = {\n                        columnTuple: columnInfo.tuple,\n                        rowTuple: rowInfo.tuple,\n                        measure: measure,\n                        dataItem: dataItem\n                    };\n\n                    if (dataItem.value !== \"\" && measure && measure.type) {\n                        if (measure.type === \"status\") {\n                            cellContent = this.kpiStatusTemplate(templateInfo);\n                        } else if (measure.type === \"trend\") {\n                            cellContent = this.kpiTrendTemplate(templateInfo);\n                        }\n                    }\n\n                    if (!cellContent) {\n                        cellContent = this.dataTemplate(templateInfo);\n                    }\n\n                    cell = element(\"td\", attr, [ htmlNode(cellContent) ]);\n                    cell.value = dataItem.value;\n                    cells.push(cell);\n                }\n\n                attr = { className: tableStyles.tableRow };\n                if (rowInfo.children) {\n                    attr.className += \" k-grid-footer\";\n                }\n\n                return element(\"tr\", attr, cells);\n            }\n        });\n\n        ui.plugin(PivotGrid);\n\n        kendo.PivotExcelExporter = kendo.Class.extend({\n            init: function(options) {\n                this.options = options;\n\n                this.widget = options.widget;\n                this.dataSource = this.widget.dataSource;\n            },\n\n            _columns: function() {\n                var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n                var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n                var columnHeaderLength = columnHeaderTable.children[0].children.length;\n                var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n                var width = this.widget.options.columnWidth;\n                var result = [];\n                var idx;\n\n                if (rowHeaderLength && this.dataSource.data()[0]) {\n                    for (idx = 0; idx < rowHeaderLength; idx++) {\n                        result.push({\n                            autoWidth: true\n                        });\n                    }\n                }\n\n                for (idx = 0; idx < columnHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: false,\n                        width: width\n                    });\n                }\n\n                return result;\n            },\n\n            _cells: function(rows, type, callback) {\n                var result = [];\n\n                var i = 0;\n                var length = rows.length;\n\n                var cellsLength;\n                var row, cells;\n                var j, cell;\n\n                for (; i < length; i++) {\n                    row = [];\n                    cells = rows[i].children;\n                    cellsLength = cells.length;\n\n                    for (j = 0; j < cellsLength; j++) {\n                        cell = cells[j];\n\n                        row.push({\n                            background: \"#7a7a7a\",\n                            color: \"#fff\",\n                            value: cell.value,\n                            colSpan: cell.attr.colSpan || 1,\n                            rowSpan: cell.attr.rowSpan || 1\n                        });\n                    }\n\n                    if (callback) {\n                        callback(row, i);\n                    }\n\n                    result.push({\n                        cells: row,\n                        type: type\n                    });\n                }\n\n                return result;\n            },\n\n            _rows: function() {\n                var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n                var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n                var columnHeaderLength = columnHeaderTable.children[0].children.length;\n                var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n                var columnHeaderRows = columnHeaderTable.children[1].children;\n                var rowHeaderRows = rowHeaderTable.children[1].children;\n                var contentRows = this.widget.contentTree.children[0].children[1].children;\n\n                var columnRows = this._cells(columnHeaderRows, \"header\");\n\n                if (rowHeaderLength) {\n                    columnRows[0].cells.splice(0, 0, {\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: \"\",\n                        colSpan: rowHeaderLength,\n                        rowSpan: columnHeaderRows.length\n                    });\n                }\n\n                var dataCallback = function(row, index) {\n                    var j = 0;\n                    var cell, value;\n                    var cells = contentRows[index].children;\n\n                    for (; j < columnHeaderLength; j++) {\n                        cell = cells[j];\n                        value = Number(cell.value);\n\n                        if (isNaN(value)) {\n                            value = cell.value;\n                        }\n\n                        row.push({\n                            background: \"#dfdfdf\",\n                            color: \"#333\",\n                            value: value,\n                            colSpan: 1,\n                            rowSpan: 1\n                        });\n                    }\n                };\n\n                var rowRows = this._cells(rowHeaderRows, \"data\", dataCallback);\n\n                return columnRows.concat(rowRows);\n            },\n\n            _freezePane: function() {\n                var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n                var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n                var rowHeaderLength = rowHeaderTable.children[0].children.length;\n                var columnHeaderRows = columnHeaderTable.children[1].children;\n\n                return {\n                    colSplit: rowHeaderLength,\n                    rowSplit: columnHeaderRows.length\n                };\n            },\n\n            workbook: function() {\n                var promise,\n                    resolveFn = function() {\n                        return {\n                            sheets: [ {\n                                columns: this._columns(),\n                                rows: this._rows(),\n                                freezePane: this._freezePane(),\n                                filter: null\n                            } ]\n                        };\n                    };\n\n                if (this.dataSource.view()[0]) {\n                    promise = $.Deferred();\n                    promise.resolve();\n                } else {\n                    promise = this.dataSource.fetch();\n                }\n\n                return promise.then(resolveFn.bind(this));\n            }\n        });\n\n        var PivotExcelMixin = {\n            extend: function(proto) {\n               proto.events.push(\"excelExport\");\n               proto.options.excel = $.extend(proto.options.excel, this.options);\n               proto.saveAsExcel = this.saveAsExcel;\n            },\n            options: {\n                proxyURL: \"\",\n                filterable: false,\n                fileName: \"Export.xlsx\"\n            },\n            saveAsExcel: function() {\n                var excel = this.options.excel || {};\n\n                var exporter = new kendo.PivotExcelExporter({\n                    widget: this\n                });\n\n                var resolveFn = function(book) {\n                    if (!this.trigger(\"excelExport\", { workbook: book })) {\n                        var workbook = new kendo.ooxml.Workbook(book);\n\n                        workbook.toDataURLAsync().then(function(dataURI) {\n                            kendo.saveAs({\n                                dataURI: dataURI,\n                                fileName: book.fileName || excel.fileName,\n                                proxyURL: excel.proxyURL,\n                                forceProxy: excel.forceProxy\n                            });\n                        });\n                    }\n                };\n\n                exporter.workbook().then(resolveFn.bind(this));\n            }\n        };\n\n        kendo.PivotExcelMixin = PivotExcelMixin;\n\n        if (kendo.ooxml && kendo.ooxml.Workbook) {\n            PivotExcelMixin.extend(PivotGrid.prototype);\n        }\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(PivotGrid.prototype);\n\n            PivotGrid.fn._drawPDF = function() {\n                return this._drawPDFShadow({\n                    width: this.wrapper.width()\n                }, {\n                    avoidLinks: this.options.pdf.avoidLinks\n                });\n            };\n        }\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(PivotGridV2.prototype);\n\n            PivotGridV2.fn._drawPDF = function() {\n                return this._drawPDFShadow({\n                    width: this.wrapper.width()\n                }, {\n                    avoidLinks: this.options.pdf.avoidLinks\n                });\n            };\n        }\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}